//
// Academic License - for use in teaching, academic research, and meeting
// course requirements at degree granting institutions only.  Not for
// government, commercial, or other organizational use.
// File: p_fun.cpp
//
// MATLAB Coder version            : 5.1
// C/C++ source code generated on  : 27-Jul-2021 21:06:12
//

// Include Files
#include "p_fun.h"
#include <cmath>

// Function Definitions
//
// P_FUN
//     P_FK = P_FUN(q,L)
// Arguments    : const double in1[4]
//                const double in2[2]
//                double p_FK[3]
// Return Type  : void
//
void p_fun(const double in1[4], const double in2[2], double p_FK[3])
{
  double b_p_FK_tmp;
  double c_p_FK_tmp;
  double p_FK_tmp;
  double t11;
  double t12;
  double t13;
  double t14;
  double t2;
  double t3;
  double t4;
  double t5;
  double t6;
  double t7;
  double t8;
  double t9;

  //     This function was generated by the Symbolic Math Toolbox version 8.6.
  //     27-Jul-2021 20:38:44
  t2 = std::cos(in1[0]);
  t3 = std::cos(in1[1]);
  t4 = std::cos(in1[2]);
  t5 = std::cos(in1[3]);
  t6 = std::sin(in1[0]);
  t7 = std::sin(in1[1]);
  t8 = std::sin(in1[2]);
  t9 = std::sin(in1[3]);
  t13 = 1.0 / in1[1];
  t14 = 1.0 / in1[3];
  t11 = t2 * t2;
  t12 = std::sin(in1[0] * 2.0);
  p_FK_tmp = in2[1] * t8;
  b_p_FK_tmp = in2[1] * t4;
  c_p_FK_tmp = in2[1] * t2;
  p_FK[0] = ((in2[0] * t2 * t13 * (t3 - 1.0) - c_p_FK_tmp * t7 * t9 * t14) +
             b_p_FK_tmp * t14 * (t5 - 1.0) * ((-t11 + t3 * t11) + 1.0)) +
    p_FK_tmp * t12 * t14 * (t3 - 1.0) * (t5 - 1.0) / 2.0;
  t2 = in2[1] * t6 * t7;
  p_FK[1] = ((-in2[0] * t6 * t13 * (t3 - 1.0) + t2 * t9 * t14) - p_FK_tmp * t14 *
             (t5 - 1.0) * (t11 + t3 * (t6 * t6))) - b_p_FK_tmp * t12 * t14 * (t3
    - 1.0) * (t5 - 1.0) / 2.0;
  p_FK[2] = ((-in2[0] * t7 * t13 - in2[1] * t3 * t9 * t14) - c_p_FK_tmp * t4 *
             t7 * t14 * (t5 - 1.0)) - t2 * t8 * t14 * (t5 - 1.0);
}

//
// File trailer for p_fun.cpp
//
// [EOF]
//
