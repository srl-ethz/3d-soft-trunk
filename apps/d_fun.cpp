//
// Academic License - for use in teaching, academic research, and meeting
// course requirements at degree granting institutions only.  Not for
// government, commercial, or other organizational use.
// File: d_fun.cpp
//
// MATLAB Coder version            : 5.1
// C/C++ source code generated on  : 27-Jul-2021 20:14:01
//

// Include Files
#include "d_fun.h"

// Function Definitions
//
// D_FUN
//  D = d_fun(d_vect,q,dq);
// Arguments    : const double in1[2]
//                const double in2[4]
//                const double in3[4]
//                double D[4]
// Return Type  : void
//
void d_fun(const double in1[2], const double in2[4], const double in3[4], double
           D[4])
{
  //     This function was generated by the Symbolic Math Toolbox version 8.7.
  //     26-Jul-2021 21:32:53
  D[0] = in1[0] * in3[0] * (in2[1] * in2[1]);
  D[1] = in1[0] * in3[1];
  D[2] = in1[1] * in3[2] * (in2[3] * in2[3]);
  D[3] = in1[1] * in3[3];
}

int main(){
  double d_vect[2] = {0.125, 0.125};
  double q[4] = {0.3, 0.5, 0.3, 0.5};
  double dq[4] = {0.5, 0.25, 0.5, 0.25};
  double D[4];
  d_fun(d_vect,q,dq,D);
  Eigen::VectorXd damping = Eigen::VectorXd::Zero(4);
  for (int i = 0; i < 4; i++){
      damping(i) = D[i];
    }
  std::cout << damping << std::endl;
}
//
// File trailer for d_fun.cpp
//
// [EOF]
//
