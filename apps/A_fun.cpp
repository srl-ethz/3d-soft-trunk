//
// Academic License - for use in teaching, academic research, and meeting
// course requirements at degree granting institutions only.  Not for
// government, commercial, or other organizational use.
// File: A_fun.cpp
//
// MATLAB Coder version            : 5.1
// C/C++ source code generated on  : 27-Jul-2021 20:04:08
//

// Include Files
#include "A_fun.h"
#include <cmath>

// Function Definitions
//
// A_FUN
//  A = A_fun(q);
//
//     This function was generated by the Symbolic Math Toolbox version 8.7.
//     26-Jul-2021 21:32:53
// Arguments    : const double in1[4]
//                double A_in[16]
// Return Type  : void
//
void A_fun(const double in1[4], double A_in[16])
{
  double t2;
  double t3;
  double t4;
  double t5;
  double t6;
  double t7;
  t2 = std::cos(in1[0]);
  t3 = std::cos(in1[2]);
  t4 = std::sin(in1[0]);
  t5 = std::sin(in1[1]);
  t6 = std::sin(in1[2]);
  t7 = std::sin(in1[3]);
  A_in[0] = -t2 * t5;
  A_in[1] = -t4;
  A_in[2] = 0.0;
  A_in[3] = 0.0;
  A_in[4] = -t4 * t5;
  A_in[5] = t2;
  A_in[6] = 0.0;
  A_in[7] = 0.0;
  A_in[8] = 0.0;
  A_in[9] = 0.0;
  A_in[10] = -t3 * t7;
  A_in[11] = -t6;
  A_in[12] = 0.0;
  A_in[13] = 0.0;
  A_in[14] = -t6 * t7;
  A_in[15] = t3;
}

int main(){
  double A[16];
  double q[4] = {0.3, 0.4, 0.3, 0.5};
  A_fun(q,A);
  Eigen::MatrixXd Amap = Eigen::MatrixXd::Zero(4,4);
  for (int i = 0; i < 4; i++){
    for(int j = 0; j < 4; j++){
      Amap(i,j) = A[4*i+j];
    }
  }
  std::cout << Amap << std::endl;
}
//
// File trailer for A_fun.cpp
//
// [EOF]
//
