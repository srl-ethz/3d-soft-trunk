#include "3d-soft-trunk/Lagrange.h"

Lagrange::Lagrange(const SoftTrunkParameters &st_params): st_params(st_params)
{
    assert(st_params.is_finalized());
}

void Lagrange::A_update(VectorXd q)
{
  double A_in[16];
  double t2 = std::cos(q[0]);
  double t3 = std::cos(q[2]);
  double t4 = std::sin(q[0]);
  double t5 = std::sin(q[1]);
  double t6 = std::sin(q[2]);
  double t7 = std::sin(q[3]);
  A_in[0] = -t2 * t5;
  A_in[1] = -t4;
  A_in[2] = 0.0;
  A_in[3] = 0.0;
  A_in[4] = -t4 * t5;
  A_in[5] = t2;
  A_in[6] = 0.0;
  A_in[7] = 0.0;
  A_in[8] = 0.0;
  A_in[9] = 0.0;
  A_in[10] = -t3 * t7;
  A_in[11] = -t6;
  A_in[12] = 0.0;
  A_in[13] = 0.0;
  A_in[14] = -t6 * t7;
  A_in[15] = t3;
  Map<MatrixXd> dummy(A_in,4,4);
  A = dummy;
}

void Lagrange::M_update(VectorXd q)
{
  double M_[16];
  double L[2] = {st_params.lengths[0],st_params.lengths[1]}; //length of each link
  double m[2] = {st_params.masses[0],st_params.masses[1]}; //mass of each link + connectors
  double a;
  double a_tmp;
  double a_tmp_tmp;
  double b_a_tmp;
  double b_a_tmp_tmp;
  double b_t127_tmp;
  double b_t130_tmp;
  double b_t138_tmp;
  double c_t127_tmp;
  double t10;
  double t11;
  double t116;
  double t116_tmp;
  double t116_tmp_tmp;
  double t127;
  double t127_tmp;
  double t13;
  double t130;
  double t130_tmp;
  double t132;
  double t134;
  double t134_tmp;
  double t138_tmp;
  double t140;
  double t15;
  double t16;
  double t17;
  double t18;
  double t19;
  double t2;
  double t22;
  double t23;
  double t24;
  double t25;
  double t27;
  double t27_tmp;
  double t3;
  double t32;
  double t33;
  double t4;
  double t42;
  double t44;
  double t45;
  double t45_tmp;
  double t47;
  double t5;
  double t50;
  double t51;
  double t52;
  double t54;
  double t59;
  double t6;
  double t60;
  double t66;
  double t7;
  double t70;
  double t8;
  double t84;
  double t84_tmp;
  double t9;
  double t95;

  //     This function was generated by the Symbolic Math Toolbox version 8.7.
  //     26-Jul-2021 21:32:18
  t2 = std::cos(q[0]);
  t3 = std::cos(q[1]);
  t4 = std::cos(q[2]);
  t5 = std::cos(q[3]);
  t6 = std::sin(q[0]);
  t7 = std::sin(q[1]);
  t8 = std::sin(q[2]);
  t9 = std::sin(q[3]);
  t10 = L[1] * q[1];
  t11 = L[0] * 2.0;
  t13 = L[1] * L[1];
  t24 = 1.0 / (q[3] * q[3]);
  t27_tmp = L[0] * q[3];
  t27 = t27_tmp * -2.0;
  t15 = q[3] * t11;
  t16 = t2 * t2;
  t17 = t4 * t4;
  t18 = t6 * t6;
  t19 = q[1] * t7;
  t22 = 1.0 / (q[1] * q[1]);
  t25 = t7 * t10;
  t32 = t3 * t10;
  t33 = t5 * t10;
  t45_tmp = q[1] * t9;
  t45 = t45_tmp * t10;
  t54 = t3 * t27;
  t60 = t27_tmp * t4 * t6 * 4.0;
  t23 = t22 * t22;
  t42 = std::sin(q[0] + -q[2]);
  t44 = t5 * (t3 * t11);
  t47 = t15 * t19;
  t50 = (t3 - 1.0) * (t3 - 1.0);
  t51 = (t5 - 1.0) * (t5 - 1.0);
  t52 = t5 * t32;
  t66 = t45_tmp * t32;
  t70 = t3 * t5 * -t10;
  a = t19 + (t3 - 1.0);
  t84_tmp = t2 * t6;
  t84 = t84_tmp * t10 * t19;
  t116_tmp_tmp = t4 * t8;
  t116_tmp = t116_tmp_tmp * t19;
  t116 = t116_tmp * t33;
  t59 = t3 * (t9 * t15);
  t95 = a * a;
  t127_tmp = L[1] * m[1];
  b_t127_tmp = t127_tmp * t22 * t24;
  c_t127_tmp = b_t127_tmp * (t5 - 1.0);
  t127 = c_t127_tmp * t42 * ((t15 + t45) + t54) / 4.0;
  a_tmp_tmp = t2 * t4;
  a_tmp = a_tmp_tmp * t19;
  b_a_tmp_tmp = t6 * t8;
  b_a_tmp = b_a_tmp_tmp * t19;
  a = ((((((t27 + t3 * t15) + t47) + t66) + a_tmp * -t10) + b_a_tmp * -t10) +
       a_tmp * t33) + b_a_tmp * t33;
  t132 = a * a;
  t134_tmp = t127_tmp * (1.0 / q[1]) * t24;
  t134 = t134_tmp * (t5 - 1.0) * (((((((((-t10 + t32) + t33) + a_tmp_tmp * t15)
    + b_a_tmp_tmp * t15) + t70) + a_tmp_tmp * t9 * t25) + a_tmp_tmp * t54) +
    b_a_tmp_tmp * t9 * t25) + b_a_tmp_tmp * t54) / 4.0;
  t130_tmp = L[0] * t3;
  b_t130_tmp = L[0] * t5;
  t130 = t134_tmp * t42 * (((((((t11 + t130_tmp * -2.0) + b_t130_tmp * -2.0) +
    -t25) + t9 * t27) + t44) + t5 * t25) + t59) / 4.0;
  t140 = q[1] * t2;
  t134_tmp = t140 * t4;
  t138_tmp = q[1] * t6 * t8;
  b_t138_tmp = L[0] * t2;
  t127_tmp = t27_tmp * t2;
  t11 = b_t127_tmp * (((((((((((((((((((-(t45_tmp * t11) - a_tmp_tmp * t11) -
    b_a_tmp_tmp * t11) - t5 * t7 * t15) + t134_tmp * t10) + t138_tmp * t10) -
    b_a_tmp_tmp * t44) - a_tmp_tmp * t44) - a_tmp_tmp * t59) - b_a_tmp_tmp * t59)
    + t5 * (t134_tmp * -t10)) + t5 * (t138_tmp * -t10)) + L[0] * t7 * t9 * 2.0)
    + L[0] * q[1] * q[3] * t5 * 2.0) + b_t138_tmp * t3 * t4 * 2.0) +
    b_t138_tmp * t4 * t5 * 2.0) + t130_tmp * t6 * t8 * 2.0) + b_t130_tmp * t6 *
                        t8 * 2.0) + t127_tmp * t4 * t9 * 2.0) + t27_tmp * t6 *
                      t8 * t9 * 2.0) / 4.0;
  a_tmp = t2 * t8;
  b_a_tmp = t4 * t6;
  t140 = c_t127_tmp * (((((((((((((((((t127_tmp * t8 * 4.0 + -t60) + t3 * t60) +
    t84) + a_tmp * t45) + b_a_tmp * t47) + t127_tmp * t3 * t8 * -4.0) + a_tmp *
    t19 * t27) + q[1] * t4 * t6 * t9 * -t10) + t116_tmp * -t10) + b_a_tmp *
    t66) + t116) + t2 * t5 * t6 * t19 * -t10) + t140 * t3 * t8 * t9 * -t10) +
    t16 * (t116_tmp_tmp * t10 * t19) * 2.0) + -(t17 * t84 * 2.0)) + t17 *
                        (t84_tmp * t19 * t33) * 2.0) + -(t16 * t116 * 2.0)) /
    4.0;
  a_tmp = t4 * t10;
  b_a_tmp = t4 * t16;
  b_t130_tmp = t84_tmp * t8;
  a = (((((((((((((a_tmp + t2 * t15) + t2 * t54) + t4 * t52) - a_tmp * t16 * 2.0)
               + t3 * t4 * -t10) + t4 * t5 * -t10) + t2 * t9 * t25) + b_a_tmp *
            t32 * 2.0) + b_a_tmp * t33 * 2.0) - b_a_tmp * t52 * 2.0) -
         b_t130_tmp * t10 * 2.0) + b_t130_tmp * t32 * 2.0) + b_t130_tmp * t33 *
       2.0) - b_t130_tmp * t52 * 2.0;
  a_tmp = t8 * t16;
  b_a_tmp = a_tmp_tmp * t6;
  t130_tmp = (((((((((((((t6 * t15 + t8 * -t10) + t8 * t32) + t8 * t33) + t6 *
                       t54) + t8 * t70) + t8 * t10 * t16 * 2.0) + t6 * t9 * t25)
                   - a_tmp * t32 * 2.0) - a_tmp * t33 * 2.0) + a_tmp * t52 * 2.0)
                - b_a_tmp * t10 * 2.0) + b_a_tmp * t32 * 2.0) + b_a_tmp * t33 *
              2.0) - b_a_tmp * t52 * 2.0;
  b_t138_tmp = t7 - q[1] * t3;
  b_t130_tmp = (((((q[1] * t54 + t7 * t15) + t9 * t10 * t19) + t134_tmp * t32)
                 + t138_tmp * t32) + t134_tmp * t70) + t138_tmp * t70;
  a_tmp = m[1] * t22 * t24;
  b_a_tmp = m[0] * (L[0] * L[0]);
  t127_tmp = b_a_tmp * t16;
  t134_tmp = b_a_tmp * t18;
  M_[0] = (((a_tmp * (a * a) / 4.0 + a_tmp * (t130_tmp * t130_tmp) / 4.0) +
           t127_tmp * t22 * t50 / 4.0) + t134_tmp * t22 * t50 / 4.0) + m[1] *
    (t7 * t7) * t13 * t24 * (t42 * t42) * t51 / 4.0;
  M_[1] = -t140;
  M_[2] = -t134;
  M_[3] = t130;
  M_[4] = -t140;
  M_[5] = ((((b_a_tmp * t23 * (b_t138_tmp * b_t138_tmp) / 4.0 + m[1] * t23 *
             t24 * (b_t130_tmp * b_t130_tmp) / 4.0) + t127_tmp * t23 * t95 / 4.0)
           + t134_tmp * t23 * t95 / 4.0) + m[1] * t16 * t23 * t24 * t132 / 4.0)
    + m[1] * t18 * t23 * t24 * t132 / 4.0;
  M_[6] = -t127;
  M_[7] = t11;
  M_[8] = -t134;
  M_[9] = -t127;
  a_tmp = m[1] * t13;
  M_[10] = a_tmp * t24 * t51 / 4.0;
  M_[11] = 0.0;
  M_[12] = t130;
  M_[13] = t11;
  M_[14] = 0.0;
  M_[15] = a_tmp * (t24 * t24) * (((t5 - 1.0) * 2.0 + q[3] * t9 * 2.0) - 1.0 /
    t24) * -0.25;
  //
  Map<MatrixXd> dummy(M_,4,4);
  M = dummy;
}

void Lagrange::g_update(VectorXd q)
{
  double G[4];
  double L[2] = {st_params.lengths[0],st_params.lengths[1]}; //length of each link
  double m[2] = {st_params.masses[0],st_params.masses[1]}; //mass of each link + connectors
  double G_tmp;
  double b_G_tmp;
  double c_G_tmp;
  double d_G_tmp;
  double e_G_tmp;
  double t10;
  double t12;
  double t16;
  double t16_tmp;
  double t2;
  double t3;
  double t4;
  double t5;
  double t6;
  double t7;
  double t8;
  double t9;

  //     This function was generated by the Symbolic Math Toolbox version 8.7.
  //     26-Jul-2021 21:32:53
  t2 = std::cos(q[0]);
  t3 = std::cos(q[1]);
  t4 = std::cos(q[2]);
  t5 = std::cos(q[3]);
  t6 = std::sin(q[0]);
  t7 = std::sin(q[1]);
  t8 = std::sin(q[2]);
  t9 = std::sin(q[3]);
  t10 = q[1] * q[1];
  t12 = 1.0 / q[3];
  t16_tmp = L[1] * g0 * m[1];
  t16 = t16_tmp * t7 * t12 * (t5 - 1.0) * std::sin(q[0] + -q[2]) / 2.0;
  G[0] = t16;
  G_tmp = L[0] * m[0];
  b_G_tmp = L[0] * m[1];
  c_G_tmp = L[1] * m[1];
  d_G_tmp = c_G_tmp * t2 * t3 * t4;
  e_G_tmp = c_G_tmp * t3;
  G[1] = g0 * t12 * ((((((((G_tmp * q[3] * t7 + b_G_tmp * q[3] * t7 * 2.0) -
    G_tmp * q[1] * q[3] * t3) - b_G_tmp * q[1] * q[3] * t3 * 2.0) +
    c_G_tmp * t7 * t9 * t10) + d_G_tmp * t10) + e_G_tmp * t6 * t8 * t10) -
                      d_G_tmp * t5 * t10) - e_G_tmp * t5 * t6 * t8 * t10) / (t10
    * 2.0);
  G[2] = -t16;
  G_tmp = t2 * t4;
  G[3] = t16_tmp * (t12 * t12) * (((((((t3 * t9 - q[3] * t3 * t5) - G_tmp * t7)
    - t6 * t7 * t8) + G_tmp * t5 * t7) + t5 * t6 * t7 * t8) + q[3] * t2 * t4 *
    t7 * t9) + q[3] * t6 * t7 * t8 * t9) / 2.0;
  
  Map<VectorXd> dummy(G,4);
  g = dummy;
}

void Lagrange::k_update(VectorXd q)
{
  double K[4];
  double k_vect[2] = {st_params.k_vect[0],st_params.k_vect[1]};
  K[0] = 0.0;
  K[1] = k_vect[0] * q[1];
  K[2] = 0.0;
  K[3] = k_vect[1] * q[3];
  Map<VectorXd> dummy(K,4);
  k = dummy;
}

void Lagrange::d_update(VectorXd q, VectorXd dq)
{
  double D[4];
  double d_vect[2] = {st_params.d_vect[0],st_params.d_vect[1]};
  D[0] = d_vect[0] * dq[0] * (q[1] * q[1]);
  D[1] = d_vect[0] * dq[1];
  D[2] = d_vect[1] * dq[2] * (q[3] * q[3]);
  D[3] = d_vect[1] * dq[3];
  Map<VectorXd> dummy(D,4);
  d = dummy;
}

void Lagrange::p_update(VectorXd q)
{
  double p_FK[3];
  double L[2] = {st_params.lengths[0],st_params.lengths[1]}; //length of each link
  double b_p_FK_tmp;
  double c_p_FK_tmp;
  double p_FK_tmp;
  double t11;
  double t12;
  double t13;
  double t14;
  double t2;
  double t3;
  double t4;
  double t5;
  double t6;
  double t7;
  double t8;
  double t9;

  //     This function was generated by the Symbolic Math Toolbox version 8.6.
  //     27-Jul-2021 20:38:44
  t2 = std::cos(q[0]);
  t3 = std::cos(q[1]);
  t4 = std::cos(q[2]);
  t5 = std::cos(q[3]);
  t6 = std::sin(q[0]);
  t7 = std::sin(q[1]);
  t8 = std::sin(q[2]);
  t9 = std::sin(q[3]);
  t13 = 1.0 / q[1];
  t14 = 1.0 / q[3];
  t11 = t2 * t2;
  t12 = std::sin(q[0] * 2.0);
  p_FK_tmp = L[1] * t8;
  b_p_FK_tmp = L[1] * t4;
  c_p_FK_tmp = L[1] * t2;
  p_FK[0] = ((L[0] * t2 * t13 * (t3 - 1.0) - c_p_FK_tmp * t7 * t9 * t14) +
             b_p_FK_tmp * t14 * (t5 - 1.0) * ((-t11 + t3 * t11) + 1.0)) +
    p_FK_tmp * t12 * t14 * (t3 - 1.0) * (t5 - 1.0) / 2.0;
  t2 = L[1] * t6 * t7;
  p_FK[1] = ((-L[0] * t6 * t13 * (t3 - 1.0) + t2 * t9 * t14) - p_FK_tmp * t14 *
             (t5 - 1.0) * (t11 + t3 * (t6 * t6))) - b_p_FK_tmp * t12 * t14 * (t3
    - 1.0) * (t5 - 1.0) / 2.0;
  p_FK[2] = ((-L[0] * t7 * t13 - L[1] * t3 * t9 * t14) - c_p_FK_tmp * t4 *
             t7 * t14 * (t5 - 1.0)) - t2 * t8 * t14 * (t5 - 1.0);
  Map<VectorXd> dummy(p_FK,4);
  p = dummy;
}

void Lagrange::J_update(VectorXd q)
{
  double J_[12];
  double L[2] = {st_params.lengths[0],st_params.lengths[1]}; //length of each link
  double J_tmp;
  double J_tmp_tmp;
  double b_J_tmp;
  double c_J_tmp;
  double d_J_tmp;
  double e_J_tmp;
  double f_J_tmp;
  double g_J_tmp;
  double h_J_tmp;
  double i_J_tmp;
  double j_J_tmp;
  double t11;
  double t12;
  double t13;
  double t15;
  double t16;
  double t17;
  double t18;
  double t2;
  double t27;
  double t28;
  double t29;
  double t3;
  double t30;
  double t30_tmp;
  double t4;
  double t5;
  double t6;
  double t7;
  double t8;
  double t9;

  //     This function was generated by the Symbolic Math Toolbox version 8.6.
  //     27-Jul-2021 20:38:44
  t2 = std::cos(q[0]);
  t3 = std::cos(q[1]);
  t4 = std::cos(q[2]);
  t5 = std::cos(q[3]);
  t6 = std::sin(q[0]);
  t7 = std::sin(q[1]);
  t8 = std::sin(q[2]);
  t9 = std::sin(q[3]);
  t15 = 1.0 / q[1];
  t17 = 1.0 / q[3];
  t11 = t2 * t2;
  t12 = std::sin(q[0] * 2.0);
  t13 = t6 * t6;
  t16 = t15 * t15;
  t18 = t17 * t17;
  t27 = t11 * 2.0 - 1.0;
  t28 = t11 + t3 * t13;
  t29 = (t3 * t11 + -t11) + 1.0;
  t30_tmp = L[1] * t7;
  t30 = t30_tmp * t17 * (t5 - 1.0) * std::sin(q[0] + -q[2]);
  J_tmp = L[1] * t2;
  b_J_tmp = L[1] * t8;
  J_tmp_tmp = L[1] * t6 * t7;
  c_J_tmp = J_tmp_tmp * t9;
  d_J_tmp = J_tmp * t4;
  J_[0] = ((-L[0] * t6 * t15 * (t3 - 1.0) + c_J_tmp * t17) + b_J_tmp * t17 *
          (t3 - 1.0) * (t5 - 1.0) * t27) - d_J_tmp * t6 * t17 * (t3 - 1.0) * (t5
    - 1.0) * 2.0;
  e_J_tmp = -L[0] * t2;
  f_J_tmp = L[1] * t4;
  g_J_tmp = J_tmp * t6 * t8 * t17 * (t3 - 1.0) * (t5 - 1.0);
  h_J_tmp = J_tmp * t7 * t9;
  J_[1] = ((e_J_tmp * t15 * (t3 - 1.0) + h_J_tmp * t17) - f_J_tmp * t17 * (t3 -
           1.0) * (t5 - 1.0) * t27) - g_J_tmp * 2.0;
  J_[2] = t30;
  i_J_tmp = f_J_tmp * t7;
  j_J_tmp = t30_tmp * t8;
  J_tmp *= t3;
  J_[3] = (((e_J_tmp * t7 * t15 - L[0] * t2 * t16 * (t3 - 1.0)) - J_tmp * t9 *
           t17) - j_J_tmp * t12 * t17 * (t5 - 1.0) / 2.0) + i_J_tmp * t17 * (t5
    - 1.0) * -t11;
  e_J_tmp = L[0] * t6;
  t27 = L[1] * t3;
  t11 = t27 * t6;
  J_[4] = (((e_J_tmp * t7 * t15 + e_J_tmp * t16 * (t3 - 1.0)) + t11 * t9 * t17) +
          i_J_tmp * t12 * t17 * (t5 - 1.0) / 2.0) + j_J_tmp * t13 * t17 * (t5 -
    1.0);
  J_[5] = (((-L[0] * t3 * t15 + L[0] * t7 * t16) + t30_tmp * t9 * t17) -
          J_tmp * t4 * t17 * (t5 - 1.0)) - t11 * t8 * t17 * (t5 - 1.0);
  J_tmp = f_J_tmp * t12;
  J_[6] = -L[1] * t8 * t17 * (t5 - 1.0) * t29 + J_tmp * t17 * (t3 - 1.0) * (t5
    - 1.0) / 2.0;
  J_[7] = -L[1] * t4 * t17 * (t5 - 1.0) * t28 + g_J_tmp;
  J_[8] = -t30;
  e_J_tmp = b_J_tmp * t9;
  g_J_tmp = f_J_tmp * t9;
  J_[9] = ((((-L[1] * t2 * t5 * t7 * t17 + h_J_tmp * t18) - g_J_tmp * t17 * t29)
           - f_J_tmp * t18 * (t5 - 1.0) * t29) - e_J_tmp * t12 * t17 * (t3 - 1.0)
          / 2.0) - b_J_tmp * t12 * t18 * (t3 - 1.0) * (t5 - 1.0) / 2.0;
  J_[10] = ((((L[1] * t5 * t6 * t7 * t17 - c_J_tmp * t18) + e_J_tmp * t17 * t28)
            + b_J_tmp * t18 * (t5 - 1.0) * t28) + g_J_tmp * t12 * t17 * (t3 -
            1.0) / 2.0) + J_tmp * t18 * (t3 - 1.0) * (t5 - 1.0) / 2.0;
  J_tmp = d_J_tmp * t7;
  b_J_tmp = J_tmp_tmp * t8;
  J_[11] = ((((-L[1] * t3 * t5 * t17 + t27 * t9 * t18) + J_tmp * t9 * t17) +
            b_J_tmp * t9 * t17) + J_tmp * t18 * (t5 - 1.0)) + b_J_tmp * t18 *
    (t5 - 1.0);

  Map<MatrixXd> dummy(J_,3,4);
  J = dummy;
}

void Lagrange::JDot_update(VectorXd q, VectorXd dq)
{
  double JDot_[12];
  double L[2] = {st_params.lengths[0],st_params.lengths[1]}; //length of each link
  double JDot_tmp;
  double b_JDot_tmp;
  double b_t47_tmp;
  double b_t50_tmp;
  double b_t56_tmp;
  double b_t60_tmp;
  double b_t86_tmp;
  double b_t88_tmp;
  double b_t96_tmp;
  double b_t97_tmp;
  double c_JDot_tmp;
  double d_JDot_tmp;
  double t10;
  double t100;
  double t11;
  double t12;
  double t13;
  double t14;
  double t15;
  double t16;
  double t17;
  double t19;
  double t2;
  double t20;
  double t21;
  double t22;
  double t23;
  double t24;
  double t28;
  double t29;
  double t3;
  double t30;
  double t31;
  double t32;
  double t33;
  double t34;
  double t38;
  double t39;
  double t4;
  double t40;
  double t41;
  double t42;
  double t45;
  double t45_tmp;
  double t47;
  double t47_tmp;
  double t5;
  double t50;
  double t50_tmp;
  double t50_tmp_tmp;
  double t54;
  double t55;
  double t55_tmp;
  double t56;
  double t56_tmp;
  double t56_tmp_tmp;
  double t6;
  double t60;
  double t60_tmp;
  double t7;
  double t76;
  double t8;
  double t86;
  double t86_tmp;
  double t87;
  double t87_tmp;
  double t88;
  double t88_tmp;
  double t88_tmp_tmp;
  double t9;
  double t93;
  double t93_tmp;
  double t95;
  double t96;
  double t96_tmp;
  double t97_tmp;
  double t97_tmp_tmp;
  double t98;
  double t99;
  double t99_tmp_tmp;

  //     This function was generated by the Symbolic Math Toolbox version 8.6.
  //     27-Jul-2021 20:49:53
  t2 = std::cos(q[0]);
  t3 = std::cos(q[1]);
  t4 = std::cos(q[2]);
  t5 = std::cos(q[3]);
  t6 = std::sin(q[0]);
  t7 = std::sin(q[1]);
  t8 = std::sin(q[2]);
  t9 = std::sin(q[3]);
  t10 = q[0] * 2.0;
  t11 = q[3] * q[3];
  t19 = 1.0 / q[1];
  t22 = 1.0 / q[3];
  t12 = std::cos(t10);
  t13 = t2 * t2;
  t14 = std::sin(t10);
  t15 = t8 * 2.0;
  t16 = t6 * t6;
  t17 = q[3] * t9;
  t20 = t19 * t19;
  t21 = std::pow(t19, 3.0);
  t23 = 1.0 / t11;
  t24 = std::pow(t22, 3.0);
  t29 = q[0] + -q[2];
  t10 += -q[2];
  t45_tmp = L[1] * t5;
  t45 = t45_tmp * t7 * t22;
  t50_tmp = L[1] * t2;
  t50_tmp_tmp = t50_tmp * t3;
  b_t50_tmp = t50_tmp_tmp * t9;
  t50 = b_t50_tmp * t22;
  t55_tmp = t50_tmp * t7 * t9;
  t55 = t55_tmp * t22;
  t56_tmp_tmp = L[1] * t3;
  t56_tmp = t56_tmp_tmp * t6;
  b_t56_tmp = t56_tmp * t9;
  t56 = b_t56_tmp * t22;
  t60_tmp = L[1] * t6 * t7;
  b_t60_tmp = t60_tmp * t9;
  t60 = b_t60_tmp * t22;
  t28 = t13 * 2.0;
  t30 = std::cos(t29);
  t31 = std::sin(t29);
  t32 = t3 * t13;
  t33 = t4 * t14;
  t34 = t3 * t16;
  t39 = std::cos(t10);
  t40 = std::sin(t10);
  t41 = t8 * t13 * -2.0;
  t42 = t17 + (t5 - 1.0);
  t47_tmp = L[1] * t7;
  b_t47_tmp = t47_tmp * t9;
  t47 = b_t47_tmp * t23;
  t38 = t3 * t33;
  t54 = t13 + t34;
  t76 = (t32 + -t13) + 1.0;
  t86_tmp = L[1] * dq[0];
  b_t86_tmp = t86_tmp * t7;
  t86 = b_t86_tmp * t22 * (t5 - 1.0) * t30;
  t87_tmp = L[1] * dq[1];
  t87 = t87_tmp * t3 * t22 * (t5 - 1.0) * t31;
  t88_tmp = L[1] * dq[2];
  t88_tmp_tmp = t88_tmp * t7;
  b_t88_tmp = t88_tmp_tmp * t22 * (t5 - 1.0);
  t88 = b_t88_tmp * t30;
  t93_tmp = L[1] * dq[3];
  t93 = t93_tmp * t7 * t23 * t31 * t42;
  t99_tmp_tmp = L[1] * t4;
  t30 = t99_tmp_tmp * t7;
  t10 = t47_tmp * t8;
  t29 = t10 * t9;
  t99 = ((((b_t50_tmp * t23 + -(t50_tmp_tmp * t5 * t22)) + t30 * t9 * t13 * t22)
          + t29 * t14 * t22 / 2.0) + t30 * t13 * t23 * (t5 - 1.0)) + t10 * t14 *
    t23 * (t5 - 1.0) / 2.0;
  t98 = ((((t45 + -t47) + t4 * t50) + t8 * t56) + t50_tmp_tmp * t4 * t23 * (t5 -
          1.0)) + t56_tmp * t8 * t23 * (t5 - 1.0);
  t100 = ((((b_t56_tmp * t23 + -(t56_tmp_tmp * t5 * t6 * t22)) + t29 * t16 * t22)
           + b_t47_tmp * t22 * t33 / 2.0) + t10 * t16 * t23 * (t5 - 1.0)) +
    t47_tmp * t23 * (t5 - 1.0) * t33 / 2.0;
  t95 = (((t15 + t33) + t41) + t15 * t32) + -t38;
  b_t50_tmp = L[0] * t2;
  t96_tmp = t50_tmp * t6;
  b_t96_tmp = b_t50_tmp * t7;
  t96 = (((b_t96_tmp * t19 + t50) + b_t50_tmp * t20 * (t3 - 1.0)) + t96_tmp * t7
         * t15 * t22 * (t5 - 1.0)) + t30 * t22 * (t5 - 1.0) * (t28 - 1.0);
  t97_tmp = L[0] * t6;
  t97_tmp_tmp = t50_tmp * t4;
  t10 = t97_tmp_tmp * t6;
  b_t97_tmp = t97_tmp * t7;
  t29 = (((b_t97_tmp * t19 + t56) + t97_tmp * t20 * (t3 - 1.0)) + t10 * t7 * t22
         * (t5 - 1.0) * 2.0) + t47_tmp * t22 * (t5 - 1.0) * -t8 * (t28 - 1.0);
  t50 = t88_tmp * t22 * (t3 - 1.0) * (t5 - 1.0);
  t47_tmp = t99_tmp_tmp * t22;
  t56 = L[1] * t9;
  JDot_tmp = t56 * t22 * (t3 - 1.0);
  b_JDot_tmp = t6 * t45 + -(t6 * t47);
  c_JDot_tmp = L[1] * t23 * (t3 - 1.0) * (t5 - 1.0);
  JDot_[0] = ((dq[1] * t29 + dq[3] * ((((b_JDot_tmp + JDot_tmp * -t8 * (t28 -
    1.0)) + c_JDot_tmp * -t8 * (t28 - 1.0)) + t10 * t9 * t22 * (t3 - 1.0) * 2.0)
    + t10 * t23 * (t3 - 1.0) * (t5 - 1.0) * 2.0)) - dq[0] * ((((-t55 +
    b_t50_tmp * t19 * (t3 - 1.0)) - t99_tmp_tmp * t16 * t22 * (t3 - 1.0) * (t5 -
    1.0) * 2.0) + t47_tmp * (t3 - 1.0) * (t5 - 1.0) * t28) + t96_tmp * t8 * t22 *
              (t3 - 1.0) * (t5 - 1.0) * 4.0)) + t50 * t39;
  d_JDot_tmp = L[1] * t22;
  t50_tmp_tmp = t10 * t22 * (t3 - 1.0) * (t5 - 1.0);
  t56_tmp = t99_tmp_tmp * t9;
  b_t56_tmp = L[1] * t15;
  b_t47_tmp = t2 * t45 + -(t2 * t47);
  JDot_[1] = ((dq[1] * t96 + dq[0] * ((((-t60 + t97_tmp * t19 * (t3 - 1.0)) +
    d_JDot_tmp * (t3 - 1.0) * (t5 - 1.0) * t41) + b_t56_tmp * t16 * t22 * (t3 -
    1.0) * (t5 - 1.0)) + t50_tmp_tmp * 4.0)) + dq[3] * ((((b_t47_tmp + t56_tmp *
    t22 * (t3 - 1.0) * (t28 - 1.0)) + t99_tmp_tmp * t23 * (t3 - 1.0) * (t5 - 1.0)
    * (t28 - 1.0)) + t96_tmp * t9 * t15 * t22 * (t3 - 1.0)) + t96_tmp * t15 *
              t23 * (t3 - 1.0) * (t5 - 1.0))) - t50 * t40;
  JDot_[2] = ((t86 + t87) - t88) - t93;
  t50 = t47_tmp * (t5 - 1.0);
  t47_tmp = t8 - t40;
  JDot_[3] = ((dq[1] * (((((t55 - b_t50_tmp * t3 * t19) + b_t96_tmp * t20 * 2.0)
    + b_t50_tmp * t21 * (t3 - 1.0) * 2.0) - t50 * t32) - t56_tmp_tmp * t8 * t14 *
                        t22 * (t5 - 1.0) / 2.0) + dq[0] * t29) + dq[3] * t99)
    + b_t88_tmp * t47_tmp / 2.0;
  t29 = L[0] * t3;
  t30 = L[1] * t8;
  b_t50_tmp = t30 * t22 * (t5 - 1.0);
  JDot_[4] = ((-dq[1] * (((((t60 - t29 * t6 * t19) + b_t97_tmp * t20 * 2.0) +
    t97_tmp * t21 * (t3 - 1.0) * 2.0) - d_JDot_tmp * (t5 - 1.0) * t38 / 2.0) -
    b_t50_tmp * t34) + dq[0] * t96) - dq[3] * t100) + b_t88_tmp * (t4 - t39) /
    2.0;
  d_JDot_tmp = L[0] * t7;
  JDot_[5] = ((dq[3] * t98 + dq[1] * (((((t29 * t20 * 2.0 + d_JDot_tmp * t19) -
    d_JDot_tmp * t21 * 2.0) + t56_tmp_tmp * t9 * t22) + t97_tmp_tmp * t7 * t22 *
    (t5 - 1.0)) + t60_tmp * t8 * t22 * (t5 - 1.0))) + t86_tmp * t3 * t22 * (t5 -
              1.0) * t31) - t88_tmp * t3 * t22 * (t5 - 1.0) * t31;
  d_JDot_tmp = t93_tmp * t23 * t42;
  t29 = t86_tmp * t22 * (t3 - 1.0) * (t5 - 1.0);
  t10 = t30 * t14;
  JDot_[6] = ((-dq[2] * (t50 * t76 + t10 * t22 * (t3 - 1.0) * (t5 - 1.0) / 2.0)
              + d_JDot_tmp * t95 / 2.0) + t87_tmp * t7 * t22 * (t5 - 1.0) *
             t47_tmp / 2.0) + t29 * t39;
  t50 = t4 * t34;
  JDot_[7] = ((dq[2] * (b_t50_tmp * t54 + t50_tmp_tmp) + d_JDot_tmp * (((t4 *
    t13 + t50) + t2 * t6 * t8) + t2 * t3 * t6 * -t8)) - t29 * t40) + t87_tmp *
    t6 * t7 * t22 * (t5 - 1.0) * t31;
  JDot_[8] = ((-t86 - t87) + t88) + t93;
  t47_tmp = t30 * t9 * t14;
  d_JDot_tmp = t88_tmp * t23 * t42;
  JDot_[9] = ((dq[1] * t99 + dq[3] * ((((((((t55 + t50_tmp * t5 * t7 * t23 *
    2.0) - t55_tmp * t24 * 2.0) - t99_tmp_tmp * t5 * t22 * t76) + t56_tmp * t23 *
    t76 * 2.0) + t99_tmp_tmp * t24 * (t5 - 1.0) * t76 * 2.0) - t45_tmp * t8 *
    t14 * t22 * (t3 - 1.0) / 2.0) + t47_tmp * t23 * (t3 - 1.0)) + t10 * t24 *
    (t3 - 1.0) * (t5 - 1.0))) + dq[0] * ((((b_JDot_tmp + JDot_tmp * t33) +
    c_JDot_tmp * t33) + t56 * t12 * t22 * (t3 - 1.0) * -t8) + L[1] * t12 * t23
              * (t3 - 1.0) * (t5 - 1.0) * -t8)) + d_JDot_tmp * t95 / 2.0;
  JDot_tmp = t45_tmp * t22;
  JDot_[10] = ((-dq[1] * t100 - dq[3] * ((((((((t60 + t45_tmp * t6 * t7 * t23 *
    2.0) - b_t60_tmp * t24 * 2.0) - JDot_tmp * (t3 - 1.0) * t33 / 2.0) + t56 *
    t23 * (t3 - 1.0) * t33) + t56 * t15 * t23 * t54) + JDot_tmp * -t8 * t54) +
    L[1] * t24 * (t3 - 1.0) * (t5 - 1.0) * t33) + b_t56_tmp * t24 * (t5 - 1.0)
    * t54)) + dq[0] * ((((b_t47_tmp + t56_tmp * t12 * t22 * (t3 - 1.0)) +
    t47_tmp * t22 * (t3 - 1.0)) + t99_tmp_tmp * t12 * t23 * (t3 - 1.0) * (t5 -
    1.0)) + t10 * t23 * (t3 - 1.0) * (t5 - 1.0))) + d_JDot_tmp * (((t8 * t14 +
    t4 * t28) + t50 * 2.0) + t3 * t14 * -t8) / 2.0;
  t50 = t3 * t9;
  t47_tmp = t2 * t4;
  JDot_tmp = t47_tmp * t7;
  b_JDot_tmp = t6 * t7;
  t47_tmp = t47_tmp * t5 * t7;
  c_JDot_tmp = t5 * t6 * t7 * t8;
  JDot_[11] = ((dq[1] * t98 + t93_tmp * t24 * ((((((((((t50 * -2.0 + q[3] * t3
    * t5 * 2.0) + JDot_tmp * 2.0) + t50 * t11) + b_JDot_tmp * t15) - t47_tmp *
    2.0) - c_JDot_tmp * 2.0) - JDot_tmp * t17 * 2.0) - b_JDot_tmp * t8 * t17 *
    2.0) + t47_tmp * t11) + c_JDot_tmp * t11)) - b_t86_tmp * t23 * t31 * t42) +
    t88_tmp_tmp * t23 * t31 * t42;

  Map<MatrixXd> dummy(JDot_,3,4);
  JDot = dummy;
}

void Lagrange::c_update(VectorXd q, VectorXd dq)
{
  double c[4];
  double L[2] = {st_params.lengths[0],st_params.lengths[1]}; //length of each link
  double m[2] = {st_params.masses[0],st_params.masses[1]}; //mass of each link + connectors
  double ab_c_tmp;
  double ab_c_tmp_tmp;
  double ac_c_tmp;
  double ad_c_tmp;
  double ae_c_tmp;
  double af_c_tmp;
  double ag_c_tmp;
  double b_c_tmp;
  double b_c_tmp_tmp;
  double b_c_tmp_tmp_tmp;
  double bb_c_tmp;
  double bb_c_tmp_tmp;
  double bc_c_tmp;
  double bd_c_tmp;
  double be_c_tmp;
  double bf_c_tmp;
  double bg_c_tmp;
  double c_c_tmp;
  double c_c_tmp_tmp;
  double c_tmp;
  double c_tmp_tmp;
  double c_tmp_tmp_tmp;
  double cb_c_tmp;
  double cb_c_tmp_tmp;
  double cc_c_tmp;
  double cd_c_tmp;
  double ce_c_tmp;
  double cf_c_tmp;
  double cg_c_tmp;
  double d;
  double d1;
  double d10;
  double d11;
  double d12;
  double d13;
  double d14;
  double d15;
  double d16;
  double d17;
  double d18;
  double d19;
  double d2;
  double d20;
  double d21;
  double d22;
  double d23;
  double d24;
  double d25;
  double d26;
  double d27;
  double d28;
  double d29;
  double d3;
  double d30;
  double d31;
  double d32;
  double d33;
  double d34;
  double d35;
  double d36;
  double d37;
  double d38;
  double d39;
  double d4;
  double d40;
  double d5;
  double d6;
  double d7;
  double d8;
  double d9;
  double d_c_tmp;
  double d_c_tmp_tmp;
  double db_c_tmp;
  double db_c_tmp_tmp;
  double dc_c_tmp;
  double dd_c_tmp;
  double de_c_tmp;
  double df_c_tmp;
  double dg_c_tmp;
  double e_c_tmp;
  double e_c_tmp_tmp;
  double eb_c_tmp;
  double ec_c_tmp;
  double ed_c_tmp;
  double ee_c_tmp;
  double ef_c_tmp;
  double eg_c_tmp;
  double f_c_tmp;
  double f_c_tmp_tmp;
  double fb_c_tmp;
  double fc_c_tmp;
  double fd_c_tmp;
  double fe_c_tmp;
  double ff_c_tmp;
  double fg_c_tmp;
  double g_c_tmp;
  double g_c_tmp_tmp;
  double gb_c_tmp;
  double gc_c_tmp;
  double gd_c_tmp;
  double ge_c_tmp;
  double gf_c_tmp;
  double gg_c_tmp;
  double h_c_tmp;
  double h_c_tmp_tmp;
  double hb_c_tmp;
  double hc_c_tmp;
  double hd_c_tmp;
  double he_c_tmp;
  double hf_c_tmp;
  double hg_c_tmp;
  double i_c_tmp;
  double i_c_tmp_tmp;
  double ib_c_tmp;
  double ic_c_tmp;
  double id_c_tmp;
  double ie_c_tmp;
  double if_c_tmp;
  double ig_c_tmp;
  double j_c_tmp;
  double j_c_tmp_tmp;
  double jb_c_tmp;
  double jc_c_tmp;
  double jd_c_tmp;
  double je_c_tmp;
  double jf_c_tmp;
  double jg_c_tmp;
  double k_c_tmp;
  double k_c_tmp_tmp;
  double kb_c_tmp;
  double kc_c_tmp;
  double kd_c_tmp;
  double ke_c_tmp;
  double kf_c_tmp;
  double kg_c_tmp;
  double l_c_tmp;
  double l_c_tmp_tmp;
  double lb_c_tmp;
  double lc_c_tmp;
  double ld_c_tmp;
  double le_c_tmp;
  double lf_c_tmp;
  double lg_c_tmp;
  double m_c_tmp;
  double m_c_tmp_tmp;
  double mb_c_tmp;
  double mc_c_tmp;
  double md_c_tmp;
  double me_c_tmp;
  double mf_c_tmp;
  double mg_c_tmp;
  double n_c_tmp;
  double n_c_tmp_tmp;
  double nb_c_tmp;
  double nc_c_tmp;
  double nd_c_tmp;
  double ne_c_tmp;
  double nf_c_tmp;
  double ng_c_tmp;
  double o_c_tmp;
  double o_c_tmp_tmp;
  double ob_c_tmp;
  double oc_c_tmp;
  double od_c_tmp;
  double oe_c_tmp;
  double of_c_tmp;
  double og_c_tmp;
  double p_c_tmp;
  double p_c_tmp_tmp;
  double pb_c_tmp;
  double pc_c_tmp;
  double pd_c_tmp;
  double pe_c_tmp;
  double pf_c_tmp;
  double pg_c_tmp;
  double q_c_tmp;
  double q_c_tmp_tmp;
  double qb_c_tmp;
  double qc_c_tmp;
  double qd_c_tmp;
  double qe_c_tmp;
  double qf_c_tmp;
  double r_c_tmp;
  double r_c_tmp_tmp;
  double rb_c_tmp;
  double rc_c_tmp;
  double rd_c_tmp;
  double re_c_tmp;
  double rf_c_tmp;
  double s_c_tmp;
  double s_c_tmp_tmp;
  double sb_c_tmp;
  double sc_c_tmp;
  double sd_c_tmp;
  double se_c_tmp;
  double sf_c_tmp;
  double t10;
  double t11;
  double t12;
  double t13;
  double t14;
  double t15;
  double t17;
  double t19;
  double t2;
  double t20;
  double t21;
  double t22;
  double t23;
  double t24;
  double t25;
  double t26;
  double t27;
  double t28;
  double t29;
  double t3;
  double t30;
  double t31;
  double t32;
  double t33;
  double t34;
  double t35;
  double t36;
  double t4;
  double t5;
  double t6;
  double t7;
  double t8;
  double t9;
  double t_c_tmp;
  double t_c_tmp_tmp;
  double tb_c_tmp;
  double tc_c_tmp;
  double td_c_tmp;
  double te_c_tmp;
  double tf_c_tmp;
  double u_c_tmp;
  double u_c_tmp_tmp;
  double ub_c_tmp;
  double uc_c_tmp;
  double ud_c_tmp;
  double ue_c_tmp;
  double uf_c_tmp;
  double v_c_tmp;
  double v_c_tmp_tmp;
  double vb_c_tmp;
  double vc_c_tmp;
  double vd_c_tmp;
  double ve_c_tmp;
  double vf_c_tmp;
  double w_c_tmp;
  double w_c_tmp_tmp;
  double wb_c_tmp;
  double wc_c_tmp;
  double wd_c_tmp;
  double we_c_tmp;
  double wf_c_tmp;
  double x_c_tmp;
  double x_c_tmp_tmp;
  double xb_c_tmp;
  double xc_c_tmp;
  double xd_c_tmp;
  double xe_c_tmp;
  double xf_c_tmp;
  double y_c_tmp;
  double y_c_tmp_tmp;
  double yb_c_tmp;
  double yc_c_tmp;
  double yd_c_tmp;
  double ye_c_tmp;
  double yf_c_tmp;

  //     This function was generated by the Symbolic Math Toolbox version 8.7.
  //     26-Jul-2021 21:32:52
  t2 = std::cos(q[0]);
  t3 = std::cos(q[1]);
  t4 = std::cos(q[2]);
  t5 = std::cos(q[3]);
  t6 = std::sin(q[0]);
  t7 = std::sin(q[1]);
  t8 = std::sin(q[2]);
  t9 = std::sin(q[3]);
  t10 = L[0] * L[0];
  t11 = L[1] * L[1];
  t12 = dq[0] * dq[0];
  t13 = dq[1] * dq[1];
  t14 = dq[2] * dq[2];
  t15 = dq[3] * dq[3];
  t17 = q[1] * 2.0;
  t19 = q[3] * 2.0;
  t20 = q[1] * q[1];
  t21 = std::pow(q[1], 3.0);
  t23 = q[3] * q[3];
  t24 = std::pow(q[1], 5.0);
  t25 = std::pow(q[3], 3.0);
  t22 = t20 * t20;
  t26 = t23 * t23;
  t27 = t2 * t2;
  t28 = t3 * t3;
  t29 = t4 * t4;
  t30 = t5 * t5;
  t31 = std::sin(q[0] * 2.0);
  t32 = std::sin(t17);
  t33 = std::sin(q[2] * 2.0);
  t34 = std::sin(t19);
  t35 = 1.0 / t21;
  t36 = 1.0 / t25;
  d = dq[0] * dq[3];
  d1 = d * m[1];
  c_tmp = d1 * t11;
  d2 = c_tmp * t21;
  d3 = dq[0] * dq[1];
  d4 = d3 * m[1];
  d5 = d4 * t10 * t25;
  b_c_tmp = dq[2] * dq[3];
  d6 = b_c_tmp * m[1];
  d7 = d6 * t11 * t21;
  d8 = m[1] * q[3];
  c_c_tmp = d8 * t11;
  d9 = d3 * m[0];
  d10 = d4 * q[1];
  d11 = d1 * q[3];
  d_c_tmp = d11 * t9 * t11;
  d12 = d_c_tmp * t21;
  d13 = d9 * q[1];
  d14 = dq[0] * dq[2];
  d15 = d14 * m[1];
  d16 = d15 * q[3];
  d17 = d6 * q[3];
  d18 = d1 * t3;
  d19 = m[1] * t4;
  d20 = L[0] * L[1];
  e_c_tmp = d20 * dq[0];
  d21 = e_c_tmp * dq[1] * m[1];
  d22 = d20 * m[1];
  d23 = d22 * t2;
  d24 = d23 * t3;
  d25 = d22 * t3;
  d26 = d25 * t4;
  d27 = dq[1] * dq[3];
  d28 = d27 * m[1];
  d29 = d28 * t4;
  d30 = -m[1] * q[3];
  d31 = d8 * t2;
  d32 = d31 * t6;
  d33 = m[1] * t2;
  d34 = d28 * q[3];
  d35 = d34 * t2;
  d36 = d11 * t3;
  d37 = d4 * q[3];
  d38 = d1 * t2;
  d39 = d28 * t2;
  d40 = d8 * t4;
  f_c_tmp = d23 * t8;
  c_tmp_tmp = d22 * t4;
  g_c_tmp = c_tmp_tmp * t6;
  h_c_tmp = d9 * t10 * t19 * t23;
  i_c_tmp = c_tmp * t17 * t20;
  j_c_tmp = d2 * t27;
  k_c_tmp = d2 * t28;
  l_c_tmp = d37 * t7 * t11 * t21;
  m_c_tmp = i_c_tmp * t29;
  n_c_tmp = j_c_tmp * t28;
  j_c_tmp *= t29;
  o_c_tmp = k_c_tmp * t29;
  b_c_tmp_tmp = d31 * t5;
  p_c_tmp = b_c_tmp_tmp * t6 * t11;
  q_c_tmp = d22 * q[3];
  r_c_tmp = d22 * q[1];
  c_c_tmp_tmp = r_c_tmp * t2;
  s_c_tmp = c_c_tmp_tmp * t8;
  t_c_tmp = d37 * t3;
  u_c_tmp = d16 * t4;
  c_tmp_tmp_tmp = dq[1] * dq[2] * m[1];
  d_c_tmp_tmp = c_tmp_tmp_tmp * q[3];
  v_c_tmp = d_c_tmp_tmp * t5 * t7 * t11 * t21;
  e_c_tmp_tmp = d_c_tmp_tmp * t7 * t11;
  w_c_tmp = e_c_tmp_tmp * t17 * t20;
  x_c_tmp = d39 * t6 * t7 * t11;
  y_c_tmp = dq[1] * dq[3] * m[1] * t4 * t7 * t8 * t11 * t21;
  f_c_tmp_tmp = d8 * t3;
  ab_c_tmp = f_c_tmp_tmp * t4;
  g_c_tmp_tmp = d40 * t5;
  bb_c_tmp = g_c_tmp_tmp * t8 * t11;
  h_c_tmp_tmp = d31 * t3;
  i_c_tmp_tmp = h_c_tmp_tmp * t6 * t11 * t13;
  cb_c_tmp = i_c_tmp_tmp * t21;
  j_c_tmp_tmp = p_c_tmp * t12;
  db_c_tmp = j_c_tmp_tmp * t21;
  p_c_tmp = p_c_tmp * t13 * t21;
  eb_c_tmp = ab_c_tmp * t8 * t11 * t13 * t21;
  fb_c_tmp = bb_c_tmp * t12;
  gb_c_tmp = fb_c_tmp * t21;
  bb_c_tmp *= t13;
  k_c_tmp_tmp = d40 * t8 * t11;
  hb_c_tmp = k_c_tmp_tmp * t12;
  ib_c_tmp = d21 * q[1];
  l_c_tmp_tmp = e_c_tmp * dq[3] * m[1];
  jb_c_tmp = l_c_tmp_tmp * q[3];
  b_c_tmp_tmp_tmp = d20 * dq[2] * dq[3] * m[1];
  kb_c_tmp = b_c_tmp_tmp_tmp * q[3];
  lb_c_tmp = e_c_tmp * dq[2] * m[1];
  m_c_tmp_tmp = ib_c_tmp * t2;
  mb_c_tmp = m_c_tmp_tmp * t4;
  n_c_tmp_tmp = jb_c_tmp * t2;
  nb_c_tmp = n_c_tmp_tmp * t4;
  ob_c_tmp = kb_c_tmp * t2;
  pb_c_tmp = ob_c_tmp * t4;
  qb_c_tmp = ib_c_tmp * t3;
  rb_c_tmp = jb_c_tmp * t3;
  sb_c_tmp = ib_c_tmp * t6 * t8 * t23;
  tb_c_tmp = jb_c_tmp * t6 * t8 * t20;
  ub_c_tmp = lb_c_tmp * t2;
  vb_c_tmp = lb_c_tmp * t4;
  wb_c_tmp = r_c_tmp * t4;
  xb_c_tmp = q_c_tmp * t2;
  yb_c_tmp = wb_c_tmp * t5 * t6;
  ac_c_tmp = c_c_tmp_tmp * t5;
  bc_c_tmp = s_c_tmp * t12 * t17 * t23;
  o_c_tmp_tmp = d24 * t5 * t8;
  p_c_tmp_tmp = L[0] * L[1] * m[1] * t2 * t5 * t8;
  cc_c_tmp = d16 * t2;
  dc_c_tmp = d37 * t5;
  q_c_tmp_tmp = d37 * t2;
  ec_c_tmp = q_c_tmp_tmp * t4;
  fc_c_tmp = d11 * t2;
  gc_c_tmp = d34 * t4;
  hc_c_tmp = d17 * t3;
  r_c_tmp_tmp = t_c_tmp * t5;
  ic_c_tmp = r_c_tmp_tmp * t7 * t11 * t21;
  s_c_tmp_tmp = cc_c_tmp * t5;
  jc_c_tmp = s_c_tmp_tmp * t6 * t11 * t21;
  kc_c_tmp = ec_c_tmp * t9 * t11;
  t_c_tmp_tmp = u_c_tmp * t5;
  lc_c_tmp = t_c_tmp_tmp * t8 * t11 * t21;
  u_c_tmp_tmp = fc_c_tmp * t4;
  mc_c_tmp = u_c_tmp_tmp * t7 * t11;
  nc_c_tmp = d37 * t6 * t8 * t9 * t11;
  oc_c_tmp = d11 * t6 * t7 * t8 * t11;
  pc_c_tmp = u_c_tmp * t8 * t11;
  v_c_tmp_tmp = d11 * t5;
  qc_c_tmp = v_c_tmp_tmp * t9 * t11;
  rc_c_tmp = qc_c_tmp * t17 * t20;
  sc_c_tmp = cc_c_tmp * t6 * t11;
  w_c_tmp_tmp = dq[0] * dq[1] * m[1] * q[3] * t3 * t7 * t11 * t21;
  tc_c_tmp = w_c_tmp_tmp * t27;
  uc_c_tmp = sc_c_tmp * t21;
  vc_c_tmp = pc_c_tmp * t21;
  wc_c_tmp = vc_c_tmp * t27;
  xc_c_tmp = v_c_tmp * t27;
  vc_c_tmp *= t28;
  qc_c_tmp *= t21;
  yc_c_tmp = qc_c_tmp * t27;
  qc_c_tmp *= t28;
  ad_c_tmp = w_c_tmp * t27;
  bd_c_tmp = d_c_tmp * t17 * t20;
  w_c_tmp *= t29;
  cd_c_tmp = e_c_tmp_tmp * t21 * t27 * t29;
  e_c_tmp_tmp = d38 * t4;
  dd_c_tmp = e_c_tmp_tmp * t5;
  ed_c_tmp = d28 * t3 * t4;
  x_c_tmp_tmp = d6 * t2;
  fd_c_tmp = x_c_tmp_tmp * t4;
  gd_c_tmp = e_c_tmp_tmp * t6 * t8 * t11 * t21;
  hd_c_tmp = d29 * t5;
  id_c_tmp = x_c_tmp * t17 * t20;
  x_c_tmp = x_c_tmp * t21 * t29;
  jd_c_tmp = y_c_tmp * t27;
  kd_c_tmp = b_c_tmp_tmp * t7 * t8 * t9 * t11;
  ld_c_tmp = g_c_tmp_tmp * t6 * t7 * t9 * t11;
  b_c_tmp_tmp = h_c_tmp_tmp * t5;
  md_c_tmp = b_c_tmp_tmp * t6 * t11 * t13;
  e_c_tmp_tmp = ab_c_tmp * t5;
  nd_c_tmp = e_c_tmp_tmp * t8 * t11 * t13 * t21;
  od_c_tmp = gb_c_tmp * t27;
  pd_c_tmp = eb_c_tmp * t27;
  qd_c_tmp = hb_c_tmp * t17 * t20 * t27;
  hb_c_tmp *= t21;
  g_c_tmp_tmp = r_c_tmp * t3;
  rd_c_tmp = g_c_tmp_tmp * t4;
  sd_c_tmp = c_c_tmp_tmp * t3;
  td_c_tmp = sd_c_tmp * t5 * t8;
  ud_c_tmp = yb_c_tmp * t12 * t17 * t23;
  y_c_tmp_tmp = fc_c_tmp * t3;
  vd_c_tmp = y_c_tmp_tmp * t4;
  wd_c_tmp = q_c_tmp_tmp * t3 * t4;
  xd_c_tmp = gc_c_tmp * t5;
  yd_c_tmp = d35 * t3;
  ec_c_tmp = ec_c_tmp * t5 * t9 * t11 * t21;
  ae_c_tmp = vd_c_tmp * t7 * t11 * t21;
  be_c_tmp = dc_c_tmp * t6 * t8 * t9 * t11 * t21;
  ce_c_tmp = d36 * t6 * t7 * t8 * t11 * t21;
  de_c_tmp = d35 * t6 * t7 * t9 * t11 * t21;
  ee_c_tmp = gc_c_tmp * t7 * t8 * t9 * t11;
  fe_c_tmp = d34 * t3 * t4;
  ab_c_tmp_tmp = d17 * t2;
  ge_c_tmp = ab_c_tmp_tmp * t4 * t7 * t11;
  he_c_tmp = ic_c_tmp * t27;
  ie_c_tmp = jc_c_tmp * t28;
  je_c_tmp = lc_c_tmp * t27;
  sc_c_tmp = sc_c_tmp * t17 * t20 * t28;
  ke_c_tmp = tc_c_tmp * t29;
  le_c_tmp = uc_c_tmp * t28 * t29;
  me_c_tmp = wc_c_tmp * t28;
  ne_c_tmp = yc_c_tmp * t28;
  bb_c_tmp_tmp = d38 * t3;
  oe_c_tmp = bb_c_tmp_tmp * t4;
  pe_c_tmp = dd_c_tmp * t6 * t8 * t11 * t21;
  qe_c_tmp = gd_c_tmp * t28;
  re_c_tmp = i_c_tmp_tmp * t17 * t20 * t29;
  se_c_tmp = m[1] * q[3] * t2 * t6 * t11 * t12 * t17 * t20 * t28 * t29;
  i_c_tmp_tmp = ob_c_tmp * t3;
  te_c_tmp = i_c_tmp_tmp * t4;
  ue_c_tmp = mb_c_tmp * t5 * t23;
  ve_c_tmp = nb_c_tmp * t5 * t20;
  we_c_tmp = ib_c_tmp * t5 * t6 * t8 * t23;
  xe_c_tmp = jb_c_tmp * t5 * t6 * t8 * t20;
  ye_c_tmp = d21 * t2;
  af_c_tmp = ye_c_tmp * t4;
  bf_c_tmp = ub_c_tmp * t3;
  cb_c_tmp_tmp = lb_c_tmp * t3;
  cf_c_tmp = cb_c_tmp_tmp * t4;
  df_c_tmp = l_c_tmp_tmp * t2;
  ef_c_tmp = b_c_tmp_tmp_tmp * t2;
  ff_c_tmp = l_c_tmp_tmp * t3;
  gf_c_tmp = ub_c_tmp * t5 * t8 * t20 * t23;
  hf_c_tmp = vb_c_tmp * t5 * t6 * t20 * t23;
  if_c_tmp = df_c_tmp * t4 * t9 * t20 * t23;
  jf_c_tmp = ye_c_tmp * t3 * t4;
  kf_c_tmp = d21 * t3;
  db_c_tmp_tmp = d_c_tmp_tmp * t2;
  lf_c_tmp = db_c_tmp_tmp * t4;
  mf_c_tmp = u_c_tmp_tmp * t5;
  nf_c_tmp = cc_c_tmp * t3;
  of_c_tmp = u_c_tmp_tmp * t6 * t8 * t9 * t11 * t21;
  pf_c_tmp = lf_c_tmp * t6 * t7 * t8 * t11 * t21;
  qf_c_tmp = dq[1] * dq[3] * m[1] * q[3] * t2 * t5 * t6 * t7 * t9 * t11;
  rf_c_tmp = xd_c_tmp * t7 * t8 * t9 * t11 * t21;
  sf_c_tmp = wd_c_tmp * t5;
  u_c_tmp_tmp = d16 * t3;
  tf_c_tmp = u_c_tmp_tmp * t4;
  uf_c_tmp = wd_c_tmp * t6 * t7 * t8 * t11 * t21;
  vf_c_tmp = mf_c_tmp * t6 * t8 * t9 * t11 * t21;
  wf_c_tmp = n_c_tmp_tmp * t3;
  xf_c_tmp = kb_c_tmp * t3;
  yf_c_tmp = xb_c_tmp * t3;
  ag_c_tmp = q_c_tmp * t3;
  bg_c_tmp = df_c_tmp * t3;
  cg_c_tmp = ef_c_tmp * t3;
  dg_c_tmp = b_c_tmp_tmp_tmp * t3;
  eg_c_tmp = m_c_tmp_tmp * t3;
  fg_c_tmp = c_c_tmp * t12 * t21;
  gg_c_tmp = c_c_tmp * t13 * t21;
  hg_c_tmp = d16 * t11 * t21;
  ig_c_tmp = d * m[1] * t5 * t11 * t21;
  jg_c_tmp = d24 * t8;
  kg_c_tmp = b_c_tmp * m[1] * t3 * t11 * t17 * t20;
  lg_c_tmp = ig_c_tmp * t27;
  mg_c_tmp = ig_c_tmp * t28;
  ng_c_tmp = d32 * t11 * t12 * t21;
  og_c_tmp = d8 * t4 * t8 * t11 * t12 * t21;
  t19 = d31 * t7 * t8 * t9 * t11;
  d_c_tmp = m[1] * q[3] * t4 * t8 * t11 * t13;
  e_c_tmp = d26 * t5 * t6 * t15 * t20;
  c_c_tmp = d12 * t27;
  c_tmp = dq[2] * dq[3] * m[1] * t5;
  b_c_tmp = d17 * t6 * t7 * t8 * t11;
  pg_c_tmp = d18 * t5;
  c[0] = t35 * t36 * ((((((((((((((((((((((((((((((((((((((((((((d2 * 4.0 + d5 *
    8.0) - d7 * 2.0) + fg_c_tmp * t31 / 2.0) + gg_c_tmp * t31 / 2.0) - fg_c_tmp *
    t33 / 2.0) - gg_c_tmp * t33 / 2.0) - d9 * t3 * t10 * t25 * 4.0) - d18 * t11 *
    t21 * 4.0) - d4 * t3 * t10 * t25 * 16.0) - ig_c_tmp * 4.0) + c_tmp * t11 *
    t21 * 4.0) + h_c_tmp) + d5 * t28 * 8.0) - d7 * t30 * 2.0) - f_c_tmp * t15 *
    t20 * 4.0) + g_c_tmp * t15 * t20 * 4.0) + f_c_tmp * t13 * t23 * 8.0) -
    g_c_tmp * t13 * t23 * 8.0) - d13 * t7 * t10 * t25 * 2.0) - l_c_tmp * 2.0) +
    ((((((((((((((((((((d10 * t7 * t10 * t25 * -8.0 - d12 * 2.0) + d13 * t10 *
    t25 * t32) - hg_c_tmp * t31) + d10 * t10 * t25 * t32 * 4.0) + hg_c_tmp * t33)
    - d17 * t11 * t21 * t34) + pg_c_tmp * t11 * t21 * 8.0) - d6 * t3 * t5 * t11 *
    t21 * 4.0) + kg_c_tmp) - lg_c_tmp * 4.0) - d * m[1] * t3 * t11 * t21 * t30
    * 4.0) - mg_c_tmp * 4.0) - dq[0] * dq[3] * m[1] * t5 * t11 * t21 * t29 *
    4.0) + i_c_tmp * t27) + h_c_tmp * t28) + m_c_tmp) - n_c_tmp * 2.0) - j_c_tmp
    * 4.0) - o_c_tmp * 2.0) + k_c_tmp * t30 * 4.0)) + (((((((((((((((((d19 * t6 *
    t7 * t11 * t15 * t21 * -2.0 - d21 * t9 * t20 * t23 * 4.0) + jg_c_tmp * t15 *
    t20 * 4.0) - d26 * t6 * t15 * t20 * 4.0) - jg_c_tmp * t13 * t23 * 8.0) + d25
    * t4 * t6 * t13 * t23 * 8.0) + d23 * t5 * t8 * t15 * t20 * 4.0) - c_tmp_tmp *
    t5 * t6 * t15 * t20 * 4.0) - d22 * t2 * t5 * t8 * t13 * t23 * 8.0) + d20 *
    m[1] * t4 * t5 * t6 * t13 * t23 * 8.0) - d20 * m[1] * t4 * t6 * t12 *
    t20 * t23 * 2.0) - L[0] * L[1] * m[1] * t2 * t8 * t13 * t20 * t23 *
    2.0) - g_c_tmp * t14 * t20 * t23 * 2.0) + dc_c_tmp * t7 * t11 * t21 * 4.0) +
    d36 * t9 * t11 * t21 * 4.0) - hc_c_tmp * t9 * t11 * t21 * 2.0) + d17 * t9 *
    t11 * t17 * t20) - l_c_tmp * t30 * 2.0)) + ((((((((((((((((((c_c_tmp * -2.0
    - d12 * t28 * 2.0) - d12 * t29 * 2.0) - d29 * t6 * t9 * t11 * t21 * 2.0) -
    d29 * t7 * t8 * t11 * t21 * 2.0) + kg_c_tmp * t30) + lg_c_tmp * t28 * 4.0) +
    lg_c_tmp * t29 * 8.0) + mg_c_tmp * t29 * 4.0) + dq[0] * dq[3] * m[1] *
    t11 * t17 * t20 * t27 * t30) + m_c_tmp * t30) + dq[0] * dq[3] * m[1] *
    t11 * t21 * t27 * t28 * t29 * 4.0) - n_c_tmp * t30 * 2.0) - j_c_tmp * t30 *
    4.0) - o_c_tmp * t30 * 2.0) - cb_c_tmp) - db_c_tmp * 2.0) - p_c_tmp * 2.0) +
    eb_c_tmp)) + (((((((((((((((((d30 * t2 * t6 * t11 * t12 * t21 * t28 -
    ng_c_tmp * t29 * 2.0) + ng_c_tmp * t30) - d32 * t11 * t13 * t21 * t29 * 2.0)
    + d31 * t6 * t11 * t13 * t21 * t30) + og_c_tmp * t28) - og_c_tmp * t30) -
    d_c_tmp * t21 * t30) - d33 * t5 * t7 * t8 * t11 * t15 * t21 * 2.0) + d33 *
    t7 * t8 * t11 * t15 * t17 * t20) - d20 * m[1] * q[1] * t2 * t7 * t8 *
    t13 * t23 * 4.0) + L[0] * L[1] * m[1] * q[1] * t4 * t6 * t7 * t13 *
    t23 * 4.0) + xb_c_tmp * t8 * t9 * t15 * t20 * 4.0) - q_c_tmp * t4 * t6 * t9 *
    t15 * t20 * 4.0) + bc_c_tmp) + wb_c_tmp * t6 * t13 * t17 * t23) + s_c_tmp *
    t14 * t17 * t23) - o_c_tmp_tmp * t15 * t20 * 4.0)) + (((((((((((((((e_c_tmp *
    4.0 + o_c_tmp_tmp * t13 * t23 * 8.0) - d25 * t4 * t5 * t6 * t13 * t23 * 8.0)
    - d23 * t3 * t8 * t12 * t20 * t23 * 4.0) + d22 * t3 * t4 * t6 * t12 * t20 *
    t23 * 4.0) - d22 * t3 * t4 * t6 * t13 * t20 * t23 * 2.0) - d20 * m[1] * t2
    * t3 * t8 * t14 * t20 * t23 * 2.0) - p_c_tmp_tmp * t12 * t20 * t23 * 2.0) -
    L[0] * L[1] * m[1] * t4 * t5 * t6 * t13 * t20 * t23 * 2.0) -
    p_c_tmp_tmp * t14 * t20 * t23 * 2.0) - L[0] * L[1] * m[1] * t2 * t5 *
    t8 * t15 * t20 * t23 * 2.0) - g_c_tmp * t12 * t20 * t23 * t28 * 2.0) +
    jc_c_tmp * 4.0) - ic_c_tmp * 4.0) - ge_c_tmp * t21 * 2.0) - lc_c_tmp * 4.0))
    + ((((((((((((((((d35 * t5 * t8 * t11 * t21 * -2.0 - d36 * t5 * t9 * t11 *
    t21 * 4.0) - b_c_tmp * t21 * 2.0) - t_c_tmp * t7 * t11 * t21 * t27 * 2.0) +
    d15 * q[3] * t2 * t6 * t11 * t21 * t29 * 4.0) - d4 * q[3] * t3 * t7 *
    t11 * t21 * t29 * 2.0) - d14 * m[1] * q[3] * t2 * t6 * t11 * t21 * t30 *
    2.0) + w_c_tmp_tmp * t30 * 4.0) - dq[0] * dq[2] * m[1] * q[3] * t4 *
    t8 * t11 * t21 * t27 * 4.0) - vc_c_tmp * 2.0) - xc_c_tmp * 4.0) - v_c_tmp *
    t29 * 4.0) - gc_c_tmp * t6 * t11 * t21 * t30 * 2.0) + qc_c_tmp * 4.0) +
    ad_c_tmp) + w_c_tmp) - cd_c_tmp * 4.0)) + ((((((((((((((((d11 * t9 * t11 *
    t21 * t27 * t29 * 4.0 - d38 * t4 * t6 * t8 * t11 * t21 * 4.0) - d39 * t5 *
    t6 * t7 * t11 * t21 * 4.0) - d1 * t2 * t4 * t7 * t9 * t11 * t21 * 4.0) - d39
    * t3 * t8 * t9 * t11 * t21 * 2.0) - d27 * m[1] * t2 * t5 * t8 * t9 * t11 *
    t21 * 2.0) + d27 * m[1] * t4 * t5 * t7 * t8 * t11 * t21 * 4.0) - dq[0] *
    dq[3] * m[1] * t6 * t7 * t8 * t9 * t11 * t21 * 4.0) + id_c_tmp) + d39 *
    t8 * t9 * t11 * t17 * t20) - x_c_tmp * 4.0) + jd_c_tmp * 4.0) - y_c_tmp *
    t30 * 2.0) - dq[0] * dq[3] * m[1] * t5 * t11 * t21 * t27 * t28 * t29 *
    8.0) + n_c_tmp * t29 * t30 * 4.0) - nd_c_tmp * 2.0) + t19 * t12 * t21)) +
    (((((((((((((((((d30 * t4 * t6 * t7 * t9 * t11 * t12 * t21 - t19 * t13 * t21)
    + d40 * t6 * t7 * t9 * t11 * t13 * t21) + d8 * t2 * t7 * t8 * t9 * t11 * t14
    * t21) - d8 * t4 * t6 * t7 * t9 * t11 * t14 * t21) - m[1] * q[3] * t2 *
    t7 * t8 * t9 * t11 * t15 * t21) + m[1] * q[3] * t4 * t6 * t7 * t9 * t11 *
    t15 * t21) + fb_c_tmp * t17 * t20) + bb_c_tmp * t17 * t20) - cb_c_tmp * t30)
    + db_c_tmp * t29 * 4.0) + p_c_tmp * t29 * 4.0) - pd_c_tmp * 2.0) - od_c_tmp *
    4.0) - gb_c_tmp * t28 * 2.0) - bb_c_tmp * t21 * t27 * 4.0) + eb_c_tmp * t30)
     + qd_c_tmp)) + ((((((((((((((((d_c_tmp * t17 * t20 * t27 - d8 * t2 * t6 *
    t11 * t12 * t21 * t28 * t30) - d31 * t6 * t11 * t12 * t21 * t29 * t30 * 2.0)
    - og_c_tmp * t27 * t28 * 2.0) - d8 * t2 * t6 * t11 * t13 * t21 * t29 * t30 *
    2.0) + hb_c_tmp * t28 * t30) + d19 * t5 * t6 * t7 * t11 * t15 * t17 * t20) -
    mb_c_tmp * t23 * 4.0) - nb_c_tmp * t20 * 4.0) + pb_c_tmp * t20 * 4.0) -
    sb_c_tmp * 4.0) - tb_c_tmp * 4.0) + ib_c_tmp * t7 * t9 * t23 * 4.0) +
    jb_c_tmp * t7 * t9 * t20 * 4.0) + kb_c_tmp * t6 * t8 * t20 * 4.0) - ub_c_tmp
                      * t8 * t20 * t23 * 4.0) + vb_c_tmp * t6 * t20 * t23 * 4.0))
    + ((((((((((((((d20 * dq[0] * dq[1] * m[1] * t3 * t9 * t20 * t23 * -4.0
    - d20 * dq[0] * dq[3] * m[1] * t5 * t7 * t20 * t23 * 4.0) + L[0] *
    L[1] * dq[0] * dq[1] * m[1] * t9 * t20 * t23 * t28 * 8.0) + d20 * dq
    [0] * dq[1] * m[1] * q[1] * t2 * t3 * t4 * t23 * 8.0) + L[0] * L[1]
    * dq[0] * dq[3] * m[1] * q[3] * t2 * t3 * t4 * t20 * 8.0) + ue_c_tmp *
    4.0) + ve_c_tmp * 4.0) - te_c_tmp * t20 * 4.0) - pb_c_tmp * t5 * t20 * 4.0)
    + qb_c_tmp * t6 * t8 * t23 * 8.0) + rb_c_tmp * t6 * t8 * t20 * 8.0) -
          qb_c_tmp * t7 * t9 * t23 * 4.0) + we_c_tmp * 4.0) - rb_c_tmp * t7 * t9
        * t20 * 4.0) + xe_c_tmp * 4.0)) + ((((((((((((((d20 * dq[2] * dq[3] *
    m[1] * q[3] * t3 * t6 * t8 * t20 * -4.0 - d20 * dq[2] * dq[3] * m[1]
    * q[3] * t5 * t6 * t8 * t20 * 4.0) - d20 * dq[0] * dq[1] * m[1] * q
    [1] * t2 * t4 * t23 * t28 * 4.0) - L[0] * L[1] * dq[0] * dq[3] * m[1]
    * q[3] * t2 * t4 * t20 * t28 * 4.0) - sb_c_tmp * t28 * 4.0) - tb_c_tmp *
    t28 * 4.0) + af_c_tmp * t7 * t20 * t23 * 8.0) + bf_c_tmp * t8 * t20 * t23 *
    8.0) - cf_c_tmp * t6 * t20 * t23 * 8.0) + gf_c_tmp * 4.0) - hf_c_tmp * 4.0)
    + if_c_tmp * 4.0) + ff_c_tmp * t5 * t7 * t20 * t23 * 4.0) - ef_c_tmp * t4 *
    t9 * t20 * t23 * 4.0) + d21 * t6 * t7 * t8 * t20 * t23 * 8.0)) +
    (((((((((((((((d20 * dq[0] * dq[3] * m[1] * t6 * t8 * t9 * t20 * t23 *
    4.0 - b_c_tmp_tmp_tmp * t6 * t8 * t9 * t20 * t23 * 4.0) - d20 * dq[0] *
    dq[2] * m[1] * t2 * t8 * t20 * t23 * t28 * 4.0) + L[0] * L[1] * dq[0]
    * dq[2] * m[1] * t4 * t6 * t20 * t23 * t28 * 4.0) + ac_c_tmp * t7 * t8 *
    t13 * t23 * 4.0) - yb_c_tmp * t7 * t13 * t23 * 4.0) - yf_c_tmp * t8 * t9 *
    t15 * t20 * 4.0) + ag_c_tmp * t4 * t6 * t9 * t15 * t20 * 4.0) + sd_c_tmp *
    t8 * t13 * t17 * t23) + rd_c_tmp * t6 * t14 * t17 * t23) + ud_c_tmp) +
         ac_c_tmp * t8 * t13 * t17 * t23) + yb_c_tmp * t14 * t17 * t23) +
       yb_c_tmp * t15 * t17 * t23) + bc_c_tmp * t28) + o_c_tmp_tmp * t12 * t20 *
     t23 * 4.0)) + (((((((((((((((d20 * m[1] * t3 * t4 * t5 * t6 * t12 * t20 *
    t23 * -4.0 - d20 * m[1] * t2 * t3 * t5 * t8 * t13 * t20 * t23 * 2.0) -
    L[0] * L[1] * m[1] * t3 * t4 * t5 * t6 * t14 * t20 * t23 * 2.0) -
    e_c_tmp * t23 * 2.0) - p_c_tmp_tmp * t12 * t20 * t23 * t28 * 2.0) - ae_c_tmp
    * 2.0) - ec_c_tmp * 2.0) - fe_c_tmp * t5 * t6 * t11 * t21 * 2.0) - ce_c_tmp *
    2.0) - cc_c_tmp * t7 * t8 * t9 * t11 * t21 * 2.0) - de_c_tmp * 2.0) -
                        be_c_tmp * 2.0) + kc_c_tmp * t17 * t20) + mc_c_tmp * t17
                      * t20) + xd_c_tmp * t6 * t11 * t17 * t20) + hc_c_tmp * t5 *
                    t9 * t11 * t17 * t20)) + (((((((((((((((nc_c_tmp * t17 * t20
    + oc_c_tmp * t17 * t20) + he_c_tmp * 4.0) - ie_c_tmp * 4.0) - kc_c_tmp * t21
    * t28 * 4.0) - jc_c_tmp * t29 * 8.0) + ic_c_tmp * t29 * 4.0) + je_c_tmp *
    8.0) - mc_c_tmp * t21 * t30 * 4.0) + lc_c_tmp * t28 * 4.0) - yd_c_tmp * t8 *
    t11 * t21 * t30 * 2.0) - nc_c_tmp * t21 * t28 * 4.0) + sc_c_tmp) - oc_c_tmp *
    t21 * t30 * 4.0) + pc_c_tmp * t17 * t20 * t30) + rc_c_tmp * t27)) +
    (((((((((((((((d35 * t8 * t11 * t17 * t20 * t30 + rc_c_tmp * t29) + ke_c_tmp
    * 4.0) - le_c_tmp * 4.0) - tc_c_tmp * t30 * 2.0) + uc_c_tmp * t29 * t30 *
    4.0) + me_c_tmp * 4.0) - dq[0] * dq[1] * m[1] * q[3] * t3 * t7 * t11 *
             t21 * t29 * t30 * 2.0) - wc_c_tmp * t30 * 4.0) + xc_c_tmp * t29 *
           8.0) - vc_c_tmp * t30 * 2.0) - ne_c_tmp * 2.0) - yc_c_tmp * t29 * 4.0)
       - qc_c_tmp * t29 * 2.0) + bd_c_tmp * t27 * t28) + ad_c_tmp * t30)) +
    (((((((((((((((bd_c_tmp * t28 * t29 + w_c_tmp * t30) - c_c_tmp * t28 * t29 *
    4.0) - cd_c_tmp * t30 * 4.0) + oe_c_tmp * t7 * t9 * t11 * t21 * 4.0) +
    pe_c_tmp * 8.0) + dd_c_tmp * t7 * t9 * t11 * t21 * 4.0) - ed_c_tmp * t5 * t6
             * t9 * t11 * t21 * 2.0) - fd_c_tmp * t5 * t7 * t9 * t11 * t21 * 2.0)
           + d18 * t6 * t7 * t8 * t9 * t11 * t21 * 4.0) + d1 * t5 * t6 * t7 * t8
          * t9 * t11 * t21 * 4.0) - c_tmp * t6 * t7 * t8 * t9 * t11 * t21 * 2.0)
        + ed_c_tmp * t6 * t9 * t11 * t17 * t20) + fd_c_tmp * t7 * t9 * t11 * t17
       * t20) + hd_c_tmp * t6 * t9 * t11 * t17 * t20) + qe_c_tmp * 4.0)) +
    (((((((((((((((d6 * t6 * t7 * t8 * t9 * t11 * t17 * t20 - gd_c_tmp * t30 *
    4.0) + dq[1] * dq[3] * m[1] * t2 * t5 * t6 * t7 * t11 * t21 * t29 * 8.0)
    - hd_c_tmp * t7 * t8 * t11 * t21 * t27 * 8.0) + id_c_tmp * t30) - x_c_tmp *
               t30 * 4.0) + jd_c_tmp * t30 * 4.0) - h_c_tmp_tmp * t7 * t8 * t9 *
             t11 * t12 * t21) + ab_c_tmp * t6 * t7 * t9 * t11 * t12 * t21) -
           kd_c_tmp * t12 * t21) + ld_c_tmp * t12 * t21) + kd_c_tmp * t13 * t21)
        - ld_c_tmp * t13 * t21) + md_c_tmp * t17 * t20) - kd_c_tmp * t14 * t21)
     + ld_c_tmp * t14 * t21)) + (((((((((((((((md_c_tmp * t21 * t29 * -4.0 +
    nd_c_tmp * t27 * 4.0) + re_c_tmp) + j_c_tmp_tmp * t17 * t20 * t28) -
    db_c_tmp * t28 * t29 * 4.0) + od_c_tmp * t28 * 4.0) - pd_c_tmp * t30 * 2.0)
    + se_c_tmp) + qd_c_tmp * t30) + k_c_tmp_tmp * t13 * t17 * t20 * t27 * t30) -
    hb_c_tmp * t27 * t28 * t30 * 2.0) + rd_c_tmp * t5 * t6 * t13 * t17 * t23) +
    td_c_tmp * t14 * t17 * t23) + td_c_tmp * t15 * t17 * t23) + ud_c_tmp * t28)
    - sf_c_tmp * t9 * t11 * t21 * 2.0)) + ((((((((((((((vd_c_tmp * t5 * t7 * t11
    * t21 * -2.0 - pf_c_tmp * 4.0) - tf_c_tmp * t6 * t7 * t9 * t11 * t21 * 2.0)
    - r_c_tmp_tmp * t6 * t8 * t9 * t11 * t21 * 2.0) + of_c_tmp * 4.0) - dq[0] *
    dq[3] * m[1] * q[3] * t3 * t5 * t6 * t7 * t8 * t11 * t21 * 2.0) -
    t_c_tmp_tmp * t6 * t7 * t9 * t11 * t21 * 2.0) + wd_c_tmp * t9 * t11 * t17 *
    t20) + mf_c_tmp * t7 * t11 * t17 * t20) - rf_c_tmp * 2.0) + yd_c_tmp * t5 *
    t8 * t11 * t17 * t20) + t_c_tmp * t6 * t8 * t9 * t11 * t17 * t20) + u_c_tmp *
    t6 * t7 * t9 * t11 * t17 * t20) + v_c_tmp_tmp * t6 * t7 * t8 * t11 * t17 *
    t20) + ee_c_tmp * t17 * t20)) + ((((((((((((((ec_c_tmp * t28 * 4.0 +
    ae_c_tmp * t30 * 4.0) + be_c_tmp * t28 * 4.0) + ce_c_tmp * t30 * 4.0) +
    de_c_tmp * t29 * 4.0) - ee_c_tmp * t21 * t27 * 4.0) + fe_c_tmp * t6 * t11 *
    t17 * t20 * t30) + ge_c_tmp * t17 * t20 * t30) - he_c_tmp * t29 * 8.0) +
    ie_c_tmp * t29 * 8.0) + b_c_tmp * t17 * t20 * t30) - je_c_tmp * t28 * 8.0) +
    sc_c_tmp * t30) + ke_c_tmp * t30 * 4.0) - le_c_tmp * t30 * 4.0)) +
    (((((((((((((me_c_tmp * t30 * 4.0 + ne_c_tmp * t29 * 4.0) - oe_c_tmp * t5 *
                t7 * t9 * t11 * t21 * 4.0) - pg_c_tmp * t6 * t7 * t8 * t9 * t11 *
               t21 * 4.0) + dq[1] * dq[3] * m[1] * t2 * t3 * t5 * t8 * t9 *
              t11 * t17 * t20) - pe_c_tmp * t28 * 8.0) + qe_c_tmp * t30 * 4.0) +
           b_c_tmp_tmp * t7 * t8 * t9 * t11 * t12 * t21) - e_c_tmp_tmp * t6 * t7
          * t9 * t11 * t12 * t21) + re_c_tmp * t30) + se_c_tmp * t30) - eg_c_tmp
       * t4 * t5 * t23 * 8.0) - wf_c_tmp * t4 * t5 * t20 * 8.0) + te_c_tmp * t5 *
     t20 * 4.0)) + (((((((((((((qb_c_tmp * t5 * t6 * t8 * t23 * -8.0 - rb_c_tmp *
    t5 * t6 * t8 * t20 * 8.0) + xf_c_tmp * t5 * t6 * t8 * t20 * 4.0) + ue_c_tmp *
    t28 * 4.0) + ve_c_tmp * t28 * 4.0) + we_c_tmp * t28 * 4.0) + xe_c_tmp * t28 *
    4.0) - jf_c_tmp * t7 * t20 * t23 * 8.0) - af_c_tmp * t5 * t7 * t20 * t23 *
    8.0) - bf_c_tmp * t5 * t8 * t20 * t23 * 8.0) + cf_c_tmp * t5 * t6 * t20 *
                       t23 * 8.0) - bg_c_tmp * t4 * t9 * t20 * t23 * 8.0) +
                     cg_c_tmp * t4 * t9 * t20 * t23 * 4.0) - kf_c_tmp * t6 * t7 *
                    t8 * t20 * t23 * 8.0)) + (((((((((((((d21 * t5 * t6 * t7 *
    t8 * t20 * t23 * -8.0 - ff_c_tmp * t6 * t8 * t9 * t20 * t23 * 8.0) +
    dg_c_tmp * t6 * t8 * t9 * t20 * t23 * 4.0) + gf_c_tmp * t28 * 4.0) -
    hf_c_tmp * t28 * 4.0) + if_c_tmp * t28 * 4.0) + l_c_tmp_tmp * t6 * t8 * t9 *
    t20 * t23 * t28 * 4.0) + jf_c_tmp * t5 * t7 * t20 * t23 * 8.0) + kf_c_tmp *
    t5 * t6 * t7 * t8 * t20 * t23 * 8.0) + uf_c_tmp * 4.0) + lf_c_tmp * t5 * t6 *
    t7 * t8 * t11 * t21 * 8.0) - nf_c_tmp * t5 * t7 * t8 * t9 * t11 * t21 * 2.0)
    - vf_c_tmp * 4.0) + nf_c_tmp * t7 * t8 * t9 * t11 * t17 * t20)) +
                      (((((((((s_c_tmp_tmp * t7 * t8 * t9 * t11 * t17 * t20 +
    qf_c_tmp * t17 * t20) - of_c_tmp * t28 * 4.0) - pf_c_tmp * t30 * 4.0) -
    qf_c_tmp * t21 * t29 * 4.0) + rf_c_tmp * t27 * 4.0) - sf_c_tmp * t6 * t7 *
    t8 * t11 * t21 * 8.0) + tf_c_tmp * t5 * t6 * t7 * t9 * t11 * t17 * t20) +
                        uf_c_tmp * t30 * 4.0) + vf_c_tmp * t28 * 4.0)) * -0.25;
  d = m[0] * t10;
  c_tmp = d * t13;
  d2 = m[1] * t10;
  d5 = d2 * t13;
  b_c_tmp = m[0] * t3 * t10;
  d7 = m[1] * t3;
  c_c_tmp = d20 * dq[1];
  c_tmp_tmp = d * t12;
  f_c_tmp = c_tmp_tmp * t20 * t25;
  b_c_tmp_tmp = d2 * t12;
  g_c_tmp = b_c_tmp_tmp * t20 * t25;
  e_c_tmp_tmp = d22 * t9;
  h_c_tmp = e_c_tmp_tmp * t15 * t22;
  i_c_tmp = d37 * t11 * t24;
  j_c_tmp = d_c_tmp_tmp * t11 * t24;
  j_c_tmp_tmp = d28 * t5 * t11 * t24;
  k_c_tmp_tmp = d28 * t11;
  k_c_tmp = k_c_tmp_tmp * t17 * t22;
  o_c_tmp_tmp = d8 * t7 * t11 * t12;
  l_c_tmp = o_c_tmp_tmp * t24;
  m_c_tmp = c_c_tmp * dq[3] * m[1];
  p_c_tmp_tmp = d23 * t4;
  n_c_tmp = d25 * t9;
  r_c_tmp_tmp = d22 * t6 * t8;
  o_c_tmp = j_c_tmp_tmp * t27;
  p_c_tmp = k_c_tmp * t27;
  k_c_tmp *= t29;
  s_c_tmp = k_c_tmp_tmp * t24 * t27 * t29;
  k_c_tmp_tmp = d31 * t4;
  t_c_tmp = k_c_tmp_tmp * t9 * t11;
  u_c_tmp = d8 * t6 * t8 * t9 * t11;
  s_c_tmp_tmp = f_c_tmp_tmp * t7 * t11 * t12;
  v_c_tmp = s_c_tmp_tmp * t24;
  w_c_tmp = o_c_tmp_tmp * t17 * t22;
  x_c_tmp = d33 * t4;
  y_c_tmp = d24 * t4;
  ab_c_tmp = p_c_tmp_tmp * t5;
  bb_c_tmp = p_c_tmp_tmp * t7;
  o_c_tmp_tmp = d22 * t7 * t9;
  cb_c_tmp = p_c_tmp_tmp * t12 * t21 * t23;
  db_c_tmp = r_c_tmp_tmp * t12 * t21 * t23;
  t_c_tmp_tmp = d16 * t5;
  eb_c_tmp = t_c_tmp_tmp * t7 * t11 * t24;
  fb_c_tmp = db_c_tmp_tmp * t6 * t11 * t24;
  gb_c_tmp = d_c_tmp_tmp * t4;
  hb_c_tmp = d37 * t4;
  mb_c_tmp = fc_c_tmp * t8 * t11;
  nb_c_tmp = d17 * t4 * t6 * t11;
  d_c_tmp_tmp = d16 * t7 * t11;
  pb_c_tmp = d_c_tmp_tmp * t17 * t22;
  d_c_tmp_tmp *= t24;
  sb_c_tmp = d_c_tmp_tmp * t27;
  tb_c_tmp = d34 * t9 * t11;
  v_c_tmp_tmp = d1 * t4;
  vb_c_tmp = v_c_tmp_tmp * t5;
  wb_c_tmp = d38 * t6 * t7 * t11 * t24;
  yb_c_tmp = v_c_tmp_tmp * t7 * t8 * t11;
  ac_c_tmp = d8 * t5;
  bc_c_tmp = v_c_tmp * t27;
  dc_c_tmp = ac_c_tmp * t7 * t11 * t12 * t24;
  ec_c_tmp = w_c_tmp * t27;
  w_c_tmp *= t29;
  gc_c_tmp = l_c_tmp * t27 * t29;
  hc_c_tmp = m_c_tmp * q[3];
  ic_c_tmp = c_c_tmp * dq[2] * m[1];
  jc_c_tmp = hc_c_tmp * t2 * t4;
  jb_c_tmp *= t4;
  kb_c_tmp *= t4;
  kc_c_tmp = jb_c_tmp * t6;
  lc_c_tmp = hc_c_tmp * t6;
  ub_c_tmp *= t4;
  mc_c_tmp = d21 * t4;
  nc_c_tmp = mc_c_tmp * t6;
  oc_c_tmp = ic_c_tmp * t2;
  ic_c_tmp *= t4;
  pc_c_tmp = ic_c_tmp * t6;
  qc_c_tmp = lb_c_tmp * t6;
  rc_c_tmp = y_c_tmp * t5;
  sc_c_tmp = rc_c_tmp * t15 * t21;
  tc_c_tmp = ab_c_tmp * t7;
  t19 = d25 * t5;
  w_c_tmp_tmp = t19 * t6;
  uc_c_tmp = w_c_tmp_tmp * t8;
  vc_c_tmp = uc_c_tmp * t15 * t21;
  wc_c_tmp = d25 * t6;
  e_c_tmp = d22 * t5;
  xc_c_tmp = e_c_tmp * t6;
  yc_c_tmp = xc_c_tmp * t7 * t8;
  ad_c_tmp = wc_c_tmp * t8;
  xc_c_tmp *= t8;
  bd_c_tmp = xc_c_tmp * t15;
  cd_c_tmp = d11 * t4;
  cc_c_tmp *= t4;
  dd_c_tmp = q_c_tmp_tmp * t5 * t6 * t11 * t24;
  ed_c_tmp = hb_c_tmp * t5 * t8 * t11 * t24;
  fd_c_tmp = db_c_tmp_tmp * t5 * t6 * t11 * t24;
  gd_c_tmp = d36 * t4 * t6 * t11;
  hd_c_tmp = gb_c_tmp * t5 * t8 * t11 * t24;
  id_c_tmp = cd_c_tmp * t6 * t11;
  gb_c_tmp = gb_c_tmp * t8 * t11;
  jd_c_tmp = ab_c_tmp_tmp * t8 * t11;
  ab_c_tmp_tmp = d34 * t5 * t9 * t11;
  kd_c_tmp = ab_c_tmp_tmp * t17 * t22;
  ld_c_tmp = q_c_tmp_tmp * t6 * t11;
  hb_c_tmp = hb_c_tmp * t8 * t11 * t24;
  md_c_tmp = eb_c_tmp * t27;
  nd_c_tmp = fb_c_tmp * t29;
  od_c_tmp = gb_c_tmp * t24 * t27;
  pd_c_tmp = sb_c_tmp * t29;
  qd_c_tmp = d39 * t4;
  rd_c_tmp = d38 * t5;
  td_c_tmp = d6 * t4;
  ud_c_tmp = rd_c_tmp * t6 * t7 * t11 * t24;
  vd_c_tmp = vb_c_tmp * t7 * t8 * t11 * t24;
  wd_c_tmp = qd_c_tmp * t6 * t8 * t11 * t24;
  xd_c_tmp = yb_c_tmp * t17 * t22;
  yd_c_tmp = wb_c_tmp * t29;
  yb_c_tmp = yb_c_tmp * t24 * t27;
  ae_c_tmp = f_c_tmp_tmp * t5;
  be_c_tmp = h_c_tmp_tmp * t4;
  ce_c_tmp = ae_c_tmp * t7 * t11 * t12;
  de_c_tmp = ce_c_tmp * t17 * t22;
  ce_c_tmp *= t24;
  ee_c_tmp = s_c_tmp_tmp * t17 * t22;
  fe_c_tmp = ab_c_tmp * t12;
  ge_c_tmp = fc_c_tmp * t6 * t7 * t9 * t11;
  he_c_tmp = cd_c_tmp * t7 * t8 * t9 * t11 * t24;
  ie_c_tmp = y_c_tmp_tmp * t8 * t11;
  je_c_tmp = d18 * t4;
  ke_c_tmp = k_c_tmp_tmp * t5;
  le_c_tmp = k_c_tmp_tmp * t6 * t7 * t8 * t11 * t12 * t24;
  me_c_tmp = ke_c_tmp * t9 * t11;
  ac_c_tmp = ac_c_tmp * t6 * t8 * t9 * t11;
  ne_c_tmp = ee_c_tmp * t27 * t29;
  rb_c_tmp *= t4;
  oe_c_tmp = jc_c_tmp * t5;
  pe_c_tmp = xf_c_tmp * t4;
  qe_c_tmp = n_c_tmp_tmp * t5;
  jb_c_tmp = jb_c_tmp * t5 * t6;
  re_c_tmp = hc_c_tmp * t5 * t6;
  se_c_tmp = bf_c_tmp * t4;
  te_c_tmp = ub_c_tmp * t5;
  ue_c_tmp = ye_c_tmp * t5;
  mc_c_tmp = mc_c_tmp * t5 * t6;
  ve_c_tmp = oc_c_tmp * t5;
  ic_c_tmp = ic_c_tmp * t5 * t6;
  we_c_tmp = m_c_tmp * t2 * t4;
  lb_c_tmp = lb_c_tmp * t5 * t6;
  xe_c_tmp = l_c_tmp_tmp * t4 * t6;
  af_c_tmp = m_c_tmp * t6;
  bf_c_tmp = cc_c_tmp * t5;
  cf_c_tmp = d35 * t4;
  gf_c_tmp = nf_c_tmp * t4;
  hf_c_tmp = cc_c_tmp * t6 * t7 * t8 * t11 * t24;
  fc_c_tmp = fc_c_tmp * t5 * t6 * t7 * t9 * t11 * t24;
  cd_c_tmp = cd_c_tmp * t5 * t7 * t8 * t9 * t11;
  if_c_tmp = be_c_tmp * t5;
  jf_c_tmp = be_c_tmp * t6 * t7 * t8 * t11 * t12 * t17 * t22;
  kf_c_tmp = m[1] * t5;
  lf_c_tmp = p_c_tmp_tmp * t13;
  mf_c_tmp = r_c_tmp_tmp * t13;
  nf_c_tmp = o_c_tmp_tmp * t13;
  of_c_tmp = y_c_tmp * t13;
  pf_c_tmp = ab_c_tmp * t13;
  qf_c_tmp = ad_c_tmp * t13;
  rf_c_tmp = o_c_tmp_tmp * t12;
  sf_c_tmp = rc_c_tmp * t13;
  tf_c_tmp = uc_c_tmp * t13;
  uf_c_tmp = y_c_tmp * t12;
  vf_c_tmp = ad_c_tmp * t12;
  xf_c_tmp = x_c_tmp * t5;
  fg_c_tmp = kf_c_tmp * t6;
  gg_c_tmp = ye_c_tmp * t7 * t8;
  hg_c_tmp = nc_c_tmp * t7;
  ig_c_tmp = xc_c_tmp * t12;
  jg_c_tmp = m[1] * t6;
  kg_c_tmp = ue_c_tmp * t7 * t8;
  lg_c_tmp = mc_c_tmp * t7;
  mg_c_tmp = d27 * m[1] * q[3] * t9 * t11 * t24;
  ng_c_tmp = d20 * m[1] * t6 * t7 * t8;
  og_c_tmp = o_c_tmp_tmp * t15;
  c[1] = t36 * ((((((((((((((((((((((((((((((((((((((((((c_tmp * t25 * -4.0 - d5
    * t25 * 16.0) - d28 * t11 * t24 * 4.0) + b_c_tmp * t13 * t25 * 4.0) + d7 *
    t10 * t13 * t25 * 16.0) + f_c_tmp) - c_tmp * t20 * t25) + g_c_tmp * 4.0) -
    d5 * t20 * t25 * 4.0) + m[0] * q[1] * t7 * t10 * t13 * t25 * 4.0) + m
    [1] * q[1] * t7 * t10 * t13 * t25 * 16.0) - l_c_tmp * 2.0) - x_c_tmp * t11
    * t15 * t24 * 2.0) - jg_c_tmp * t8 * t11 * t15 * t24 * 2.0) - b_c_tmp * t12 *
    t20 * t25 * 2.0) - m[0] * t3 * t10 * t13 * t20 * t25) - m[1] * t3 * t10 *
    t12 * t20 * t25 * 8.0) - m[1] * t3 * t10 * t13 * t20 * t25 * 4.0) - m[0]
    * t7 * t10 * t12 * t21 * t25) - m[1] * t7 * t10 * t12 * t21 * t25 * 4.0) +
    f_c_tmp * t28) + g_c_tmp * t28 * 4.0) + c_tmp_tmp * t21 * t25 * t32 / 2.0) +
    h_c_tmp * 4.0) + ((((((((((((((((((((j_c_tmp_tmp * 4.0 - q_c_tmp * t5 * t15 *
    t22 * 4.0) + p_c_tmp_tmp * t15 * t21 * 4.0) + r_c_tmp_tmp * t15 * t21 * 4.0)
    - og_c_tmp * t21 * 4.0) - d20 * m[1] * t9 * t13 * t20 * t23 * 4.0) - d20 *
    m[1] * t9 * t12 * t22 * t23 * 2.0) - h_c_tmp * t23 * 2.0) + i_c_tmp * t31)
    - i_c_tmp * t33) - j_c_tmp * t31) + j_c_tmp * t33) - o_c_tmp * 4.0) -
    j_c_tmp_tmp * t29 * 4.0) + p_c_tmp) + k_c_tmp) - s_c_tmp * 4.0) + dc_c_tmp *
    4.0) - l_c_tmp * t30 * 2.0) + b_c_tmp_tmp * t17 * t20 * t25 * t32) -
    hc_c_tmp * t9 * t21 * 4.0)) + (((((((((((((((((m_c_tmp * t5 * t21 * t23 *
    4.0 + d22 * q[3] * t5 * t7 * t15 * t21 * 4.0) - d22 * t2 * t3 * t4 * t15 *
    t21 * 4.0) - d20 * m[1] * t2 * t4 * t5 * t15 * t21 * 4.0) - d20 * m[1] *
    t3 * t6 * t8 * t15 * t21 * 4.0) - bd_c_tmp * t21 * 4.0) - cb_c_tmp * 6.0) -
    p_c_tmp_tmp * t14 * t21 * t23 * 2.0) + n_c_tmp * t13 * t20 * t23 * 4.0) -
    n_c_tmp * t12 * t22 * t23 * 2.0) - db_c_tmp * 6.0) - r_c_tmp_tmp * t14 * t21
    * t23 * 2.0) + e_c_tmp_tmp * t12 * t22 * t23 * t28 * 4.0) - id_c_tmp * t24 *
    2.0) - eb_c_tmp * 4.0) - jd_c_tmp * t24 * 2.0) + pb_c_tmp) + tb_c_tmp * t17 *
    t22)) + (((((((((((((((((d15 * q[3] * t7 * t11 * t24 * t27 * -2.0 - d15 *
    q[3] * t7 * t11 * t24 * t29 * 2.0) - mg_c_tmp * t27 * 2.0) - mg_c_tmp *
    t29 * 2.0) - wb_c_tmp * 2.0) - d38 * t8 * t9 * t11 * t24 * 2.0) - td_c_tmp *
    t6 * t9 * t11 * t24 * 2.0) + o_c_tmp * t29 * 8.0) + p_c_tmp * t30) + k_c_tmp
    * t30) - s_c_tmp * t30 * 4.0) - ce_c_tmp * 2.0) - t_c_tmp * t14 * t24) +
    t_c_tmp * t15 * t24) - u_c_tmp * t14 * t24) + u_c_tmp * t15 * t24) -
              bc_c_tmp) - v_c_tmp * t29)) + (((((((((((((((((d8 * t5 * t7 * t11 *
    t12 * t24 * t27 * -4.0 - d8 * t5 * t7 * t11 * t12 * t24 * t29 * 4.0) +
    ec_c_tmp) + w_c_tmp) - gc_c_tmp * 4.0) + xf_c_tmp * t11 * t15 * t17 * t22) +
    fg_c_tmp * t8 * t11 * t15 * t17 * t22) - xb_c_tmp * t4 * t9 * t15 * t21 *
    4.0) - q_c_tmp * t6 * t8 * t9 * t15 * t21 * 4.0) + sc_c_tmp * 4.0) +
    vc_c_tmp * 4.0) + uf_c_tmp * t21 * t23 * 8.0) + fe_c_tmp * t21 * t23 * 6.0)
    - pf_c_tmp * t21 * t23 * 2.0) - bb_c_tmp * t13 * t20 * t23 * 4.0) + bb_c_tmp
    * t12 * t22 * t23 * 6.0) + vf_c_tmp * t21 * t23 * 8.0) - d25 * t7 * t9 * t12
    * t21 * t23 * 2.0)) + (((((((((((((((((d22 * t5 * t6 * t8 * t12 * t21 * t23 *
    6.0 - d22 * t5 * t6 * t8 * t13 * t21 * t23 * 2.0) - ng_c_tmp * t13 * t20 *
    t23 * 4.0) + ng_c_tmp * t12 * t22 * t23 * 6.0) + lf_c_tmp * t17 * t20 * t23)
    + mf_c_tmp * t17 * t20 * t23) + rf_c_tmp * t17 * t20 * t23) + nf_c_tmp * t17
    * t20 * t23) - cb_c_tmp * t28 * 2.0) + og_c_tmp * t17 * t20 * t23) -
    db_c_tmp * t28 * 2.0) - dd_c_tmp * 4.0) - ie_c_tmp * t24 * 2.0) + fd_c_tmp *
    4.0) + ed_c_tmp * 4.0) - hd_c_tmp * 4.0) + mb_c_tmp * t17 * t22) + nb_c_tmp *
    t17 * t22)) + ((((((((((((((((d3 * m[1] * q[3] * t2 * t6 * t11 * t24 *
    t29 * -4.0 + d3 * m[1] * q[3] * t4 * t8 * t11 * t24 * t27 * 4.0) +
    nd_c_tmp * 4.0) + md_c_tmp * 4.0) - fb_c_tmp * t30 * 2.0) - od_c_tmp * 4.0)
    - hb_c_tmp * t30 * 2.0) + eb_c_tmp * t29 * 4.0) - mb_c_tmp * t24 * t30 * 2.0)
    - nb_c_tmp * t24 * t30 * 2.0) + pb_c_tmp * t30) + pd_c_tmp * 4.0) - sb_c_tmp
                       * t30 * 2.0) - d_c_tmp_tmp * t29 * t30 * 2.0) + tb_c_tmp *
                     t24 * t27 * t29 * 4.0) + ud_c_tmp * 4.0) - wd_c_tmp * 4.0))
    + ((((((((((((((((je_c_tmp * t6 * t9 * t11 * t24 * -2.0 - vb_c_tmp * t6 * t9
    * t11 * t24 * 2.0) - vd_c_tmp * 4.0) - x_c_tmp_tmp * t5 * t8 * t9 * t11 *
    t24 * 2.0) + v_c_tmp_tmp * t6 * t9 * t11 * t17 * t22) + xd_c_tmp) +
    x_c_tmp_tmp * t8 * t9 * t11 * t17 * t22) + yd_c_tmp * 4.0) - wb_c_tmp * t30 *
    2.0) - yb_c_tmp * 4.0) + me_c_tmp * t14 * t24) + ac_c_tmp * t14 * t24) -
           t_c_tmp * t12 * t24 * t28 * 2.0) - u_c_tmp * t12 * t24 * t28 * 2.0) +
         ee_c_tmp * t30) - bc_c_tmp * t30) + dc_c_tmp * t27 * t29 * 8.0)) +
    ((((((((((((((((d30 * t3 * t7 * t11 * t12 * t24 * t29 * t30 + ec_c_tmp * t30)
    + w_c_tmp * t30) - gc_c_tmp * t30 * 4.0) + jc_c_tmp * t22 * 4.0) -
    n_c_tmp_tmp * t8 * t21 * 8.0) + kc_c_tmp * t21 * 8.0) + ob_c_tmp * t8 * t21 *
    4.0) - kb_c_tmp * t6 * t21 * 4.0) + hc_c_tmp * t3 * t9 * t21 * 4.0) +
           lc_c_tmp * t8 * t22 * 4.0) + ub_c_tmp * t21 * t23 * 8.0) - ye_c_tmp *
         t8 * t22 * t23 * 4.0) + nc_c_tmp * t22 * t23 * 4.0) - m_c_tmp * t3 * t5
       * t21 * t23 * 4.0) + oc_c_tmp * t8 * t22 * t23 * 4.0) - pc_c_tmp * t22 *
     t23 * 4.0)) + ((((((((((((((qc_c_tmp * t8 * t21 * t23 * 8.0 + wf_c_tmp * t8
    * t21 * 8.0) - rb_c_tmp * t6 * t21 * 8.0) - oe_c_tmp * t22 * 4.0) - jc_c_tmp
    * t7 * t21 * 4.0) + qe_c_tmp * t8 * t21 * 8.0) - jb_c_tmp * t21 * 8.0) -
    i_c_tmp_tmp * t8 * t21 * 4.0) + pe_c_tmp * t6 * t21 * 4.0) - ob_c_tmp * t5 *
    t8 * t21 * 4.0) + kb_c_tmp * t5 * t6 * t21 * 4.0) + n_c_tmp_tmp * t7 * t8 *
                       t22 * 4.0) - kc_c_tmp * t7 * t22 * 4.0) - re_c_tmp * t8 *
                     t22 * 4.0) - lc_c_tmp * t7 * t8 * t21 * 4.0)) +
    ((((((((((((((se_c_tmp * t21 * t23 * -8.0 - te_c_tmp * t21 * t23 * 8.0) -
    ub_c_tmp * t7 * t22 * t23 * 4.0) + ue_c_tmp * t8 * t22 * t23 * 4.0) -
    mc_c_tmp * t22 * t23 * 4.0) + gg_c_tmp * t21 * t23 * 4.0) - hg_c_tmp * t21 *
             t23 * 4.0) - cb_c_tmp_tmp * t6 * t8 * t21 * t23 * 8.0) - ve_c_tmp *
           t8 * t22 * t23 * 4.0) + ic_c_tmp * t22 * t23 * 4.0) - oc_c_tmp * t7 *
         t8 * t21 * t23 * 4.0) + pc_c_tmp * t7 * t21 * t23 * 4.0) - we_c_tmp *
       t9 * t22 * t23 * 4.0) - lb_c_tmp * t8 * t21 * t23 * 8.0) + df_c_tmp * t8 *
     t9 * t21 * t23 * 8.0)) + ((((((((((((((xe_c_tmp * t9 * t21 * t23 * -8.0 -
    qc_c_tmp * t7 * t8 * t22 * t23 * 4.0) - ef_c_tmp * t8 * t9 * t21 * t23 * 4.0)
    + b_c_tmp_tmp_tmp * t4 * t6 * t9 * t21 * t23 * 4.0) - af_c_tmp * t8 * t9 *
    t22 * t23 * 4.0) + yf_c_tmp * t4 * t9 * t15 * t21 * 4.0) + ag_c_tmp * t6 *
    t8 * t9 * t15 * t21 * 4.0) - rc_c_tmp * t12 * t21 * t23 * 8.0) - sf_c_tmp *
    t21 * t23 * 2.0) - rc_c_tmp * t14 * t21 * t23 * 2.0) - sc_c_tmp * t23 * 2.0)
    - y_c_tmp * t7 * t12 * t22 * t23 * 4.0) + tc_c_tmp * t13 * t20 * t23 * 4.0)
    - tc_c_tmp * t12 * t22 * t23 * 6.0) - uc_c_tmp * t12 * t21 * t23 * 8.0)) +
                       (((((((((((((((tf_c_tmp * t21 * t23 * -2.0 - uc_c_tmp *
    t14 * t21 * t23 * 2.0) - vc_c_tmp * t23 * 2.0) - wc_c_tmp * t7 * t8 * t12 *
    t22 * t23 * 4.0) + of_c_tmp * t17 * t20 * t23) + yc_c_tmp * t13 * t20 * t23 *
    4.0) + y_c_tmp * t14 * t17 * t20 * t23) - yc_c_tmp * t12 * t22 * t23 * 6.0)
    + ab_c_tmp * t14 * t17 * t20 * t23) + ab_c_tmp * t15 * t17 * t20 * t23) +
    qf_c_tmp * t17 * t20 * t23) + ad_c_tmp * t14 * t17 * t20 * t23) + xc_c_tmp *
    t14 * t17 * t20 * t23) + bd_c_tmp * t17 * t20 * t23) - gf_c_tmp * t9 * t11 *
    t24 * 2.0) - bf_c_tmp * t9 * t11 * t24 * 2.0)) + (((((((((((((((u_c_tmp_tmp *
    t6 * t8 * t9 * t11 * t24 * -2.0 - t_c_tmp_tmp * t6 * t8 * t9 * t11 * t24 *
    2.0) + gd_c_tmp * t17 * t22) - he_c_tmp * 2.0) + cc_c_tmp * t9 * t11 * t17 *
    t22) + d16 * t6 * t8 * t9 * t11 * t17 * t22) + dd_c_tmp * t29 * 8.0) -
    ed_c_tmp * t27 * 8.0) - fd_c_tmp * t29 * 8.0) - gd_c_tmp * t24 * t30 * 2.0)
    + hd_c_tmp * t27 * 8.0) + ld_c_tmp * t17 * t22 * t30) + id_c_tmp * t17 * t22
    * t30) + gb_c_tmp * t17 * t22 * t30) + kd_c_tmp * t27) + jd_c_tmp * t17 *
    t22 * t30)) + (((((((((((((((kd_c_tmp * t29 - ld_c_tmp * t24 * t29 * t30 *
    4.0) + hb_c_tmp * t27 * t30 * 4.0) - md_c_tmp * t29 * 8.0) + nd_c_tmp * t30 *
    4.0) - od_c_tmp * t30 * 4.0) - ab_c_tmp_tmp * t24 * t27 * t29 * 4.0) +
    pd_c_tmp * t30 * 4.0) + qd_c_tmp * t5 * t6 * t8 * t11 * t24 * 8.0) -
    bb_c_tmp_tmp * t5 * t8 * t9 * t11 * t24 * 2.0) + bb_c_tmp_tmp * t8 * t9 *
                        t11 * t17 * t22) + rd_c_tmp * t8 * t9 * t11 * t17 * t22)
                      + td_c_tmp * t5 * t6 * t9 * t11 * t17 * t22) - ud_c_tmp *
                     t29 * 8.0) + vd_c_tmp * t27 * 8.0) - wd_c_tmp * t30 * 4.0))
                    + (((((((((((((((xd_c_tmp * t30 + yd_c_tmp * t30 * 4.0) -
    yb_c_tmp * t30 * 4.0) - if_c_tmp * t9 * t11 * t12 * t24 * 2.0) - le_c_tmp *
    4.0) - ae_c_tmp * t6 * t8 * t9 * t11 * t12 * t24 * 2.0) + be_c_tmp * t9 *
    t11 * t12 * t17 * t22) + f_c_tmp_tmp * t6 * t8 * t9 * t11 * t12 * t17 * t22)
    + de_c_tmp * t27) + de_c_tmp * t29) - ce_c_tmp * t27 * t29 * 4.0) + ne_c_tmp)
    + rc_c_tmp * t7 * t12 * t22 * t23 * 4.0) + w_c_tmp_tmp * t7 * t8 * t12 * t22
    * t23 * 4.0) + fe_c_tmp * t17 * t20 * t23 * t28) + ig_c_tmp * t17 * t20 *
                       t23 * t28)) + ((((((((((((((hf_c_tmp * 4.0 - fc_c_tmp *
    2.0) + cf_c_tmp * t6 * t8 * t9 * t11 * t24 * 4.0) + ge_c_tmp * t17 * t22) -
    ge_c_tmp * t24 * t29 * 4.0) + he_c_tmp * t27 * 4.0) + ie_c_tmp * t17 * t22 *
    t30) + je_c_tmp * t5 * t6 * t9 * t11 * t17 * t22) + ke_c_tmp * t6 * t7 * t8 *
    t11 * t12 * t24 * 8.0) - le_c_tmp * t30 * 4.0) + me_c_tmp * t12 * t17 * t22 *
    t28) + ac_c_tmp * t12 * t17 * t22 * t28) + ne_c_tmp * t30) - wf_c_tmp * t5 *
    t8 * t21 * 8.0) + rb_c_tmp * t5 * t6 * t21 * 8.0)) + (((((((((((((oe_c_tmp *
    t7 * t21 * 4.0 + i_c_tmp_tmp * t5 * t8 * t21 * 4.0) - pe_c_tmp * t5 * t6 *
    t21 * 4.0) - qe_c_tmp * t7 * t8 * t22 * 4.0) + jb_c_tmp * t7 * t22 * 4.0) +
    re_c_tmp * t7 * t8 * t21 * 4.0) + se_c_tmp * t5 * t21 * t23 * 8.0) +
    te_c_tmp * t7 * t22 * t23 * 4.0) - kg_c_tmp * t21 * t23 * 4.0) + lg_c_tmp *
    t21 * t23 * 4.0) + cb_c_tmp_tmp * t5 * t6 * t8 * t21 * t23 * 8.0) - bg_c_tmp
    * t8 * t9 * t21 * t23 * 8.0) + ff_c_tmp * t4 * t6 * t9 * t21 * t23 * 8.0) +
    ve_c_tmp * t7 * t8 * t21 * t23 * 4.0)) + (((((((((((((ic_c_tmp * t7 * t21 *
    t23 * -4.0 + we_c_tmp * t7 * t9 * t21 * t23 * 4.0) + cg_c_tmp * t8 * t9 *
    t21 * t23 * 4.0) - dg_c_tmp * t4 * t6 * t9 * t21 * t23 * 4.0) + lb_c_tmp *
    t7 * t8 * t22 * t23 * 4.0) - df_c_tmp * t7 * t8 * t9 * t22 * t23 * 4.0) +
    xe_c_tmp * t7 * t9 * t22 * t23 * 4.0) + af_c_tmp * t7 * t8 * t9 * t21 * t23 *
    4.0) - bf_c_tmp * t6 * t7 * t8 * t11 * t24 * 8.0) - cf_c_tmp * t5 * t6 * t8 *
    t9 * t11 * t24 * 4.0) + gf_c_tmp * t5 * t9 * t11 * t17 * t22) + u_c_tmp_tmp *
    t5 * t6 * t8 * t9 * t11 * t17 * t22) + cd_c_tmp * t17 * t22) + hf_c_tmp *
    t30 * 4.0)) + ((((fc_c_tmp * t29 * 4.0 - cd_c_tmp * t24 * t27 * 4.0) -
                     if_c_tmp * t6 * t7 * t8 * t11 * t12 * t24 * 4.0) + jf_c_tmp)
                   + jf_c_tmp * t30)) / (t24 * 4.0);
  c_tmp_tmp = L[1] * dq[0];
  f_c_tmp = c_tmp_tmp * dq[3];
  g_c_tmp = L[1] * q[3];
  h_c_tmp = g_c_tmp * t12 * t21;
  i_c_tmp = g_c_tmp * t13 * t21;
  j_c_tmp = L[1] * dq[2] * dq[3];
  k_c_tmp = L[0] * t2;
  b_c_tmp_tmp = k_c_tmp * t8;
  l_c_tmp = b_c_tmp_tmp * t13;
  d_c_tmp_tmp = L[0] * dq[0] * dq[1];
  m_c_tmp = d_c_tmp_tmp * q[1];
  n_c_tmp = f_c_tmp * t3;
  e_c_tmp_tmp = g_c_tmp * t2;
  o_c_tmp = e_c_tmp_tmp * t5 * t6;
  p_c_tmp = e_c_tmp_tmp * t6;
  q_c_tmp = g_c_tmp * t4;
  f_c_tmp_tmp = q_c_tmp * t8;
  h_c_tmp_tmp = f_c_tmp_tmp * t12;
  s_c_tmp = h_c_tmp_tmp * t21;
  t_c_tmp = L[0] * t3 * t4 * t6;
  u_c_tmp = m_c_tmp * t2;
  v_c_tmp = L[1] * dq[1] * dq[3];
  w_c_tmp = c_tmp_tmp * dq[1] * q[3];
  ab_c_tmp = f_c_tmp * q[3];
  bb_c_tmp = w_c_tmp * t5 * t7;
  cb_c_tmp = bb_c_tmp * t21;
  db_c_tmp = w_c_tmp * t7;
  eb_c_tmp = db_c_tmp * t17 * t20;
  db_c_tmp *= t21;
  fb_c_tmp = L[0] * q[1];
  c_tmp_tmp = o_c_tmp * t12;
  gb_c_tmp = c_tmp_tmp * t21;
  q_c_tmp = q_c_tmp * t5 * t8;
  hb_c_tmp = q_c_tmp * t13 * t21;
  jb_c_tmp = p_c_tmp * t12;
  kb_c_tmp = fb_c_tmp * t4 * t6;
  lb_c_tmp = jb_c_tmp * t21 * t28;
  mb_c_tmp = v_c_tmp * q[3];
  nb_c_tmp = cb_c_tmp * t27;
  o_c_tmp *= t13;
  q_c_tmp *= t12;
  ob_c_tmp = q_c_tmp * t21;
  pb_c_tmp = w_c_tmp * t2;
  rb_c_tmp = pb_c_tmp * t4;
  c[2] = L[1] * m[1] * t35 * t36 * (t5 - 1.0) *
    (((((((((((((((((((((((((j_c_tmp * t21 * -2.0 - n_c_tmp * t21 * 2.0) -
    f_c_tmp * t5 * t21 * 2.0) + f_c_tmp * t17 * t20) - h_c_tmp * t31 / 2.0) +
    i_c_tmp * t31 / 2.0) + h_c_tmp * t33 / 2.0) - i_c_tmp * t33 / 2.0) + l_c_tmp
                      * t23 * 4.0) - L[0] * t4 * t6 * t13 * t23 * 4.0) -
                    db_c_tmp * 2.0) - ab_c_tmp * t9 * t21 * 2.0) + j_c_tmp * t5 *
                  t17 * t20) - k_c_tmp * t3 * t8 * t13 * t23 * 4.0) + t_c_tmp *
                t13 * t23 * 4.0) - l_c_tmp * t20 * t23 * 2.0) - u_c_tmp * t4 *
              t23 * 4.0) - m_c_tmp * t6 * t8 * t23 * 4.0) + j_c_tmp * q[3] *
            t9 * t17 * t20) - v_c_tmp * t4 * t6 * t9 * t21 * 2.0) + n_c_tmp * t5
          * t17 * t20) + gb_c_tmp) - o_c_tmp * t21) + (((((((((((((((((((-L[1]
    * q[3] * t4 * t5 * t8 * t12 * t21 + hb_c_tmp) + kb_c_tmp * t13 * t17 * t23)
    + lb_c_tmp) - p_c_tmp * t13 * t21 * t29 * 2.0) - s_c_tmp * t27 * 2.0) -
    s_c_tmp * t28) - t_c_tmp * t12 * t20 * t23 * 2.0) - b_c_tmp_tmp * t12 * t20 *
    t23 * t28 * 2.0) + u_c_tmp * t3 * t4 * t23 * 4.0) + m_c_tmp * t3 * t6 * t8 *
    t23 * 4.0) - mb_c_tmp * t2 * t5 * t8 * t21 * 2.0) + bb_c_tmp * t17 * t20) +
              ab_c_tmp * t3 * t9 * t17 * t20) - nb_c_tmp * 2.0) - cb_c_tmp * t29
            * 2.0) + eb_c_tmp * t27) + eb_c_tmp * t29) - db_c_tmp * t27 * t29 *
         4.0) - f_c_tmp * t2 * t4 * t7 * t9 * t21 * 2.0)) +
      ((((((((((((((((((f_c_tmp * t6 * t7 * t8 * t9 * t21 * -2.0 + d_c_tmp_tmp *
    t2 * t4 * t7 * t20 * t23 * 4.0) + v_c_tmp * t2 * t8 * t9 * t17 * t20) +
                      d_c_tmp_tmp * t6 * t7 * t8 * t20 * t23 * 4.0) + fb_c_tmp *
                     t2 * t3 * t8 * t12 * t17 * t23) - gb_c_tmp * t28) -
                   gb_c_tmp * t29 * 2.0) + ob_c_tmp * t28) - hb_c_tmp * t27 *
                 2.0) + jb_c_tmp * t17 * t20 * t29) + kb_c_tmp * t12 * t17 * t23
               * t28) + f_c_tmp_tmp * t13 * t17 * t20 * t27) - lb_c_tmp * t29 *
             2.0) + mb_c_tmp * t4 * t5 * t6 * t17 * t20) + nb_c_tmp * t29 * 4.0)
          + e_c_tmp_tmp * t3 * t7 * t8 * t9 * t12 * t21) - g_c_tmp * t3 * t4 *
         t6 * t7 * t9 * t12 * t21) + o_c_tmp * t17 * t20 * t29) + q_c_tmp * t17 *
       t20 * t27)) + ((((((((ob_c_tmp * t27 * t28 * -2.0 + h_c_tmp_tmp * t17 *
             t20 * t27 * t28) - rb_c_tmp * t6 * t7 * t8 * t21 * 4.0) + pb_c_tmp *
           t3 * t4 * t9 * t17 * t20) + ab_c_tmp * t2 * t4 * t5 * t7 * t17 * t20)
         + w_c_tmp * t3 * t6 * t8 * t9 * t17 * t20) + ab_c_tmp * t5 * t6 * t7 *
                        t8 * t17 * t20) + c_tmp_tmp * t17 * t20 * t28 * t29) +
                      rb_c_tmp * t5 * t6 * t7 * t8 * t21 * 4.0)) * -0.25;
  f_c_tmp = m[1] * t11;
  g_c_tmp = f_c_tmp * t15 * t21;
  c_tmp_tmp = kf_c_tmp * t11;
  h_c_tmp = c_tmp_tmp * t15 * t21;
  i_c_tmp = m[1] * t9 * t11;
  b_c_tmp_tmp = f_c_tmp * t12;
  j_c_tmp = b_c_tmp_tmp * t21 * t23;
  k_c_tmp = f_c_tmp * t13 * t21 * t23;
  d_c_tmp_tmp = f_c_tmp * t14 * t21;
  f_c_tmp = d_c_tmp_tmp * t23;
  l_c_tmp = d15 * t11;
  m_c_tmp = c_tmp_tmp * t13;
  n_c_tmp = m_c_tmp * t21 * t23;
  e_c_tmp_tmp = i_c_tmp * t12;
  o_c_tmp = e_c_tmp_tmp * t21 * t25;
  f_c_tmp_tmp = i_c_tmp * t13;
  p_c_tmp = f_c_tmp_tmp * t21 * t25;
  q_c_tmp = j_c_tmp * t27;
  s_c_tmp = k_c_tmp * t27;
  t_c_tmp = j_c_tmp * t28;
  u_c_tmp = j_c_tmp * t29;
  v_c_tmp = k_c_tmp * t29;
  w_c_tmp = d15 * t3;
  ab_c_tmp = l_c_tmp * t17 * t20 * t23;
  h_c_tmp_tmp = kf_c_tmp * t9 * t11;
  i_c_tmp_tmp = h_c_tmp_tmp * t12;
  bb_c_tmp = i_c_tmp_tmp * t21 * t25;
  cb_c_tmp = h_c_tmp_tmp * t13 * t21 * t25;
  h_c_tmp_tmp = c_tmp_tmp * t12;
  db_c_tmp = h_c_tmp_tmp * t17 * t20 * t23;
  eb_c_tmp = d7 * t11 * t12 * t17 * t20 * t23;
  h_c_tmp_tmp = h_c_tmp_tmp * t21 * t23;
  fb_c_tmp = h_c_tmp_tmp * t27;
  gb_c_tmp = n_c_tmp * t27;
  hb_c_tmp = o_c_tmp * t27;
  jb_c_tmp = o_c_tmp * t28;
  kb_c_tmp = q_c_tmp * t28;
  lb_c_tmp = t_c_tmp * t29;
  mb_c_tmp = s_c_tmp * t29;
  nb_c_tmp = r_c_tmp * t5;
  j_c_tmp_tmp = p_c_tmp_tmp * t9;
  ob_c_tmp = j_c_tmp_tmp * t13;
  pb_c_tmp = xc_c_tmp * t13;
  k_c_tmp_tmp = r_c_tmp_tmp * t9;
  rb_c_tmp = k_c_tmp_tmp * t13;
  sb_c_tmp = d4 * t2;
  tb_c_tmp = w_c_tmp * t5;
  ub_c_tmp = sb_c_tmp * t8;
  l_c_tmp_tmp = c_tmp_tmp_tmp * t4;
  vb_c_tmp = l_c_tmp_tmp * t6;
  wb_c_tmp = d7 * t5;
  xb_c_tmp = bb_c_tmp * t27;
  yb_c_tmp = bb_c_tmp * t28;
  ac_c_tmp = cb_c_tmp * t27;
  bc_c_tmp = fb_c_tmp * t28;
  cc_c_tmp = b_c_tmp_tmp * t17 * t20 * t23 * t27 * t29;
  dc_c_tmp = kb_c_tmp * t29;
  ib_c_tmp *= t4;
  ec_c_tmp = m_c_tmp_tmp * t8;
  fc_c_tmp = ib_c_tmp * t6;
  gc_c_tmp = c_c_tmp_tmp * t4;
  hc_c_tmp = r_c_tmp * t6 * t8;
  b_c_tmp_tmp_tmp = d4 * t4;
  b_c_tmp_tmp = b_c_tmp_tmp_tmp * t5;
  ic_c_tmp = b_c_tmp_tmp * t6;
  c_c_tmp_tmp = c_tmp_tmp_tmp * t2;
  jc_c_tmp = c_c_tmp_tmp * t5 * t8;
  n_c_tmp_tmp = dq[0] * dq[1] * m[1] * t3 * t4;
  kc_c_tmp = n_c_tmp_tmp * t6;
  lc_c_tmp = sb_c_tmp * t5;
  mc_c_tmp = b_c_tmp_tmp_tmp * t7 * t8;
  o_c_tmp_tmp = sb_c_tmp * t6 * t7;
  nc_c_tmp = o_c_tmp_tmp * t11 * t21 * t23;
  oc_c_tmp = kc_c_tmp * t11;
  pc_c_tmp = mc_c_tmp * t11;
  p_c_tmp_tmp = d15 * t2 * t4;
  qc_c_tmp = p_c_tmp_tmp * t7;
  rc_c_tmp = d15 * t6 * t7 * t8;
  sc_c_tmp = b_c_tmp_tmp_tmp * t6;
  tc_c_tmp = c_c_tmp_tmp * t8;
  uc_c_tmp = d33 * t3 * t4;
  vc_c_tmp = uc_c_tmp * t7;
  c_c_tmp_tmp = xf_c_tmp * t6 * t8;
  wc_c_tmp = c_c_tmp_tmp * t11;
  xc_c_tmp = xf_c_tmp * t7;
  yc_c_tmp = x_c_tmp * t6 * t8;
  bd_c_tmp = d7 * t6 * t7 * t8;
  cd_c_tmp = fg_c_tmp * t7 * t8;
  dd_c_tmp = yc_c_tmp * t11;
  ed_c_tmp = vc_c_tmp * t11 * t12 * t21 * t25;
  fd_c_tmp = dd_c_tmp * t12;
  dd_c_tmp = dd_c_tmp * t13 * t21 * t23;
  gd_c_tmp = bd_c_tmp * t11 * t12 * t21 * t25;
  x_c_tmp *= t7;
  hd_c_tmp = jg_c_tmp * t7 * t8;
  id_c_tmp = xb_c_tmp * t28;
  jd_c_tmp = sd_c_tmp * t4;
  sb_c_tmp *= t3;
  kd_c_tmp = lc_c_tmp * t6 * t7;
  ld_c_tmp = sb_c_tmp * t8;
  lc_c_tmp *= t8;
  md_c_tmp = l_c_tmp_tmp * t5 * t6;
  nd_c_tmp = kd_c_tmp * t11 * t21 * t23;
  b_c_tmp_tmp = b_c_tmp_tmp * t7 * t8;
  od_c_tmp = b_c_tmp_tmp * t11 * t21 * t23;
  pd_c_tmp = o_c_tmp_tmp * t9 * t11;
  mc_c_tmp = mc_c_tmp * t9 * t11 * t21 * t25;
  qd_c_tmp = ld_c_tmp * t11;
  rd_c_tmp = pc_c_tmp * t17 * t20 * t23;
  sd_c_tmp = nc_c_tmp * t29;
  pc_c_tmp = pc_c_tmp * t21 * t23 * t27;
  yc_c_tmp = yc_c_tmp * t9 * t11;
  td_c_tmp = wc_c_tmp * t12 * t21 * t23;
  ud_c_tmp = fd_c_tmp * t17 * t20 * t23;
  fd_c_tmp = fd_c_tmp * t21 * t23 * t28;
  qb_c_tmp *= t4;
  vd_c_tmp = eg_c_tmp * t8;
  wd_c_tmp = qb_c_tmp * t6;
  xd_c_tmp = p_c_tmp_tmp * t5 * t7;
  yd_c_tmp = d15 * t5 * t6 * t7 * t8;
  kd_c_tmp = kd_c_tmp * t9 * t11 * t21 * t25;
  ae_c_tmp = b_c_tmp_tmp * t9 * t11;
  uc_c_tmp = uc_c_tmp * t5 * t7;
  be_c_tmp = c_c_tmp_tmp * t9 * t11;
  ce_c_tmp = wb_c_tmp * t6 * t7 * t8;
  de_c_tmp = be_c_tmp * t12;
  ee_c_tmp = yc_c_tmp * t12;
  c[3] = 1.0 / std::pow(q[3], 5.0) * t35 *
    ((((((((((((((((((((((((((((((((((g_c_tmp * 4.0 - h_c_tmp * 4.0) - j_c_tmp *
    2.0) - k_c_tmp * 2.0) - f_c_tmp) + g_c_tmp * t23) - d8 * t9 * t11 * t15 *
    t21 * 4.0) + h_c_tmp * t23) + o_c_tmp) + p_c_tmp) + i_c_tmp * t14 * t21 *
    t25) - q_c_tmp) + s_c_tmp) - u_c_tmp) + v_c_tmp) - f_c_tmp * t30) -
                       d_c_tmp_tmp * t25 * t34 / 2.0) + nb_c_tmp * t13 * t26 *
                      4.0) - r_c_tmp * t9 * t13 * t25 * 4.0) - lf_c_tmp * t25 *
                    4.0) - e_c_tmp * t7 * t13 * t26 * 4.0) - mf_c_tmp * t25 *
                  4.0) + nf_c_tmp * t25 * 4.0) + (((((((((((((((((((((d14 * m
    [1] * t3 * t11 * t21 * t23 * -2.0 - d14 * m[1] * t5 * t11 * t21 * t23 *
    4.0) - dq[0] * dq[2] * m[1] * t9 * t11 * t21 * t25 * 2.0) + ab_c_tmp) +
    l_c_tmp * t21 * t25 * t34) - wb_c_tmp * t11 * t12 * t21 * t23 * 4.0) - d7 *
    t9 * t11 * t12 * t21 * t25 * 2.0) + eb_c_tmp) + db_c_tmp) + m_c_tmp * t17 *
    t20 * t23) + c_tmp_tmp * t14 * t17 * t20 * t23) - gb_c_tmp * 2.0) - n_c_tmp *
    t29 * 2.0) + hb_c_tmp) + jb_c_tmp) - p_c_tmp * t27) + o_c_tmp * t29) -
    p_c_tmp * t29) + kb_c_tmp) - q_c_tmp * t30) + lb_c_tmp) - mb_c_tmp * 2.0)) +
               (((((((((((((((((((t_c_tmp * t30 * -2.0 + s_c_tmp * t30) -
    u_c_tmp * t30) + v_c_tmp * t30) + of_c_tmp * t25 * 4.0) + pf_c_tmp * t25 *
    4.0) + ob_c_tmp * t26 * 4.0) + qf_c_tmp * t25 * 4.0) + pb_c_tmp * t25 * 4.0)
    + rb_c_tmp * t26 * 4.0) - rf_c_tmp * t20 * t25 * 2.0) + tb_c_tmp * t11 * t21
    * t23 * 4.0) - w_c_tmp * t11 * t21 * t23 * t30 * 2.0) + ab_c_tmp * t30) -
                     xb_c_tmp) - yb_c_tmp * 2.0) + ac_c_tmp) - bb_c_tmp * t29) +
                 cb_c_tmp * t29) + db_c_tmp * t27)) + ((((((((((((((((((eb_c_tmp
    * t30 + db_c_tmp * t28) + db_c_tmp * t29) - bc_c_tmp * 2.0) - fb_c_tmp * t29
    * 4.0) - h_c_tmp_tmp * t28 * t29 * 2.0) + gb_c_tmp * t29 * 4.0) - hb_c_tmp *
    t28) - hb_c_tmp * t29 * 2.0) - jb_c_tmp * t29) + cc_c_tmp) - dc_c_tmp * 2.0)
    + kb_c_tmp * t30) + lb_c_tmp * t30) - mb_c_tmp * t30 * 2.0) + gc_c_tmp * t13
    * t17 * t25) + nb_c_tmp * t7 * t12 * t17 * t26) + hc_c_tmp * t13 * t17 * t25)
    - sf_c_tmp * t25 * 4.0)) + (((((((((((((((y_c_tmp * t9 * t13 * t26 * -4.0 -
    tf_c_tmp * t25 * 4.0) - ad_c_tmp * t9 * t13 * t26 * 4.0) - uf_c_tmp * t20 *
    t25 * 2.0) - pf_c_tmp * t20 * t25 * 2.0) - t19 * t7 * t12 * t20 * t26 * 2.0)
    - ob_c_tmp * t20 * t26 * 2.0) - vf_c_tmp * t20 * t25 * 2.0) - pb_c_tmp * t20
    * t25 * 2.0) - rb_c_tmp * t20 * t26 * 2.0) - qd_c_tmp * t21 * t25 * 2.0) -
    nc_c_tmp * 2.0) - ic_c_tmp * t11 * t21 * t25 * 2.0) - ub_c_tmp * t9 * t11 *
    t21 * t23 * 2.0) - jc_c_tmp * t11 * t21 * t25 * 2.0) - tb_c_tmp * t9 * t11 *
              t21 * t25 * 2.0)) + (((((((((((((((((vb_c_tmp * t9 * t11 * t21 *
    t23 * -2.0 + w_c_tmp * t9 * t11 * t17 * t20 * t25) - ub_c_tmp * t11 * t21 *
    t25 * t30 * 2.0) - vb_c_tmp * t11 * t21 * t25 * t30 * 2.0) + ed_c_tmp) -
    xc_c_tmp * t11 * t12 * t21 * t25 * 2.0) - dd_c_tmp * 2.0) + gd_c_tmp) -
    cd_c_tmp * t11 * t12 * t21 * t25 * 2.0) + wb_c_tmp * t9 * t11 * t12 * t17 *
    t20 * t25) + id_c_tmp) + yb_c_tmp * t29) - ac_c_tmp * t29 * 2.0) +
    f_c_tmp_tmp * t17 * t20 * t25 * t27 * t29) + bc_c_tmp * t29 * 4.0) +
    cc_c_tmp * t30) - dc_c_tmp * t30 * 2.0) - ec_c_tmp * t25 * 4.0)) +
           (((((((((((((((fc_c_tmp * t25 * 4.0 + vd_c_tmp * t25 * 4.0) -
    wd_c_tmp * t25 * 4.0) + m_c_tmp_tmp * t5 * t8 * t25 * 4.0) - ib_c_tmp * t5 *
                       t6 * t25 * 4.0) + ec_c_tmp * t9 * t26 * 4.0) - fc_c_tmp *
                     t9 * t26 * 4.0) + gg_c_tmp * t20 * t25 * 4.0) - hg_c_tmp *
                   t20 * t25 * 4.0) + g_c_tmp_tmp * t7 * t9 * t12 * t17 * t25) +
                 gc_c_tmp * t12 * t17 * t25 * t28) + hc_c_tmp * t12 * t17 * t25 *
                t28) - fe_c_tmp * t20 * t25 * t28 * 2.0) - j_c_tmp_tmp * t12 *
              t20 * t26 * t28 * 2.0) - ig_c_tmp * t20 * t25 * t28 * 2.0) -
            k_c_tmp_tmp * t12 * t20 * t26 * t28 * 2.0)) +
          (((((((((((((((nd_c_tmp * 4.0 - kc_c_tmp * t9 * t11 * t21 * t23 * 2.0)
    - qc_c_tmp * t9 * t11 * t21 * t23 * 2.0) - ic_c_tmp * t9 * t11 * t21 * t23 *
                       2.0) - od_c_tmp * 4.0) - jc_c_tmp * t9 * t11 * t21 * t23 *
                     2.0) - mc_c_tmp * 2.0) + oc_c_tmp * t17 * t20 * t25) -
                  rc_c_tmp * t9 * t11 * t21 * t23 * 2.0) + lc_c_tmp * t11 * t17 *
                 t20 * t25) + sc_c_tmp * t9 * t11 * t17 * t20 * t23) + rd_c_tmp)
              + md_c_tmp * t11 * t17 * t20 * t25) + tc_c_tmp * t9 * t11 * t17 *
             t20 * t23) + sd_c_tmp * 4.0) - nc_c_tmp * t30 * 2.0)) +
         (((((((((((((((oc_c_tmp * t21 * t25 * t30 * -2.0 - pc_c_tmp * 4.0) -
                       qc_c_tmp * t11 * t21 * t25 * t30 * 2.0) - rc_c_tmp * t11 *
                      t21 * t25 * t30 * 2.0) + sc_c_tmp * t11 * t17 * t20 * t25 *
                     t30) + tc_c_tmp * t11 * t17 * t20 * t25 * t30) + uc_c_tmp *
                   t11 * t12 * t21 * t25) - vc_c_tmp * t9 * t11 * t12 * t21 *
                  t23 * 2.0) - td_c_tmp * 4.0) + wc_c_tmp * t13 * t21 * t23 *
                4.0) - xc_c_tmp * t9 * t11 * t12 * t21 * t23 * 2.0) - ee_c_tmp *
              t21 * t25 * 2.0) + ce_c_tmp * t11 * t12 * t21 * t25) - bd_c_tmp *
            t9 * t11 * t12 * t21 * t23 * 2.0) - cd_c_tmp * t9 * t11 * t12 * t21 *
           t23 * 2.0) + ud_c_tmp)) + (((((((((((((((x_c_tmp * t9 * t11 * t12 *
    t17 * t20 * t23 + hd_c_tmp * t9 * t11 * t12 * t17 * t20 * t23) - ed_c_tmp *
    t30 * 2.0) - fd_c_tmp * 2.0) - dd_c_tmp * t30 * 2.0) - gd_c_tmp * t30 * 2.0)
    + x_c_tmp * t11 * t12 * t17 * t20 * t25 * t30) + hd_c_tmp * t11 * t12 * t17 *
    t20 * t25 * t30) + i_c_tmp_tmp * t17 * t20 * t25 * t27 * t29) - id_c_tmp *
    t29 * 2.0) + e_c_tmp_tmp * t17 * t20 * t25 * t27 * t28 * t29) + jd_c_tmp *
             t5 * t12 * t17 * t25) + jd_c_tmp * t9 * t12 * t17 * t26) +
           g_c_tmp_tmp * t5 * t6 * t8 * t12 * t17 * t25) + g_c_tmp_tmp * t6 * t8
          * t9 * t12 * t17 * t26) - sb_c_tmp * t5 * t8 * t9 * t11 * t21 * t23 *
         2.0)) + ((((((((((((((kd_c_tmp * -2.0 + xd_c_tmp * t11 * t17 * t20 *
    t25) + ld_c_tmp * t9 * t11 * t17 * t20 * t23) + lc_c_tmp * t9 * t11 * t17 *
    t20 * t23) + pd_c_tmp * t17 * t20 * t25) + md_c_tmp * t9 * t11 * t17 * t20 *
    t23) + yd_c_tmp * t11 * t17 * t20 * t25) - nd_c_tmp * t29 * 8.0) + od_c_tmp *
                        t27 * 8.0) - pd_c_tmp * t21 * t25 * t29 * 4.0) +
                      mc_c_tmp * t27 * 4.0) + qd_c_tmp * t17 * t20 * t25 * t30)
                    + rd_c_tmp * t30) + sd_c_tmp * t30 * 4.0) - pc_c_tmp * t30 *
                  4.0)) + ((((((((((((((be_c_tmp * t13 * t21 * t25 * -2.0 +
    yc_c_tmp * t13 * t17 * t20 * t25) + td_c_tmp * t28 * 4.0) + ud_c_tmp * t30)
    - fd_c_tmp * t30 * 2.0) - eg_c_tmp * t5 * t8 * t25 * 4.0) + qb_c_tmp * t5 *
    t6 * t25 * 4.0) - vd_c_tmp * t9 * t26 * 4.0) + wd_c_tmp * t9 * t26 * 4.0) -
            kg_c_tmp * t20 * t25 * 4.0) + lg_c_tmp * t20 * t25 * 4.0) - gg_c_tmp
          * t9 * t20 * t26 * 4.0) + hg_c_tmp * t9 * t20 * t26 * 4.0) +
        n_c_tmp_tmp * t5 * t6 * t9 * t11 * t17 * t20 * t23) + xd_c_tmp * t9 *
       t11 * t17 * t20 * t23)) + ((((((((ae_c_tmp * t17 * t20 * t25 + yd_c_tmp *
             t9 * t11 * t17 * t20 * t23) + kd_c_tmp * t29 * 4.0) - ae_c_tmp *
           t21 * t25 * t27 * 4.0) + uc_c_tmp * t9 * t11 * t12 * t17 * t20 * t23)
         + de_c_tmp * t17 * t20 * t25) + ce_c_tmp * t9 * t11 * t12 * t17 * t20 *
        t23) - de_c_tmp * t21 * t25 * t28 * 2.0) + ee_c_tmp * t17 * t20 * t25 *
      t28)) * -0.25;
      //
  Map<VectorXd> dummy(c,4);
  Cdq = dummy;    
}


void Lagrange::Y_update(VectorXd q, VectorXd dq, VectorXd ddq)
{
  double b_Y[44];
  double Y_tmp;
  double Y_tmp_tmp;
  double Y_tmp_tmp_tmp;
  double ab_Y_tmp;
  double b_Y_tmp;
  double b_Y_tmp_tmp;
  double bb_Y_tmp;
  double c_Y_tmp;
  double c_Y_tmp_tmp;
  double cb_Y_tmp;
  double d;
  double d1;
  double d10;
  double d100;
  double d101;
  double d102;
  double d103;
  double d104;
  double d105;
  double d106;
  double d107;
  double d108;
  double d109;
  double d11;
  double d110;
  double d111;
  double d112;
  double d113;
  double d114;
  double d115;
  double d116;
  double d117;
  double d118;
  double d119;
  double d12;
  double d120;
  double d121;
  double d122;
  double d123;
  double d124;
  double d125;
  double d126;
  double d127;
  double d128;
  double d129;
  double d13;
  double d130;
  double d131;
  double d132;
  double d133;
  double d134;
  double d135;
  double d136;
  double d137;
  double d138;
  double d139;
  double d14;
  double d140;
  double d141;
  double d142;
  double d143;
  double d144;
  double d145;
  double d146;
  double d147;
  double d148;
  double d149;
  double d15;
  double d150;
  double d151;
  double d152;
  double d153;
  double d154;
  double d155;
  double d156;
  double d157;
  double d158;
  double d159;
  double d16;
  double d160;
  double d161;
  double d162;
  double d163;
  double d164;
  double d165;
  double d166;
  double d167;
  double d168;
  double d169;
  double d17;
  double d170;
  double d171;
  double d172;
  double d173;
  double d174;
  double d175;
  double d176;
  double d177;
  double d178;
  double d179;
  double d18;
  double d180;
  double d181;
  double d182;
  double d183;
  double d184;
  double d185;
  double d186;
  double d187;
  double d188;
  double d189;
  double d19;
  double d190;
  double d191;
  double d192;
  double d193;
  double d194;
  double d195;
  double d196;
  double d197;
  double d198;
  double d199;
  double d2;
  double d20;
  double d200;
  double d201;
  double d202;
  double d203;
  double d204;
  double d205;
  double d206;
  double d207;
  double d208;
  double d209;
  double d21;
  double d210;
  double d211;
  double d212;
  double d22;
  double d23;
  double d24;
  double d25;
  double d26;
  double d27;
  double d28;
  double d29;
  double d3;
  double d30;
  double d31;
  double d32;
  double d33;
  double d34;
  double d35;
  double d36;
  double d37;
  double d38;
  double d39;
  double d4;
  double d40;
  double d41;
  double d42;
  double d43;
  double d44;
  double d45;
  double d46;
  double d47;
  double d48;
  double d49;
  double d5;
  double d50;
  double d51;
  double d52;
  double d53;
  double d54;
  double d55;
  double d56;
  double d57;
  double d58;
  double d59;
  double d6;
  double d60;
  double d61;
  double d62;
  double d63;
  double d64;
  double d65;
  double d66;
  double d67;
  double d68;
  double d69;
  double d7;
  double d70;
  double d71;
  double d72;
  double d73;
  double d74;
  double d75;
  double d76;
  double d77;
  double d78;
  double d79;
  double d8;
  double d80;
  double d81;
  double d82;
  double d83;
  double d84;
  double d85;
  double d86;
  double d87;
  double d88;
  double d89;
  double d9;
  double d90;
  double d91;
  double d92;
  double d93;
  double d94;
  double d95;
  double d96;
  double d97;
  double d98;
  double d99;
  double d_Y_tmp;
  double d_Y_tmp_tmp;
  double db_Y_tmp;
  double e_Y_tmp;
  double e_Y_tmp_tmp;
  double eb_Y_tmp;
  double f_Y_tmp;
  double f_Y_tmp_tmp;
  double fb_Y_tmp;
  double g_Y_tmp;
  double g_Y_tmp_tmp;
  double gb_Y_tmp;
  double h_Y_tmp;
  double h_Y_tmp_tmp;
  double hb_Y_tmp;
  double i_Y_tmp;
  double i_Y_tmp_tmp;
  double ib_Y_tmp;
  double j_Y_tmp;
  double j_Y_tmp_tmp;
  double jb_Y_tmp;
  double k_Y_tmp;
  double kb_Y_tmp;
  double l_Y_tmp;
  double lb_Y_tmp;
  double m_Y_tmp;
  double mb_Y_tmp;
  double n_Y_tmp;
  double nb_Y_tmp;
  double o_Y_tmp;
  double p_Y_tmp;
  double q_Y_tmp;
  double r_Y_tmp;
  double s_Y_tmp;
  double t10;
  double t11;
  double t12;
  double t13;
  double t15;
  double t18;
  double t19;
  double t2;
  double t20;
  double t21;
  double t22;
  double t23;
  double t24;
  double t25;
  double t26;
  double t27;
  double t28;
  double t29;
  double t3;
  double t30;
  double t31;
  double t32;
  double t33;
  double t34;
  double t35;
  double t36;
  double t38;
  double t39;
  double t4;
  double t40;
  double t5;
  double t6;
  double t7;
  double t8;
  double t9;
  double t_Y_tmp;
  double u_Y_tmp;
  double v_Y_tmp;
  double w_Y_tmp;
  double x_Y_tmp;
  double y_Y_tmp;

  //     This function was generated by the Symbolic Math Toolbox version 8.6.
  //     06-Aug-2021 10:29:40
  t2 = std::cos(q[0]);
  t3 = std::cos(q[1]);
  t4 = std::cos(q[2]);
  t5 = std::cos(q[3]);
  t6 = std::sin(q[0]);
  t7 = std::sin(q[1]);
  t8 = std::sin(q[2]);
  t9 = std::sin(q[3]);
  t10 = dq[0] * dq[0];
  t11 = dq[1] * dq[1];
  t12 = dq[2] * dq[2];
  t13 = dq[3] * dq[3];
  t15 = q[1] * 2.0;
  t18 = q[1] * q[1];
  t19 = std::pow(q[1], 3.0);
  t21 = q[3] * q[3];
  t22 = std::pow(q[1], 5.0);
  t23 = std::pow(q[3], 3.0);
  t32 = 1.0 / q[1];
  t35 = 1.0 / q[3];
  t20 = t18 * t18;
  t24 = t2 * t2;
  t25 = t3 * t3;
  t26 = t4 * t4;
  t27 = t5 * t5;
  t28 = std::sin(q[0] * 2.0);
  t29 = std::sin(t15);
  t30 = std::sin(q[2] * 2.0);
  t31 = std::sin(q[3] * 2.0);
  t33 = 1.0 / t18;
  t34 = 1.0 / t19;
  t36 = 1.0 / t21;
  t38 = 1.0 / t23;
  t40 = std::pow(t35, 5.0);
  t39 = t36 * t36;
  Y_tmp = dq[0] * dq[1];
  b_Y_tmp = Y_tmp * t34;
  c_Y_tmp = ddq[0] * t33;
  Y_tmp_tmp_tmp = ddq[0] * t3;
  d_Y_tmp = Y_tmp_tmp_tmp * t33;
  Y_tmp_tmp = ddq[0] * t25;
  e_Y_tmp = Y_tmp_tmp * t33;
  b_Y_tmp_tmp = Y_tmp * t3;
  f_Y_tmp = b_Y_tmp_tmp * t34;
  c_Y_tmp_tmp = Y_tmp * t7;
  g_Y_tmp = c_Y_tmp_tmp * t33;
  h_Y_tmp = Y_tmp * t25 * t34;
  i_Y_tmp = Y_tmp * t29 * t33;
  b_Y[0] = ((((((c_Y_tmp / 4.0 - b_Y_tmp / 2.0) - d_Y_tmp / 2.0) + e_Y_tmp / 4.0)
              + f_Y_tmp) + g_Y_tmp / 2.0) - h_Y_tmp / 2.0) - i_Y_tmp / 4.0;
  j_Y_tmp = t3 * t11;
  k_Y_tmp = t10 * t18 * t23;
  l_Y_tmp = ddq[1] * q[1];
  m_Y_tmp = t11 * t23;
  n_Y_tmp = l_Y_tmp * t23;
  o_Y_tmp = ddq[1] * t19 * t23;
  p_Y_tmp = j_Y_tmp * t23;
  q_Y_tmp = t11 * t18 * t23;
  r_Y_tmp = q[1] * t7 * t11 * t23;
  j_Y_tmp = j_Y_tmp * t18 * t23;
  s_Y_tmp = t7 * t10 * t19 * t23;
  t_Y_tmp = k_Y_tmp * t25;
  u_Y_tmp = t10 * t19 * t23 * t29;
  v_Y_tmp = 1.0 / t22 * t38;
  w_Y_tmp = ddq[1] * t3;
  x_Y_tmp = q[1] * t3;
  b_Y[1] = v_Y_tmp * (((((((((((((m_Y_tmp * 4.0 - n_Y_tmp * 2.0) - o_Y_tmp) -
    p_Y_tmp * 4.0) - k_Y_tmp) + q_Y_tmp) + w_Y_tmp * t15 * t23) - r_Y_tmp * 4.0)
    + j_Y_tmp) + s_Y_tmp) - t_Y_tmp) - u_Y_tmp / 2.0) + l_Y_tmp * t7 * t15 * t23)
                      + x_Y_tmp * t10 * t15 * t23) * -0.25;
  b_Y[2] = 0.0;
  b_Y[3] = 0.0;
  b_Y[4] = ((((((c_Y_tmp - b_Y_tmp * 2.0) - d_Y_tmp * 2.0) + e_Y_tmp) + f_Y_tmp *
              4.0) + g_Y_tmp * 2.0) - h_Y_tmp * 2.0) - i_Y_tmp;
  b_Y_tmp = t3 * t10;
  c_Y_tmp = l_Y_tmp * t3;
  d_Y_tmp = ddq[1] * t7;
  b_Y[5] = v_Y_tmp * (((((((((((((m_Y_tmp * 16.0 - n_Y_tmp * 8.0) - o_Y_tmp *
    4.0) - p_Y_tmp * 16.0) - k_Y_tmp * 4.0) + q_Y_tmp * 4.0) + c_Y_tmp * t23 *
    8.0) + d_Y_tmp * t18 * t23 * 8.0) - r_Y_tmp * 16.0) + b_Y_tmp * t18 * t23 *
    8.0) + j_Y_tmp * 4.0) + s_Y_tmp * 4.0) - t_Y_tmp * 4.0) - u_Y_tmp * 2.0) *
    -0.25;
  b_Y[6] = 0.0;
  b_Y[7] = 0.0;
  d = dq[0] * dq[3];
  d1 = dq[2] * dq[3];
  d2 = dq[0] * dq[2];
  d3 = ddq[2] * t3;
  d4 = ddq[0] * t5;
  d5 = ddq[0] * t24;
  d6 = ddq[0] * t26;
  d7 = d * t3;
  d8 = d1 * t3;
  d9 = d * t5;
  d10 = d * t9;
  d11 = d * t24;
  d12 = d * t26;
  d13 = d4 * t24;
  d14 = d4 * t25;
  d15 = d5 * t25;
  d16 = d5 * t26;
  d17 = Y_tmp_tmp * t26;
  d18 = ddq[2] * t5;
  d19 = d7 * t5;
  d20 = d1 * t5;
  d21 = Y_tmp_tmp_tmp * t5;
  d22 = d3 * t5;
  d23 = d8 * t5;
  d24 = d9 * t24;
  d25 = dq[1] * dq[2];
  d26 = d25 * t7 * t24;
  d27 = d * t25;
  d28 = ddq[1] * t2;
  d29 = ddq[1] * t4;
  d30 = t2 * t5;
  d31 = d30 * t6;
  d32 = t4 * t5;
  d33 = d32 * t8;
  d34 = t2 * t6;
  d35 = d34 * t10;
  d34 *= t11;
  d36 = t4 * t8;
  d37 = d36 * t10;
  d36 *= t11;
  d38 = ddq[0] * t2;
  d39 = d38 * t4;
  d40 = ddq[3] * t2;
  d41 = ddq[3] * t4;
  d42 = d28 * t6 * t7;
  d43 = d29 * t7 * t8;
  d44 = d13 * t25;
  d45 = d15 * t26;
  d46 = t2 * t3;
  d47 = t3 * t4;
  d48 = t2 * t7 * t8;
  d49 = t4 * t6;
  d50 = d49 * t7;
  d51 = d46 * t6 * t11;
  d52 = d31 * t10;
  d31 *= t11;
  d53 = d47 * t8 * t11;
  d54 = d33 * t10;
  d33 *= t11;
  d55 = d35 * t25;
  d56 = d35 * t26;
  d57 = d37 * t24;
  d58 = d34 * t26;
  d59 = d37 * t25;
  d60 = d36 * t24;
  d61 = d10 * t25;
  d62 = d11 * t25;
  d63 = d11 * t26;
  d64 = d27 * t26;
  d65 = d39 * t6 * t8;
  d66 = d28 * t8;
  d67 = d29 * t6;
  d68 = d41 * t6;
  d69 = d28 * t5;
  d70 = d69 * t6 * t7;
  d71 = d28 * t3;
  d72 = d71 * t8;
  d73 = w_Y_tmp * t4;
  d74 = d73 * t6;
  d75 = ddq[2] * t2;
  d76 = d75 * t4;
  d77 = d69 * t8;
  d29 *= t5;
  d78 = d48 * t9;
  d79 = d50 * t9;
  d80 = d2 * t2;
  d81 = d80 * t5;
  d82 = d81 * t6;
  d83 = d42 * t26;
  d84 = d43 * t24;
  d85 = d30 * t7 * t8;
  d32 *= t6;
  d86 = d32 * t7;
  d87 = d46 * t5;
  d88 = d87 * t6 * t11;
  d89 = d47 * t5;
  d90 = d89 * t8 * t11;
  d91 = d52 * t25;
  d92 = d51 * t26;
  d93 = d54 * t24;
  d94 = d53 * t24;
  d95 = d55 * t26;
  d96 = d57 * t25;
  d97 = ddq[0] * t6;
  d98 = ddq[2] * t6;
  d99 = Y_tmp * t2;
  d100 = d99 * t4;
  d101 = d100 * t9;
  d102 = b_Y_tmp_tmp * t5;
  d103 = d102 * t7;
  d104 = d * t2;
  d105 = d104 * t4;
  d106 = d105 * t7;
  d107 = d1 * t2;
  d108 = d107 * t4;
  d109 = d108 * t7;
  d110 = d2 * t4;
  d111 = d110 * t5;
  d112 = dq[1] * dq[3];
  d113 = d112 * t2;
  d114 = d113 * t5;
  d115 = d112 * t4;
  d116 = d80 * t6;
  d117 = b_Y_tmp_tmp * t7;
  d118 = d110 * t8;
  d119 = d25 * t5 * t7;
  d120 = d113 * t8;
  d121 = d115 * t6;
  d122 = d9 * t9;
  d123 = d10 * t24;
  d124 = d115 * t7 * t8;
  d125 = d * t6;
  d126 = d125 * t7 * t8;
  d127 = d1 * t6;
  d128 = d127 * t7 * t8;
  d129 = d117 * t24;
  d130 = d116 * t25;
  d131 = d116 * t26;
  d132 = d118 * t24;
  d133 = d117 * t26;
  d134 = d119 * t24;
  d135 = d118 * t25;
  d136 = d122 * t24;
  d137 = d122 * t25;
  d138 = d24 * t25;
  d139 = d123 * t25;
  d140 = d26 * t26;
  d141 = d62 * t26;
  d142 = d99 * t3;
  d143 = d142 * t4;
  d144 = d104 * t3;
  d145 = d144 * t4;
  d146 = d145 * t7;
  d147 = d105 * t5;
  d148 = d147 * t7;
  d149 = d113 * t3;
  d150 = d149 * t5 * t8;
  d151 = d120 * t9;
  d152 = d121 * t9;
  d153 = d100 * t5;
  d154 = d112 * t3;
  d155 = d154 * t4;
  d156 = d155 * t5 * t6;
  d157 = d105 * t6 * t8;
  d158 = d114 * t6 * t7;
  d159 = b_Y_tmp_tmp * t6;
  d160 = d159 * t8;
  d161 = d7 * t6;
  d110 *= t6;
  d162 = d115 * t5;
  d163 = dq[0] * dq[2] * t4 * t5 * t8;
  d164 = d113 * t6 * t7;
  d165 = d162 * t7 * t8;
  d166 = d9 * t6;
  d167 = d124 * t9;
  d168 = d103 * t24;
  d169 = d82 * t25;
  d170 = d163 * t24;
  d171 = d164 * t26;
  d172 = d124 * t24;
  d173 = d129 * t26;
  d174 = d130 * t26;
  d175 = d132 * t25;
  d176 = d136 * t25;
  d162 = d162 * t6 * t9;
  d177 = dq[1] * dq[3] * t2 * t5 * t8 * t9;
  d178 = d126 * t9;
  d179 = Y_tmp * t6;
  d180 = d179 * t8;
  d181 = d38 * t3;
  d182 = d181 * t4;
  d183 = d39 * t5;
  d184 = d85 * t9;
  d185 = d86 * t9;
  d186 = d65 * t25;
  d187 = d145 * t5;
  d188 = d187 * t7;
  d189 = d25 * t2;
  d190 = d189 * t4;
  d191 = d80 * t3;
  d192 = d2 * t3;
  t29 = d192 * t4;
  d_Y_tmp_tmp = d147 * t6 * t8;
  d193 = d19 * t6;
  e_Y_tmp_tmp = d193 * t7 * t8;
  f_Y_tmp_tmp = d157 * t9;
  y_Y_tmp = d190 * t6 * t7 * t8;
  d194 = d143 * t5;
  ab_Y_tmp = d148 * t9;
  d195 = d18 * t6;
  d196 = d47 * t6;
  d197 = t29 * t6;
  d198 = d111 * t6;
  d199 = d4 * t6;
  d102 *= t6;
  d200 = d102 * t8;
  d201 = d158 * t9;
  d202 = d108 * t5;
  d203 = d20 * t6;
  e_Y_tmp = d143 * t6 * t7 * t8;
  f_Y_tmp = d_Y_tmp_tmp * t9;
  g_Y_tmp = d182 * t5;
  h_Y_tmp = d21 * t6;
  g_Y_tmp_tmp = d89 * t6;
  i_Y_tmp = d191 * t5;
  j_Y_tmp = t29 * t5 * t6;
  k_Y_tmp = dq[1] * dq[2] * t7 * t26;
  m_Y_tmp = Y_tmp * t5;
  n_Y_tmp = d29 * t7 * t8;
  o_Y_tmp = d161 * t7 * t8;
  p_Y_tmp = d166 * t7 * t8;
  q_Y_tmp = d164 * t9;
  r_Y_tmp = d106 * t9;
  s_Y_tmp = Y_tmp_tmp_tmp * t6;
  t_Y_tmp = d73 * t5 * t6;
  b_Y[8] =
    (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((
    (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((
    (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((
    (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((
    ((((((((((((((((((((((((((((((((ddq[0] * t36 / 2.0 - ddq[2] * t36 / 4.0) - d
    * t38) + d1 * t38 / 2.0) - Y_tmp_tmp_tmp * t36 / 2.0) - d4 * t36 / 2.0) + d3
    * t36 / 4.0) + d18 * t36 / 2.0) + d5 * t36 / 4.0) + d6 * t36 / 4.0) - ddq[2]
    * t27 * t36 / 4.0) - t10 * t28 * t36 / 8.0) - t11 * t28 * t36 / 8.0) + t10 *
    t30 * t36 / 8.0) + t11 * t30 * t36 / 8.0) + c_Y_tmp_tmp * t36 / 2.0) + d7 *
    t38) + d9 * t38) - d8 * t38 / 2.0) + d10 * t36 / 2.0) - d20 * t38) - d1 * t9
    * t36 / 2.0) - d11 * t38 / 2.0) + d2 * t28 * t36 / 4.0) - d12 * t38 / 2.0) -
    d2 * t30 * t36 / 4.0) + d1 * t27 * t38 / 2.0) + d1 * t31 * t36 / 4.0) + d21 *
    t36) - d22 * t36 / 2.0) - d13 * t36 / 2.0) - Y_tmp_tmp_tmp * t27 * t36 / 2.0)
    - d14 * t36 / 2.0) - d4 * t26 * t36 / 2.0) + d3 * t27 * t36 / 4.0) - d15 *
    t36 / 4.0) - d16 * t36 / 2.0) + d5 * t27 * t36 / 4.0) - d17 * t36 / 4.0) +
    Y_tmp_tmp * t27 * t36 / 2.0) + d6 * t27 * t36 / 4.0) - m_Y_tmp * t7 * t36) -
    d19 * t38 * 2.0) - d7 * t9 * t36) + d23 * t38) + d8 * t9 * t36 / 2.0) + d24 *
    t38) - d26 * t36 / 2.0) + c_Y_tmp_tmp * t27 * t36 / 2.0) + d7 * t27 * t38) +
    d9 * t25 * t38) + d9 * t26 * t38) + d * t9 * t24 * t36 / 2.0) - k_Y_tmp *
    t36 / 2.0) + d61 * t36 / 2.0) - d8 * t27 * t38 / 2.0) + d10 * t26 * t36 /
    2.0) + d62 * t38 / 2.0) + d63 * t38) - d11 * t27 * t38 / 2.0) + d64 * t38 /
    2.0) - d27 * t27 * t38) - d12 * t27 * t38 / 2.0) + d42 * t36 / 4.0) + d66 *
    t9 * t36 / 4.0) - d67 * t9 * t36 / 4.0) - d43 * t36 / 4.0) + d40 * t7 * t8 *
    t36 / 4.0) - d68 * t7 * t36 / 4.0) + d44 * t36 / 2.0) + d13 * t26 * t36) +
    d14 * t26 * t36 / 2.0) + d45 * t36 / 2.0) - d15 * t27 * t36 / 4.0) - d16 *
    t27 * t36 / 2.0) - d17 * t27 * t36 / 4.0) + d51 * t36 / 4.0) + d52 * t36 /
    2.0) + d31 * t36 / 2.0) - d53 * t36 / 4.0) - d54 * t36 / 2.0) - d33 * t36 /
    2.0) - d48 * t13 * t38 / 2.0) + d50 * t13 * t38 / 2.0) + d55 * t36 / 4.0) +
    d56 * t36 / 2.0) - d35 * t27 * t36 / 4.0) + d58 * t36 / 2.0) - d34 * t27 *
    t36 / 4.0) - d57 * t36 / 2.0) - d59 * t36 / 4.0) - d60 * t36 / 2.0) + d37 *
    t27 * t36 / 4.0) + d36 * t27 * t36 / 4.0) - d65 * t36 / 2.0) - d70 * t36 /
    2.0) - d39 * t7 * t9 * t36 / 2.0) - d72 * t9 * t36 / 4.0) + d74 * t9 * t36 /
    4.0) + d76 * t7 * t9 * t36 / 4.0) - d77 * t9 * t36 / 4.0) + d29 * t6 * t9 *
    t36 / 4.0) + n_Y_tmp * t36 / 2.0) - d40 * t5 * t7 * t8 * t36 / 4.0) + d41 *
    t5 * t6 * t7 * t36 / 4.0) - d97 * t7 * t8 * t9 * t36 / 2.0) + d98 * t7 * t8 *
    t9 * t36 / 4.0) - d83 * t36 / 2.0) + d42 * t27 * t36 / 4.0) + d84 * t36 /
    2.0) - d43 * t27 * t36 / 4.0) - d44 * t26 * t36) + d45 * t27 * t36 / 2.0) -
    d88 * t36 / 2.0) + d90 * t36 / 2.0) - d78 * t10 * t36 / 4.0) + d79 * t10 *
    t36 / 4.0) + d85 * t13 * t38 / 2.0) + d78 * t11 * t36 / 4.0) - d86 * t13 *
    t38 / 2.0) - d79 * t11 * t36 / 4.0) - d78 * t12 * t36 / 4.0) + d79 * t12 *
    t36 / 4.0) + d78 * t13 * t36 / 4.0) - d79 * t13 * t36 / 4.0) - d92 * t36 /
    2.0) - d91 * t36 / 2.0) + d51 * t27 * t36 / 4.0) - d52 * t26 * t36) - d31 *
    t26 * t36) + d94 * t36 / 2.0) + d93 * t36) + d54 * t25 * t36 / 2.0) + d33 *
    t24 * t36) - d53 * t27 * t36 / 4.0) - d95 * t36 / 2.0) + d55 * t27 * t36 /
    4.0) + d56 * t27 * t36 / 2.0) + d96 * t36 / 2.0) + d58 * t27 * t36 / 2.0) -
    d57 * t27 * t36 / 2.0) - d59 * t27 * t36 / 4.0) - d60 * t27 * t36 / 2.0) -
    d82 * t36) - d101 * t36 / 2.0) + d103 * t36) - d106 * t36 / 2.0) + d109 *
    t36 / 2.0) + d111 * t8 * t36) + d114 * t8 * t36 / 2.0) - d115 * t5 * t6 *
    t36 / 2.0) + d19 * t9 * t36) - d112 * t2 * t6 * t7 * t38 / 2.0) - d1 * t3 *
    t5 * t9 * t36 / 2.0) - dq[0] * dq[1] * t6 * t8 * t9 * t36 / 2.0) - d126 *
    t36 / 2.0) - d151 * t38 / 2.0) + d152 * t38 / 2.0) + d124 * t38 / 2.0) +
    d128 * t36 / 2.0) + d129 * t36 / 2.0) - d130 * t36 / 2.0) - d131 * t36) +
    d133 * t36 / 2.0) + d116 * t27 * t36 / 2.0) - d117 * t27 * t36) + d132 * t36)
    + d135 * t36 / 2.0) + d134 * t36) - d118 * t27 * t36 / 2.0) - d136 * t36 /
    2.0) + d119 * t26 * t36) - d120 * t27 * t36 / 2.0) + d121 * t27 * t36 / 2.0)
    - d137 * t36) - d122 * t26 * t36 / 2.0) - d138 * t38) - d24 * t26 * t38 *
    2.0) + d140 * t36) - dq[0] * dq[3] * t5 * t25 * t26 * t38) - d139 * t36 /
    2.0) - d26 * t27 * t36 / 2.0) - d123 * t26 * t36) - d61 * t26 * t36 / 2.0) -
    k_Y_tmp * t27 * t36 / 2.0) - d141 * t38) + d62 * t27 * t38 / 2.0) + d63 *
    t27 * t38) + d64 * t27 * t38 / 2.0) - d143 * t9 * t36 / 2.0) + d146 * t36 /
    2.0) + d153 * t9 * t36 / 2.0) - d148 * t36 / 2.0) - d150 * t36 / 2.0) + d156
    * t36 / 2.0) + d157 * t38) + d158 * t38) - d160 * t9 * t36 / 2.0) + r_Y_tmp *
    t38) + o_Y_tmp * t36 / 2.0) + d80 * t7 * t8 * t9 * t36 / 2.0) - d110 * t7 *
    t9 * t36 / 2.0) + d149 * t8 * t9 * t38 / 2.0) + q_Y_tmp * t36 / 2.0) - d112 *
    t3 * t4 * t6 * t9 * t38 / 2.0) + m_Y_tmp * t6 * t8 * t9 * t36 / 2.0) -
    p_Y_tmp * t36 / 2.0) - d109 * t9 * t38 / 2.0) + d177 * t38 / 2.0) - d162 *
    t38 / 2.0) - d165 * t38) - d167 * t36 / 2.0) + d178 * t38) - d128 * t9 * t38
    / 2.0) - d168 * t36) + d169 * t36) + d101 * t25 * t36) + d82 * t26 * t36 *
    2.0) - d103 * t26 * t36) - d170 * t36 * 2.0) + d106 * t27 * t36) - d163 *
    t25 * t36) + dq[1] * dq[3] * t2 * t3 * t8 * t27 * t36 / 2.0) - d155 * t6 *
    t27 * t36 / 2.0) - d109 * t27 * t36 / 2.0) + d171 * t38) - d164 * t27 * t38 /
    2.0) + d180 * t9 * t25 * t36) - d172 * t38) + d126 * t27 * t36) + d124 * t27
    * t38 / 2.0) - d128 * t27 * t36 / 2.0) - d173 * t36) + d174 * t36) + d129 *
    t27 * t36 / 2.0) - d130 * t27 * t36 / 2.0) - d131 * t27 * t36) - d175 * t36)
    + d133 * t27 * t36 / 2.0) + d132 * t27 * t36) - d134 * t26 * t36 * 2.0) +
    d135 * t27 * t36 / 2.0) + d176 * t36 / 2.0) + d136 * t26 * t36) + d137 * t26
    * t36 / 2.0) + d138 * t26 * t38 * 2.0) + d139 * t26 * t36) + d140 * t27 *
    t36) - d141 * t27 * t38) + d182 * t7 * t9 * t36 / 2.0) + d183 * t6 * t8 *
    t36) + d183 * t7 * t9 * t36 / 2.0) + d71 * t5 * t8 * t9 * t36 / 4.0) -
    t_Y_tmp * t9 * t36 / 4.0) - d76 * t5 * t7 * t9 * t36 / 4.0) + s_Y_tmp * t7 *
    t8 * t9 * t36 / 2.0) + d199 * t7 * t8 * t9 * t36 / 2.0) - d195 * t7 * t8 *
    t9 * t36 / 4.0) + d186 * t36 / 2.0) - d65 * t27 * t36 / 2.0) + d70 * t26 *
    t36) - n_Y_tmp * t24 * t36) - d83 * t27 * t36 / 2.0) + d84 * t27 * t36 / 2.0)
    + d46 * t7 * t8 * t9 * t10 * t36 / 4.0) - d196 * t7 * t9 * t10 * t36 / 4.0)
    + d184 * t10 * t36 / 4.0) - d185 * t10 * t36 / 4.0) - d184 * t11 * t36 / 4.0)
    + d185 * t11 * t36 / 4.0) + d184 * t12 * t36 / 4.0) - d185 * t12 * t36 / 4.0)
    + d88 * t26 * t36) - d90 * t24 * t36) + d91 * t26 * t36) - d92 * t27 * t36 /
    2.0) - d93 * t25 * t36) + d94 * t27 * t36 / 2.0) - d95 * t27 * t36 / 2.0) +
    d96 * t27 * t36 / 2.0) + d194 * t9 * t36 / 2.0) + d188 * t36 / 2.0) - d146 *
    t9 * t38) - d_Y_tmp_tmp * t38 * 2.0) + y_Y_tmp * t36) - d191 * t7 * t8 * t9 *
    t36 / 2.0) + d197 * t7 * t9 * t36 / 2.0) + d200 * t9 * t36 / 2.0) - ab_Y_tmp
    * t38) - f_Y_tmp_tmp * t36) + e_Y_tmp_tmp * t36 / 2.0) - d81 * t7 * t8 * t9 *
    t36 / 2.0) + d198 * t7 * t9 * t36 / 2.0) - d150 * t9 * t38 / 2.0) - d201 *
    t36 / 2.0) + d156 * t9 * t38 / 2.0) + d202 * t7 * t9 * t38 / 2.0) + d165 *
    t9 * t36 / 2.0) - o_Y_tmp * t9 * t38) - p_Y_tmp * t9 * t38) + d203 * t7 * t8
    * t9 * t38 / 2.0) - d100 * t5 * t9 * t25 * t36) - d104 * t3 * t4 * t7 * t27 *
    t36) - d104 * t4 * t6 * t8 * t25 * t38) + d * t2 * t4 * t6 * t8 * t27 * t38)
    - d113 * t5 * t6 * t7 * t26 * t38 * 2.0) - dq[0] * dq[1] * t5 * t6 * t8 *
    t9 * t25 * t36) - dq[0] * dq[3] * t3 * t6 * t7 * t8 * t27 * t36) - q_Y_tmp
    * t26 * t36) + d165 * t24 * t38 * 2.0) + d167 * t24 * t36) + d168 * t26 *
    t36 * 2.0) - d169 * t26 * t36 * 2.0) + d170 * t25 * t36 * 2.0) + d171 * t27 *
    t38) - d172 * t27 * t38) - d173 * t27 * t36) + d174 * t27 * t36) - d175 *
    t27 * t36) - d176 * t26 * t36) - g_Y_tmp * t7 * t9 * t36 / 2.0) - h_Y_tmp *
    t7 * t8 * t9 * t36 / 2.0) - ddq[0] * t2 * t4 * t5 * t6 * t8 * t25 * t36) +
                      d186 * t27 * t36 / 2.0) - d87 * t7 * t8 * t9 * t10 * t36 /
                     4.0) + g_Y_tmp_tmp * t7 * t9 * t10 * t36 / 4.0) - e_Y_tmp *
                   t36) + d188 * t9 * t38) - d190 * t5 * t6 * t7 * t8 * t36 *
                 2.0) + i_Y_tmp * t7 * t8 * t9 * t36 / 2.0) - j_Y_tmp * t7 * t9 *
               t36 / 2.0) + f_Y_tmp * t36) + e_Y_tmp_tmp * t9 * t38) +
            d_Y_tmp_tmp * t25 * t38 * 2.0) + f_Y_tmp_tmp * t25 * t36) + y_Y_tmp *
          t27 * t36) + d201 * t26 * t36) - dq[1] * dq[3] * t4 * t5 * t7 * t8 *
        t9 * t24 * t36) - d157 * t25 * t27 * t38) + d194 * t6 * t7 * t8 * t36 *
      2.0) - e_Y_tmp * t27 * t36) - f_Y_tmp * t25 * t36;
  d4 = ddq[1] * q[3];
  d5 = d4 * t22;
  d6 = d112 * t5;
  d10 = d5 * t24;
  d5 *= t26;
  d11 = q[3] * t7 * t10;
  d12 = d11 * t22;
  d13 = d4 * t5;
  d14 = d13 * t22;
  d15 = d4 * t15 * t20;
  d16 = t2 * t4;
  d17 = d6 * t22;
  d18 = d112 * t22;
  d21 = d16 * t13;
  d24 = t6 * t8;
  d26 = d24 * t13;
  d27 = Y_tmp * q[3];
  d29 = d27 * t22;
  d31 = d25 * q[3];
  d33 = ddq[3] * q[3];
  d34 = d33 * t2;
  d35 = d34 * t4;
  d36 = ddq[0] * q[3];
  d37 = d36 * t2;
  d41 = d36 * t4;
  d42 = ddq[2] * q[3];
  d13 = d13 * t15 * t20;
  d43 = q[3] * t2;
  d44 = d43 * t4;
  d45 = d44 * t9;
  d51 = q[3] * t6 * t8 * t9;
  d52 = q[3] * t3;
  d53 = d52 * t7;
  d54 = d53 * t10 * t22;
  d55 = q[3] * t5;
  d56 = d55 * t7;
  d57 = d56 * t10 * t22;
  d11 = d11 * t15 * t20;
  d58 = d2 * q[3];
  d59 = d58 * t7;
  d60 = d59 * t22;
  d61 = d112 * q[3];
  d62 = d61 * t9;
  d63 = d112 * t15;
  d64 = d * q[3];
  d65 = d1 * q[3];
  d70 = d58 * t5;
  d73 = d70 * t7 * t22;
  d59 = d59 * t15 * t20;
  d78 = d60 * t24;
  d60 *= t26;
  d79 = d42 * t2;
  d82 = d42 * t4;
  d83 = d37 * t6;
  d84 = d83 * t7 * t22;
  d88 = d41 * t7 * t8;
  d89 = d88 * t22;
  d90 = d11 * t24;
  d11 *= t26;
  d91 = d12 * t24 * t26;
  d92 = d64 * t4;
  d93 = d92 * t6;
  d94 = d65 * t2;
  d95 = d94 * t8;
  d96 = d52 * t5;
  d101 = d96 * t7 * t10;
  d103 = d101 * t22;
  d106 = d16 * t5;
  d109 = t5 * t6;
  d111 = d33 * t6 * t8;
  d114 = d106 * t13;
  d115 = d109 * t8;
  d116 = d115 * t13;
  d118 = d45 * t13;
  d119 = d51 * t13;
  d120 = d35 * t5;
  d121 = d33 * t5 * t6 * t8;
  d122 = d114 * t15;
  d123 = d116 * t15;
  d124 = d62 * t22;
  d126 = d124 * t24;
  d128 = d104 * t6 * t7 * t22;
  d129 = d104 * t8 * t9;
  d130 = d1 * t4;
  d131 = d130 * t6 * t9;
  d132 = d27 * t2;
  d133 = d31 * t2;
  d134 = d133 * t6 * t22;
  d135 = d27 * t4;
  d136 = d135 * t8 * t22;
  d137 = dq[0] * dq[3] * q[3] * t2;
  d138 = d137 * t8;
  d139 = d65 * t4;
  d140 = d139 * t6;
  d141 = d * t4;
  d146 = d141 * t5;
  d148 = d141 * t7 * t8;
  d149 = d37 * t5;
  d150 = d132 * t6;
  d155 = dq[1] * dq[2] * q[3] * t4;
  d156 = d155 * t8;
  d157 = d150 * t22 * t26;
  d158 = d136 * t24;
  d163 = d73 * t24;
  d164 = d134 * t26;
  d165 = d156 * t22 * t24;
  d167 = d78 * t26;
  d113 *= t4;
  d168 = d104 * t5;
  d169 = d168 * t6 * t7 * t22;
  d170 = d146 * t7 * t8 * t22;
  d171 = d113 * t6 * t8 * t22;
  d172 = d148 * t15 * t20;
  d173 = d128 * t26;
  d148 = d148 * t22 * t24;
  d174 = d37 * t3;
  d175 = d36 * t3;
  d176 = d175 * t4;
  d184 = d41 * t5;
  d185 = d7 * t4;
  d141 *= t6;
  d186 = d141 * t9;
  d188 = d107 * t8 * t9;
  d190 = d185 * t6 * t9;
  t29 = d44 * t5;
  d_Y_tmp_tmp = t29 * t9;
  e_Y_tmp_tmp = d58 * t2;
  f_Y_tmp_tmp = e_Y_tmp_tmp * t4;
  y_Y_tmp = d64 * t3;
  d201 = y_Y_tmp * t4;
  d204 = d201 * t6;
  d205 = d61 * t5;
  bb_Y_tmp = d205 * t9;
  cb_Y_tmp = bb_Y_tmp * t15 * t20;
  d206 = d92 * t7 * t8 * t9 * t22;
  d207 = f_Y_tmp_tmp * t5;
  d208 = d58 * t3;
  d209 = d144 * t8 * t9;
  d210 = d4 * t2;
  d211 = d210 * t4;
  d212 = d43 * t3;
  e_Y_tmp = d101 * t15 * t20;
  f_Y_tmp = d137 * t6 * t7 * t9;
  k_Y_tmp = q[3] * t3 * t7 * t10 * t15 * t20 * t24 * t26;
  Y_tmp_tmp = d61 * t2;
  m_Y_tmp = Y_tmp_tmp * t4;
  n_Y_tmp = f_Y_tmp_tmp * t6 * t7 * t8 * t22;
  h_Y_tmp_tmp = d137 * t5;
  o_Y_tmp = h_Y_tmp_tmp * t6 * t7 * t9 * t22;
  i_Y_tmp_tmp = d92 * t5;
  p_Y_tmp = i_Y_tmp_tmp * t7 * t8 * t9;
  q_Y_tmp = q[3] * t2 * t3 * t4;
  u_Y_tmp = q_Y_tmp * t6 * t7 * t8 * t10 * t15 * t20;
  j_Y_tmp_tmp = d137 * t3;
  db_Y_tmp = j_Y_tmp_tmp * t8;
  eb_Y_tmp = m_Y_tmp * t5;
  q_Y_tmp *= t9;
  fb_Y_tmp = d52 * t6 * t8 * t9;
  gb_Y_tmp = d31 * t22;
  hb_Y_tmp = d17 * t24;
  ib_Y_tmp = d63 * t20 * t26;
  jb_Y_tmp = d15 * t24 * t26;
  kb_Y_tmp = d133 * t5 * t6 * t22;
  lb_Y_tmp = d149 * t6 * t7 * t22;
  mb_Y_tmp = d184 * t7 * t8;
  nb_Y_tmp = d55 * t6 * t8 * t9;
  b_Y[9] = v_Y_tmp *
    (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((
    (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((
    ((((((((((((((((((((((((((((((((((((((((((((((((d18 * -4.0 + d17 * 4.0) -
    d14 * 2.0) + d15) - d10) - d5) - d12 * 2.0) - d21 * t22 * 2.0) - d26 * t22 *
    2.0) + d29 * t28) - d29 * t30) - gb_Y_tmp * t28) + gb_Y_tmp * t30) -
    hb_Y_tmp * 4.0) - d17 * t26 * 4.0) + dq[1] * dq[3] * t15 * t20 * t24) +
    ib_Y_tmp) - dq[1] * dq[3] * t22 * t24 * t26 * 4.0) + d35 * t22) + d111 *
    t22) - d10 * t27) - d5 * t27) + d57 * 4.0) - d12 * t27 * 2.0) - d120 * t22)
    + d84) + d37 * t8 * t9 * t22) - d41 * t6 * t9 * t22) - d89) - d79 * t8 * t9 *
    t22) + d82 * t6 * t9 * t22) - d121 * t22) + d13 * t24) + d13 * t26) - d14 *
    t24 * t26 * 4.0) + jb_Y_tmp) - d103 * 2.0) - d45 * t12 * t22) + d118 * t22)
    - d51 * t12 * t22) + d119 * t22) - d54 * t24) - d54 * t26) - d57 * t24 * 4.0)
    - d57 * t26 * 4.0) + d90) + d11) - d91 * 4.0) + d122 * t20) + d123 * t20) -
    d93 * t22 * 2.0) - d73 * 4.0) - d95 * t22 * 2.0) + d59) + d62 * t15 * t20) -
    d78 * 2.0) - d60 * 2.0) - d126 * 2.0) - d124 * t26 * 2.0) - d128 * 2.0) -
    d129 * t22 * 2.0) - d131 * t22 * 2.0) + hb_Y_tmp * t26 * 8.0) + d63 * t20 *
    t24 * t27) + ib_Y_tmp * t27) - d18 * t24 * t26 * t27 * 4.0) - d132 * t5 * t6
    * t22 * 4.0) - d64 * t2 * t3 * t8 * t22 * 2.0) + kb_Y_tmp * 4.0) + Y_tmp *
    q[3] * t4 * t5 * t8 * t22 * 4.0) - d155 * t5 * t8 * t22 * 4.0) + d138 *
    t15 * t20) + d140 * t15 * t20) - d157 * 4.0) + d158 * 4.0) + d164 * 4.0) +
    d163 * 4.0) - d134 * t27 * 2.0) - d165 * 4.0) - d136 * t27 * 2.0) + d73 *
    t26 * 4.0) - d138 * t22 * t27 * 2.0) - d140 * t22 * t27 * 2.0) + d59 * t27)
    + d167 * 4.0) - d78 * t27 * 2.0) - d60 * t27 * 2.0) + d126 * t26 * 4.0) +
    d169 * 4.0) - d171 * 4.0) - d190 * t22 * 2.0) - d146 * t6 * t9 * t22 * 2.0)
    - d170 * 4.0) - d107 * t5 * t8 * t9 * t22 * 2.0) + d186 * t15 * t20) + d172)
    + d188 * t15 * t20) + d173 * 4.0) - d128 * t27 * 2.0) - d148 * 4.0) -
    lb_Y_tmp * 2.0) - d174 * t8 * t9 * t22) + d176 * t6 * t9 * t22) - d149 * t8 *
    t9 * t22) + d184 * t6 * t9 * t22) + d79 * t5 * t8 * t9 * t22) - d82 * t5 *
    t6 * t9 * t22) - d84 * t26 * 2.0) + d84 * t27) - d89 * t27) + jb_Y_tmp * t27)
    + d_Y_tmp_tmp * t12 * t22) + nb_Y_tmp * t12 * t22) - d45 * t10 * t22 * t25 *
    2.0) - d51 * t10 * t22 * t25 * 2.0) + d53 * t10 * t15 * t20 * t27) - d52 *
    t7 * t10 * t22 * t24 * t27) + d56 * t10 * t22 * t24 * t26 * 8.0) - q[3] *
    t3 * t7 * t10 * t22 * t26 * t27) + d90 * t27) + d11 * t27) - d91 * t27 * 4.0)
    - dq[0] * dq[2] * q[3] * t2 * t3 * t4 * t9 * t22 * 2.0) - d207 * t9 *
    t22 * 2.0) - d208 * t6 * t8 * t9 * t22 * 2.0) + d204 * t15 * t20) +
    f_Y_tmp_tmp * t9 * t15 * t20) - d70 * t6 * t8 * t9 * t22 * 2.0) - d206 * 2.0)
    + d58 * t6 * t8 * t9 * t15 * t20) + dq[0] * dq[1] * q[3] * t2 * t5 * t6 *
    t22 * t26 * 8.0) - d135 * t5 * t8 * t22 * t24 * 8.0) - kb_Y_tmp * t26 * 8.0)
    - d204 * t22 * t27 * 2.0) + dq[1] * dq[2] * q[3] * t4 * t5 * t8 * t22 *
    t24 * 8.0) + d150 * t15 * t20 * t27) + d93 * t15 * t20 * t27) + d156 * t15 *
    t20 * t27) + cb_Y_tmp * t24) + d95 * t15 * t20 * t27) + cb_Y_tmp * t26) -
    d157 * t27 * 4.0) + d158 * t27 * 4.0) - d163 * t26 * 8.0) + d164 * t27 * 4.0)
    - d165 * t27 * 4.0) - bb_Y_tmp * t22 * t24 * t26 * 4.0) + d167 * t27 * 4.0)
    + d113 * t5 * t6 * t8 * t22 * 8.0) - d144 * t5 * t8 * t9 * t22 * 2.0) + d209
    * t15 * t20) + d168 * t8 * t9 * t15 * t20) + d130 * t5 * t6 * t9 * t15 * t20)
    - d169 * t26 * 8.0) + d170 * t24 * 8.0) - d171 * t27 * 4.0) + d172 * t27) +
    d173 * t27 * 4.0) - d148 * t27 * 4.0) - d211 * t5 * t6 * t8 * t22 * 4.0) +
    d174 * t5 * t8 * t9 * t22) - d176 * t5 * t6 * t9 * t22) + d211 * t6 * t8 *
    t15 * t20) + mb_Y_tmp * t15 * t20) + lb_Y_tmp * t26 * 4.0) - mb_Y_tmp * t22 *
    t24 * 4.0) + d88 * t15 * t20 * t24) - d83 * t7 * t22 * t26 * t27 * 2.0) -
    d212 * t4 * t5 * t9 * t10 * t22 * 2.0) - d44 * t6 * t7 * t8 * t10 * t22 *
    4.0) + q_Y_tmp * t10 * t15 * t20) - d96 * t6 * t8 * t9 * t10 * t22 * 2.0) +
    fb_Y_tmp * t10 * t15 * t20) + e_Y_tmp * t24) + e_Y_tmp * t26) - d103 * t24 *
    t26 * 4.0) + k_Y_tmp) + n_Y_tmp * 4.0) - o_Y_tmp * 2.0) + m_Y_tmp * t6 * t8 *
    t9 * t22 * 4.0) + f_Y_tmp * t15 * t20) - f_Y_tmp * t22 * t26 * 4.0) + d206 *
    t24 * 4.0) + db_Y_tmp * t15 * t20 * t27) + d185 * t5 * t6 * t9 * t15 * t20)
                      + ddq[1] * q[3] * t2 * t4 * t6 * t8 * t15 * t20 * t27) +
                     ddq[0] * q[3] * t4 * t7 * t8 * t15 * t20 * t24 * t27) +
                    t29 * t6 * t7 * t8 * t10 * t22 * 8.0) - q[3] * t2 * t4 *
                   t6 * t7 * t8 * t10 * t22 * t27 * 4.0) + d_Y_tmp_tmp * t10 *
                  t15 * t20 * t25) + nb_Y_tmp * t10 * t15 * t20 * t25) + k_Y_tmp
                * t27) - d207 * t6 * t7 * t8 * t22 * 8.0) + e_Y_tmp_tmp * t3 *
              t4 * t5 * t9 * t15 * t20) - eb_Y_tmp * t6 * t8 * t9 * t22 * 4.0) +
            d208 * t5 * t6 * t8 * t9 * t15 * t20) + p_Y_tmp * t15 * t20) +
          n_Y_tmp * t27 * 4.0) + o_Y_tmp * t26 * 4.0) - p_Y_tmp * t22 * t24 *
        4.0) - q[3] * t2 * t3 * t4 * t5 * t6 * t7 * t8 * t10 * t22 * 4.0) +
      u_Y_tmp) + u_Y_tmp * t27) / 4.0;
  d5 = d * t19;
  d10 = d36 * t19;
  d11 = d42 * t19;
  d12 = q[3] * t10 * t19;
  d1 = d1 * t15 * t18;
  d13 = d175 * t19;
  d14 = d36 * t5;
  d15 = q[3] * t11 * t19;
  d17 = d43 * t6;
  d18 = d17 * t10;
  d29 = d18 * t19;
  d31 = q[3] * t4;
  d41 = d31 * t8;
  d44 = d41 * t10;
  d45 = d44 * t19;
  d51 = d41 * t11 * t19;
  d53 = d27 * t7;
  d54 = d53 * t19;
  d57 = d27 * t5 * t7 * t19;
  d53 = d53 * t15 * t18;
  d58 = d54 * t24;
  d54 *= t26;
  d4 *= t4;
  d43 = d43 * t5 * t6;
  d31 = d31 * t5 * t8;
  d59 = d43 * t10;
  d60 = d59 * t19;
  d43 *= t11;
  d63 = d31 * t10;
  d31 = d31 * t11 * t19;
  d17 *= t11;
  d70 = d61 * t4;
  d73 = d57 * t24;
  d78 = d58 * t26;
  d37 *= t4;
  d79 = d63 * t19;
  d82 = d79 * t24;
  e_Y_tmp = d52 * t4;
  f_Y_tmp = d18 * t15 * t18 * t25 * t26;
  k_Y_tmp = d132 * t4;
  n_Y_tmp = k_Y_tmp * t6 * t7 * t8 * t19;
  o_Y_tmp = t34 * t38;
  p_Y_tmp = d7 * t15 * t18;
  u_Y_tmp = d29 * t26;
  gb_Y_tmp = d17 * t15 * t18 * t26;
  hb_Y_tmp = d45 * t24 * t25;
  ib_Y_tmp = d132 * t3 * t4;
  b_Y[10] = o_Y_tmp *
    (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((
    (((((((((((((((((((((((((((((d5 * -2.0 + d10) - d11) + d9 * t19 * 4.0) - d20
    * t19 * 4.0) + d1) - d5 * t27 * 2.0) - d13) - d14 * t19 * 2.0) + d10 * t27)
    - d11 * t27) + d12 * t28 / 2.0) - d15 * t28 / 2.0) - d12 * t30 / 2.0) + d15 *
    t30 / 2.0) - d65 * t9 * t19 * 2.0) - d64 * t19 * t31) + d65 * t19 * t31) -
    d19 * t19 * 4.0) + p_Y_tmp) + d1 * t27) + d42 * t5 * t15 * t18) - d13 * t27)
    + d210 * t8 * t9 * t19) - d4 * t6 * t9 * t19) + d175 * t5 * t15 * t18) - d60
    * 2.0) - d31 * 2.0) - d29 * t25) - u_Y_tmp * 2.0) + d29 * t27) - d17 * t19 *
    t27) + d45 * t25) - d51 * t24 * 2.0) - d45 * t27) + d51 * t27) - d57 * 4.0)
    - y_Y_tmp * t9 * t19 * 2.0) + d53) + d64 * t9 * t15 * t18) - d58 * 2.0) -
    d54 * 2.0) - d151 * t19 * 2.0) + p_Y_tmp * t27) - d70 * t5 * t6 * t19 * 2.0)
    + d73 * 4.0) + d57 * t26 * 4.0) - Y_tmp_tmp * t8 * t19 * t27 * 2.0) + d53 *
    t27) + d78 * 4.0) - d58 * t27 * 2.0) - d54 * t27 * 2.0) - d162 * t19 * 2.0)
    + d152 * t15 * t18) - d37 * t7 * t9 * t19) - d210 * t5 * t8 * t9 * t19) + d4
    * t5 * t6 * t9 * t19) - d36 * t6 * t7 * t8 * t9 * t19) + d43 * t15 * t18) +
    d63 * t15 * t18) + d60 * t26 * 4.0) - d43 * t19 * t26 * 4.0) - d82 * 4.0) -
    d79 * t25 * 2.0) + d31 * t24 * 4.0) + gb_Y_tmp) + d44 * t15 * t18 * t24) -
    d18 * t19 * t25 * t27) - u_Y_tmp * t27 * 2.0) - hb_Y_tmp * 2.0) + d41 * t10 *
    t19 * t25 * t27) - d41 * t11 * t19 * t24 * t27 * 2.0) - ib_Y_tmp * t9 * t19 *
    2.0) - d64 * t2 * t4 * t5 * t7 * t19 * 2.0) - d27 * t3 * t6 * t8 * t9 * t19 *
    2.0) - d64 * t5 * t6 * t7 * t8 * t19 * 2.0) + Y_tmp_tmp * t5 * t8 * t15 *
    t18) + y_Y_tmp * t5 * t9 * t15 * t18) + d70 * t6 * t15 * t18 * t27) - d73 *
    t26 * 8.0) + d78 * t27 * 4.0) - ab_Y_tmp * t19 * 2.0) - dq[0] * dq[3] * t5
    * t6 * t7 * t8 * t9 * t19 * 2.0) + r_Y_tmp * t15 * t18) + d177 * t15 * t18)
    + d178 * t15 * t18) + d37 * t5 * t7 * t9 * t19) + d14 * t6 * t7 * t8 * t9 *
    t19) - d212 * t7 * t8 * t9 * t10 * t19) + e_Y_tmp * t6 * t7 * t9 * t10 * t19)
                     + d59 * t15 * t18 * t25) - d60 * t25 * t26 * 4.0) + d82 *
                   t25 * 4.0) + f_Y_tmp) + gb_Y_tmp * t27) + q[3] * t4 * t8 *
                t10 * t15 * t18 * t24 * t27) - hb_Y_tmp * t27 * 2.0) + n_Y_tmp *
              4.0) + d137 * t4 * t7 * t15 * t18 * t27) + d64 * t6 * t7 * t8 *
            t15 * t18 * t27) + d212 * t5 * t7 * t8 * t9 * t10 * t19) - e_Y_tmp *
          t5 * t6 * t7 * t9 * t10 * t19) + f_Y_tmp * t27) - k_Y_tmp * t5 * t6 *
        t7 * t8 * t19 * 8.0) + ib_Y_tmp * t5 * t9 * t15 * t18) + dq[0] * dq[1]
      * q[3] * t3 * t5 * t6 * t8 * t9 * t15 * t18) + n_Y_tmp * t27 * 4.0) *
    -0.25;
  d1 = t5 * t13;
  d4 = t5 * t10;
  d5 = t5 * t11;
  d10 = t9 * t10;
  d11 = t9 * t11;
  d12 = t10 * t24;
  d13 = t11 * t24;
  d14 = t10 * t26;
  d15 = t11 * t26;
  d17 = d2 * t5;
  d18 = t9 * t13;
  d20 = ddq[3] * t5;
  d27 = d28 * t4;
  d29 = ddq[1] * t6;
  d31 = d29 * t8;
  d36 = t3 * t5;
  d37 = t3 * t9;
  d41 = t10 * t25;
  d42 = t5 * t9;
  d43 = d42 * t10;
  d42 *= t11;
  d44 = d4 * t24;
  d45 = d4 * t25;
  d51 = d5 * t24;
  d52 = d10 * t24;
  d53 = d10 * t25;
  d54 = d11 * t24;
  d57 = d12 * t25;
  d58 = d12 * t26;
  d59 = d41 * t26;
  d60 = d13 * t26;
  d63 = ddq[0] * t4;
  d64 = d43 * t24;
  d70 = d43 * t25;
  d73 = d42 * t24;
  d78 = d44 * t25;
  d79 = d52 * t25;
  d82 = d57 * t26;
  d83 = d192 * t5;
  d84 = d63 * t6;
  d88 = d27 * t5;
  d89 = d38 * t7 * t8;
  d90 = ddq[1] * t5;
  d91 = d90 * t6;
  d92 = d91 * t8;
  d96 = d84 * t7;
  d101 = d38 * t5;
  d103 = d101 * t7 * t8;
  d63 = d63 * t5 * t6;
  d124 = d46 * t4;
  d126 = d124 * t7;
  d128 = t6 * t7 * t8;
  d130 = Y_tmp * t4;
  d132 = d25 * t4;
  d133 = d99 * t8;
  d134 = d130 * t6;
  d135 = d189 * t8;
  d136 = d132 * t6;
  d144 = d99 * t5;
  d146 = d142 * t8;
  d148 = d99 * t6 * t7;
  d149 = b_Y_tmp_tmp * t4;
  d150 = d149 * t6;
  d151 = d80 * t4;
  d152 = d144 * t8;
  d155 = d130 * t5;
  d156 = d155 * t6;
  d130 = d130 * t7 * t8;
  d157 = d189 * t5;
  d158 = d157 * t8;
  d132 = d132 * t5 * t6;
  d162 = d151 * t7;
  d109 *= t7;
  d163 = d109 * t8;
  d164 = d64 * t25;
  d165 = d144 * t6 * t7;
  d167 = d151 * t5;
  d168 = d167 * t7;
  d155 = d155 * t7 * t8;
  d169 = d17 * t6;
  d170 = d169 * t7 * t8;
  d171 = d148 * t9;
  d172 = d130 * t9;
  d173 = d128 * t10;
  d174 = d133 * t9;
  d175 = d134 * t9;
  d176 = d146 * t9;
  d177 = d150 * t9;
  d178 = d16 * t7;
  d184 = d128 * t9;
  d185 = d2 * t6;
  d189 = d185 * t7 * t8;
  e_Y_tmp = d106 * t6 * t8;
  t29 = d16 * t6 * t8;
  f_Y_tmp = t29 * t9;
  Y_tmp_tmp = t29 * t10;
  d_Y_tmp_tmp = t3 * t6;
  k_Y_tmp = d_Y_tmp_tmp * t7 * t8;
  n_Y_tmp = e_Y_tmp * t9;
  e_Y_tmp_tmp = d36 * t6;
  p_Y_tmp = e_Y_tmp_tmp * t7 * t8;
  r_Y_tmp = e_Y_tmp * t10;
  u_Y_tmp = f_Y_tmp * t10;
  gb_Y_tmp = Y_tmp_tmp * t25;
  hb_Y_tmp = d165 * t9;
  ib_Y_tmp = d155 * t9;
  jb_Y_tmp = n_Y_tmp * t10;
  kb_Y_tmp = t2 * t3 * t4 * t7 * t10;
  f_Y_tmp_tmp = d106 * t7;
  lb_Y_tmp = p_Y_tmp * t10;
  mb_Y_tmp = d142 * t5 * t8;
  nb_Y_tmp = d149 * t5 * t6;
  y_Y_tmp = d63 * t7;
  ab_Y_tmp = f_Y_tmp_tmp * t10;
  bb_Y_tmp = k_Y_tmp * t10;
  cb_Y_tmp = d178 * t9;
  b_Y[11] =
    (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((
    (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((
    (((((((((((((((((((((ddq[3] * t36 / 4.0 + ddq[3] * t39 / 2.0) + t10 * t38 /
    2.0) + t11 * t38 / 2.0) + t12 * t38 / 4.0) - t13 * t38 / 4.0) - t13 * t40) -
    d2 * t38 / 2.0) - d20 * t39 / 2.0) - ddq[3] * t9 * t38 / 2.0) - b_Y_tmp *
    t38 / 2.0) - d4 * t38 / 2.0) - d5 * t38 / 2.0) - t5 * t12 * t38 / 2.0) - d10
    * t36 / 4.0) - d1 * t38 / 4.0) - d11 * t36 / 4.0) - t9 * t12 * t36 / 4.0) +
    d1 * t40) + d18 * t39) + d12 * t38 / 4.0) - d13 * t38 / 4.0) + d14 * t38 /
    4.0) - d15 * t38 / 4.0) + t12 * t27 * t38 / 4.0) + t12 * t31 * t36 / 8.0) +
    d192 * t38 / 2.0) + d17 * t38) + d2 * t9 * t36 / 2.0) - d2 * t27 * t38 / 2.0)
    - d2 * t31 * t36 / 4.0) + d27 * t36 / 4.0) + d31 * t36 / 4.0) + d36 * t10 *
    t38) + d37 * t10 * t36 / 2.0) - d44 * t38 / 2.0) - b_Y_tmp * t27 * t38 / 2.0)
    - d45 * t38 / 2.0) + d51 * t38 / 2.0) - d4 * t26 * t38 / 2.0) - d52 * t36 /
    4.0) + d5 * t26 * t38 / 2.0) - d53 * t36 / 4.0) + d54 * t36 / 4.0) - d10 *
    t26 * t36 / 4.0) + d11 * t26 * t36 / 4.0) - d57 * t38 / 4.0) - d58 * t38 /
    2.0) + d12 * t27 * t38 / 4.0) - d59 * t38 / 4.0) + d60 * t38 / 2.0) + d41 *
    t27 * t38 / 2.0) - d13 * t27 * t38 / 4.0) + d14 * t27 * t38 / 4.0) - d15 *
    t27 * t38 / 4.0) - d83 * t38) - d192 * t9 * t36 / 2.0) + d192 * t27 * t38 /
    2.0) - d88 * t36 / 4.0) + d89 * t36 / 4.0) - d96 * t36 / 4.0) - d92 * t36 /
    4.0) - d36 * t9 * t10 * t36 / 2.0) + d64 * t36 / 4.0) + d70 * t36 / 2.0) -
    d73 * t36 / 4.0) + d43 * t26 * t36 / 4.0) - d42 * t26 * t36 / 4.0) + d78 *
    t38 / 2.0) + d44 * t26 * t38) + d45 * t26 * t38 / 2.0) - d51 * t26 * t38) +
    d79 * t36 / 4.0) + d52 * t26 * t36 / 2.0) + d53 * t26 * t36 / 4.0) - d54 *
    t26 * t36 / 2.0) + d82 * t38 / 2.0) - d57 * t27 * t38 / 4.0) - d58 * t27 *
    t38 / 2.0) - d59 * t27 * t38 / 4.0) + d60 * t27 * t38 / 2.0) - d103 * t36 /
    4.0) + y_Y_tmp * t36 / 4.0) - d126 * t10 * t36 / 4.0) + ab_Y_tmp * t36 / 2.0)
    - Y_tmp_tmp * t38 / 2.0) + t29 * t11 * t38 / 2.0) - cb_Y_tmp * t10 * t38 /
    2.0) - t3 * t6 * t7 * t8 * t10 * t36 / 4.0) + d163 * t10 * t36 / 2.0) - d184
    * t10 * t38 / 2.0) - d178 * t10 * t27 * t36 / 2.0) - d173 * t27 * t36 / 2.0)
    - d164 * t36 / 4.0) - d64 * t26 * t36 / 2.0) - d70 * t26 * t36 / 4.0) + d73 *
    t26 * t36 / 2.0) - d78 * t26 * t38) - d79 * t26 * t36 / 2.0) + d82 * t27 *
    t38 / 2.0) + d146 * t36 / 2.0) - d150 * t36 / 2.0) - d152 * t36 / 2.0) +
    d156 * t36 / 2.0) + d148 * t38 / 2.0) + d158 * t36 / 2.0) - d132 * t36 / 2.0)
    + d83 * t9 * t36 / 2.0) + d174 * t38 / 2.0) - d175 * t38 / 2.0) - d130 * t38
    / 2.0) - d135 * t9 * t38 / 2.0) + d136 * t9 * t38 / 2.0) + d133 * t27 * t36 /
    2.0) - d134 * t27 * t36 / 2.0) - d135 * t27 * t36 / 2.0) + d136 * t27 * t36 /
    2.0) - d168 * t36 / 2.0) - d165 * t38) - d176 * t38 / 2.0) - d171 * t36 /
    2.0) + d177 * t38 / 2.0) + d162 * t9 * t38 / 2.0) - d152 * t9 * t38 / 2.0) +
    d156 * t9 * t38 / 2.0) + d155 * t38) - d170 * t36 / 2.0) + d172 * t36 / 2.0)
    + d158 * t9 * t38 / 2.0) - d132 * t9 * t38 / 2.0) + d189 * t9 * t38 / 2.0) -
    d146 * t27 * t36 / 2.0) + d150 * t27 * t36 / 2.0) + d162 * t27 * t36 / 2.0)
    - d148 * t26 * t38) + d148 * t27 * t38 / 2.0) + d130 * t24 * t38) - d130 *
    t27 * t38 / 2.0) + d2 * t6 * t7 * t8 * t27 * t36 / 2.0) - d124 * t5 * t7 *
    t10 * t36 / 4.0) + d126 * t9 * t10 * t38 / 2.0) + r_Y_tmp * t38) - e_Y_tmp *
    t11 * t38) + f_Y_tmp_tmp * t9 * t10 * t38 / 2.0) + u_Y_tmp * t36 / 2.0) -
    lb_Y_tmp * t36 / 4.0) - f_Y_tmp * t11 * t36 / 2.0) + k_Y_tmp * t9 * t10 *
    t38 / 2.0) + d163 * t9 * t10 * t38 / 2.0) + kb_Y_tmp * t27 * t36 / 2.0) +
    gb_Y_tmp * t38 / 2.0) - Y_tmp_tmp * t27 * t38 / 2.0) + t29 * t11 * t27 * t38
    / 2.0) + bb_Y_tmp * t27 * t36 / 2.0) + d164 * t26 * t36 / 2.0) + mb_Y_tmp *
    t9 * t38 / 2.0) + hb_Y_tmp * t36 / 2.0) - nb_Y_tmp * t9 * t38 / 2.0) - d168 *
                      t9 * t38 / 2.0) - ib_Y_tmp * t36 / 2.0) - d170 * t9 * t38 /
                    2.0) + d165 * t26 * t38 * 2.0) + d171 * t26 * t36) - d155 *
                 t24 * t38 * 2.0) - d172 * t24 * t36) - dq[0] * dq[1] * t2 *
               t6 * t7 * t26 * t27 * t38) + dq[0] * dq[1] * t4 * t7 * t8 * t24
              * t27 * t38) - t2 * t3 * t4 * t5 * t7 * t9 * t10 * t38 / 2.0) -
            jb_Y_tmp * t36 / 2.0) + n_Y_tmp * t11 * t36 / 2.0) - p_Y_tmp * t9 *
          t10 * t38 / 2.0) - r_Y_tmp * t25 * t38) - u_Y_tmp * t25 * t36 / 2.0) +
       gb_Y_tmp * t27 * t38 / 2.0) - hb_Y_tmp * t26 * t36) + ib_Y_tmp * t24 *
     t36) + jb_Y_tmp * t25 * t36 / 2.0;
  d1 = t2 * t8;
  d2 = d1 * t11;
  d4 = d49 * t11;
  d12 = d40 * t8;
  d13 = d97 * t8;
  d14 = d1 * t10;
  d15 = d49 * t10;
  d17 = Y_tmp * t9;
  d41 = d75 * t3;
  d42 = d41 * t4;
  d43 = s_Y_tmp * t8;
  d44 = ddq[1] * t4 * t5 * t6;
  d45 = d40 * t3;
  d51 = d45 * t8;
  d52 = ddq[3] * t3;
  d53 = d52 * t4;
  d54 = d53 * t6;
  d57 = d46 * t8;
  d58 = d57 * t11;
  d30 *= t8;
  d59 = d196 * t11;
  d60 = d30 * t11;
  d64 = d32 * t11;
  d70 = d30 * t13 * t32;
  d73 = d32 * t13 * t32;
  d78 = d80 * t8;
  d79 = d30 * t10;
  d80 = d32 * t10;
  d82 = d196 * t10;
  d97 = dq[0] * dq[3] * t6 * t8;
  d107 *= t3;
  d126 = d107 * t4;
  d130 = d161 * t8;
  d142 = d8 * t6 * t8;
  d81 *= t8;
  d148 = d105 * t9;
  d149 = dq[0] * dq[1] * t5 * t6 * t8;
  d155 = d166 * t8;
  d158 = d97 * t9;
  d161 = d179 * t7 * t8;
  d164 = d199 * t8;
  d87 *= t8;
  b_Y_tmp = d87 * t13 * t32;
  e_Y_tmp = g_Y_tmp_tmp * t13 * t32;
  f_Y_tmp = d153 * t7;
  k_Y_tmp = dq[0] * dq[1] * t5 * t6 * t7 * t8;
  n_Y_tmp = d127 * t8;
  p_Y_tmp = d87 * t11;
  r_Y_tmp = t3 * t4 * t5 * t6 * t11;
  s_Y_tmp = d87 * t10;
  b_Y[12] =
    (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((
    (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((
    (((((((((((((((((d17 * t32 * t35 - d39 * t32 * t35) + d76 * t32 * t35 / 2.0)
    + d66 * t33 * t35) - d67 * t33 * t35) - d13 * t32 * t35) - d12 * t32 * t36 /
    2.0) + d68 * t32 * t36 / 2.0) + ddq[0] * t7 * t9 * t32 * t35) + d98 * t8 *
    t32 * t35 / 2.0) - d14 * t32 * t35 / 2.0) + d15 * t32 * t35 / 2.0) + d2 *
    t32 * t35 / 2.0) - d4 * t32 * t35 / 2.0) - d1 * t12 * t32 * t35 / 2.0) + d49
    * t12 * t32 * t35 / 2.0) - d2 * t34 * t35 * 2.0) + d4 * t34 * t35 * 2.0) +
    d1 * t13 * t32 * t38) - d49 * t13 * t32 * t38) + d182 * t32 * t35 * 2.0) +
    d183 * t32 * t35) - d42 * t32 * t35 / 2.0) - ddq[2] * t2 * t4 * t5 * t32 *
    t35 / 2.0) - d72 * t33 * t35) + d74 * t33 * t35) + d43 * t32 * t35 * 2.0) -
    d77 * t33 * t35) + d44 * t33 * t35) + d51 * t32 * t36 / 2.0) - d54 * t32 *
    t36 / 2.0) - d28 * t7 * t8 * t32 * t35 / 2.0) + d67 * t7 * t32 * t35 / 2.0)
    - Y_tmp_tmp_tmp * t7 * t9 * t32 * t35) + ddq[0] * t5 * t6 * t8 * t32 * t35)
    - d3 * t6 * t8 * t32 * t35 / 2.0) + ddq[3] * t2 * t5 * t8 * t32 * t36 / 2.0)
    - ddq[3] * t4 * t5 * t6 * t32 * t36 / 2.0) - d195 * t8 * t32 * t35 / 2.0) +
    d12 * t9 * t32 * t35 / 2.0) - d68 * t9 * t32 * t35 / 2.0) - d39 * t25 * t32 *
    t35) - d13 * t25 * t32 * t35) + d57 * t10 * t32 * t35) - d82 * t32 * t35) -
    d58 * t32 * t35 / 2.0) + d59 * t32 * t35 / 2.0) + d57 * t12 * t32 * t35 /
    2.0) + d79 * t32 * t35 / 2.0) - d196 * t12 * t32 * t35 / 2.0) - d80 * t32 *
    t35 / 2.0) + d58 * t34 * t35 * 2.0) - d60 * t32 * t35 / 2.0) - d59 * t34 *
    t35 * 2.0) + d64 * t32 * t35 / 2.0) + d30 * t12 * t32 * t35 / 2.0) - d32 *
    t12 * t32 * t35 / 2.0) + d60 * t34 * t35 * 2.0) + d70 * t35 / 2.0) - d64 *
    t34 * t35 * 2.0) - d73 * t35 / 2.0) - d57 * t13 * t32 * t38) + d48 * t11 *
    t33 * t35) + d196 * t13 * t32 * t38) - d50 * t11 * t33 * t35) - d70 * t38) +
    d73 * t38) - d1 * t9 * t13 * t32 * t36) + d49 * t9 * t13 * t32 * t36) - d14 *
    t25 * t32 * t35 / 2.0) + d15 * t25 * t32 * t35 / 2.0) + d100 * t33 * t35) +
    d105 * t32 * t36) + d78 * t32 * t35) - d110 * t32 * t35) - d108 * t32 * t36)
    + b_Y_tmp_tmp * t9 * t32 * t35) + d9 * t7 * t32 * t35) + d180 * t33 * t35) -
    c_Y_tmp_tmp * t9 * t33 * t35) + d125 * t8 * t32 * t36) - d * t7 * t9 * t32 *
    t36) - n_Y_tmp * t32 * t36) - d17 * t25 * t32 * t35 * 2.0) - d99 * t3 * t4 *
    t33 * t35 * 2.0) - Y_tmp * t2 * t4 * t5 * t33 * t35) - d * t2 * t3 * t4 *
    t32 * t36 * 2.0) - Y_tmp * t2 * t4 * t7 * t32 * t35 * 2.0) - d191 * t8 * t32
    * t35 * 2.0) + d197 * t32 * t35 * 2.0) - d147 * t32 * t36) + d126 * t32 *
    t36) - d81 * t32 * t35) + d198 * t32 * t35) + d202 * t32 * t36) - d148 * t32
    * t35) - d19 * t7 * t32 * t35) - d160 * t33 * t35 * 2.0) + d108 * t9 * t32 *
    t35) + d117 * t9 * t33 * t35) - d149 * t33 * t35) - d130 * t32 * t36 * 2.0)
    - d161 * t32 * t35 * 2.0) + d7 * t7 * t9 * t32 * t36) - d155 * t32 * t36) +
    d142 * t32 * t36) + d203 * t8 * t32 * t36) - d158 * t32 * t35) + n_Y_tmp *
    t9 * t32 * t35) + d100 * t25 * t33 * t35) + d105 * t25 * t32 * t36) + d78 *
    t25 * t32 * t35) - d110 * t25 * t32 * t35) + d180 * t25 * t33 * t35) + d97 *
    t25 * t32 * t36) - g_Y_tmp * t32 * t35 * 2.0) + d42 * t5 * t32 * t35 / 2.0)
    + ddq[1] * t2 * t3 * t5 * t8 * t33 * t35) - t_Y_tmp * t33 * t35) - h_Y_tmp *
    t8 * t32 * t35 * 2.0) - d45 * t5 * t8 * t32 * t36 / 2.0) + d53 * t5 * t6 *
    t32 * t36 / 2.0) + d69 * t7 * t8 * t32 * t35 / 2.0) - d44 * t7 * t32 * t35 /
    2.0) + d22 * t6 * t8 * t32 * t35 / 2.0) - d51 * t9 * t32 * t35 / 2.0) + d54 *
    t9 * t32 * t35 / 2.0) + d183 * t25 * t32 * t35) + d164 * t25 * t32 * t35) -
    s_Y_tmp * t32 * t35) + g_Y_tmp_tmp * t10 * t32 * t35) + p_Y_tmp * t32 * t35 /
    2.0) - g_Y_tmp_tmp * t11 * t32 * t35 / 2.0) - d87 * t12 * t32 * t35 / 2.0) +
    d47 * t5 * t6 * t12 * t32 * t35 / 2.0) - d46 * t5 * t8 * t11 * t34 * t35 *
    2.0) - b_Y_tmp * t35 / 2.0) + r_Y_tmp * t34 * t35 * 2.0) + e_Y_tmp * t35 /
    2.0) + b_Y_tmp * t38) - d85 * t11 * t33 * t35) - e_Y_tmp * t38) + d86 * t11 *
    t33 * t35) + d57 * t9 * t13 * t32 * t36) - d196 * t9 * t13 * t32 * t36) +
    d79 * t25 * t32 * t35 / 2.0) - d80 * t25 * t32 * t35 / 2.0) + d194 * t33 *
    t35 * 2.0) + d143 * t7 * t32 * t35 * 2.0) + d187 * t32 * t36 * 2.0) +
    f_Y_tmp * t32 * t35 * 2.0) + i_Y_tmp * t8 * t32 * t35 * 2.0) - j_Y_tmp * t32
    * t35 * 2.0) - d126 * t5 * t32 * t36) + d145 * t9 * t32 * t35 * 2.0) - d126 *
                     t9 * t32 * t35) + d200 * t33 * t35 * 2.0) + d159 * t7 * t8 *
                   t32 * t35 * 2.0) + d193 * t8 * t32 * t36 * 2.0) + k_Y_tmp *
                 t32 * t35 * 2.0) - d23 * t6 * t8 * t32 * t36) + d130 * t9 * t32
               * t35 * 2.0) - d142 * t9 * t32 * t35) - d153 * t25 * t33 * t35) -
            d147 * t25 * t32 * t36) - d81 * t25 * t32 * t35) + d198 * t25 * t32 *
          t35) - d148 * t25 * t32 * t35) - d149 * t25 * t33 * t35) - d155 * t25 *
       t32 * t36) - d158 * t25 * t32 * t35) - d194 * t7 * t32 * t35 * 2.0) -
    d102 * t7 * t8 * t32 * t35 * 2.0;
  d = d18 * t20;
  d1 = d10 * t20 * t21;
  d7 = ddq[2] * t4;
  d9 = d_Y_tmp_tmp * t8;
  d10 = t7 * t9;
  d12 = d16 * t10;
  d13 = d12 * t19 * t21;
  d15 = d10 * t13;
  d17 = d24 * t10;
  d18 = d17 * t19 * t21;
  d19 = Y_tmp_tmp_tmp * t4;
  d3 *= t4;
  d22 = d38 * t8;
  d23 = d181 * t8;
  d28 = d19 * t6;
  d30 = d101 * t8;
  d32 = t2 * t3 * t4 * t5;
  d38 = e_Y_tmp_tmp * t8;
  d39 = d124 * t10;
  d42 = d61 * t6;
  d44 = d94 * t3;
  d46 = d65 * t3 * t4;
  d47 = i_Y_tmp_tmp * t6;
  d49 = d115 * t10;
  d51 = d16 * t11;
  d53 = d24 * t11;
  d54 = d10 * t10;
  d57 = d10 * t11;
  d65 = d9 * t10;
  d66 = t3 * t7 * t9 * t10;
  d68 = d115 * t11;
  d69 = d205 * t6;
  d70 = d191 * t4;
  d34 = d34 * t3 * t4;
  d73 = d33 * t3;
  d74 = d112 * t6;
  d76 = d181 * t5 * t8;
  d19 = d19 * t5 * t6;
  d78 = d32 * t10;
  d79 = d32 * t11;
  d81 = d38 * t10;
  d87 = d38 * t11;
  d97 = d124 * t11;
  b_Y_tmp = d9 * t11;
  Y_tmp_tmp = d106 * t10;
  e_Y_tmp = d144 * t7 * t8;
  g_Y_tmp = d156 * t7;
  h_Y_tmp = d106 * t11;
  i_Y_tmp = d134 * t7;
  j_Y_tmp = ddq[1] * t9;
  b_Y[13] = v_Y_tmp *
    (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((
    (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((
    (((((((((((((((((((((((((((((((((((d * 4.0 - d33 * t9 * t20 * 2.0) + j_Y_tmp
    * t19 * t21 * 4.0) - d55 * t13 * t20 * 4.0) + d21 * t19 * 4.0) + d26 * t19 *
    4.0) - d15 * t19 * 4.0) - d11 * t18 * t21 * 4.0) - d1 * 2.0) - d * t21 * 2.0)
    - d62 * t19 * 4.0) + d6 * t19 * t21 * 4.0) - d35 * t19 * 2.0) - d111 * t19 *
    2.0) - d27 * t20 * t21 * 4.0) + d22 * t19 * t21 * 4.0) - d84 * t19 * t21 *
    4.0) - d75 * t8 * t19 * t21 * 2.0) - w_Y_tmp * t9 * t19 * t21 * 4.0) - d20 *
    t7 * t19 * t21 * 2.0) - d31 * t20 * t21 * 4.0) + d20 * t15 * t19 * t21) +
    d56 * t13 * t19 * 4.0) - d124 * t13 * t19 * 4.0) - d114 * t19 * 4.0) - d9 *
    t13 * t19 * 4.0) - d116 * t19 * 4.0) - d13 * 6.0) - d16 * t12 * t19 * t21 *
    2.0) + d37 * t11 * t18 * t21 * 4.0) - t3 * t9 * t10 * t20 * t21 * 2.0) - d18
    * 6.0) - d24 * t12 * t19 * t21 * 2.0) + d1 * t25 * 4.0) + d33 * t7 * t9 *
    t15 * t18) - d23 * t19 * t21 * 4.0) + d28 * t19 * t21 * 4.0) + d88 * t20 *
    t21 * 4.0) + d27 * t7 * t19 * t21 * 4.0) - d30 * t19 * t21 * 4.0) + d63 *
    t19 * t21 * 4.0) - d3 * t6 * t19 * t21 * 2.0) - d7 * t5 * t6 * t19 * t21 *
    2.0) - d89 * t20 * t21 * 2.0) + d92 * t20 * t21 * 4.0) + d29 * t7 * t8 * t19
    * t21 * 4.0) + d7 * t6 * t15 * t18 * t21) - d118 * t19 * 4.0) - d119 * t19 *
    4.0) + d32 * t13 * t19 * 4.0) + d38 * t13 * t19 * 4.0) + d39 * t19 * t21 *
    8.0) + Y_tmp_tmp * t19 * t21 * 6.0) - h_Y_tmp * t19 * t21 * 2.0) - d178 *
    t11 * t18 * t21 * 4.0) + d16 * t7 * t10 * t20 * t21 * 6.0) + d65 * t19 * t21
    * 8.0) - d66 * t19 * t21 * 2.0) + d49 * t19 * t21 * 6.0) - d68 * t19 * t21 *
    2.0) + d51 * t15 * t18 * t21) - d128 * t11 * t18 * t21 * 4.0) + d173 * t20 *
    t21 * 6.0) + d53 * t15 * t18 * t21) + d54 * t15 * t18 * t21) - d13 * t25 *
    2.0) + d57 * t15 * t18 * t21) + d15 * t15 * t18 * t21) - d18 * t25 * 2.0) +
    m_Y_tmp * t20 * 4.0) - d138 * t19 * 8.0) + d93 * t19 * 8.0) + d95 * t19 *
    4.0) - d140 * t19 * 4.0) + d61 * t3 * t9 * t19 * 4.0) + d42 * t8 * t20 * 4.0)
    + d151 * t19 * t21 * 8.0) - d133 * t20 * t21 * 4.0) + d134 * t20 * t21 * 4.0)
    - d154 * t5 * t19 * t21 * 4.0) + d135 * t20 * t21 * 4.0) - d136 * t20 * t21 *
    4.0) + d185 * t8 * t19 * t21 * 8.0) + db_Y_tmp * t19 * 8.0) - d204 * t19 *
    8.0) - eb_Y_tmp * t20 * 4.0) - m_Y_tmp * t7 * t19 * 4.0) + h_Y_tmp_tmp * t8 *
    t19 * 8.0) - d47 * t19 * 8.0) - d44 * t8 * t19 * 4.0) + d46 * t6 * t19 * 4.0)
    - d94 * t5 * t8 * t19 * 4.0) + d139 * t5 * t6 * t19 * 4.0) + d137 * t7 * t8 *
    t20 * 4.0) - d93 * t7 * t20 * 4.0) - d69 * t8 * t20 * 4.0) - d42 * t7 * t8 *
    t19 * 4.0) - d70 * t19 * t21 * 8.0) - d167 * t19 * t21 * 8.0) - d162 * t20 *
    t21 * 4.0) + d152 * t20 * t21 * 4.0) - d156 * t20 * t21 * 4.0) + d99 * t7 *
    t8 * t19 * t21 * 4.0) - i_Y_tmp * t19 * t21 * 4.0) - d192 * t6 * t8 * t19 *
    t21 * 8.0) - d25 * t2 * t5 * t8 * t20 * t21 * 4.0) + d25 * t4 * t5 * t6 *
    t20 * t21 * 4.0) - dq[1] * dq[2] * t2 * t7 * t8 * t19 * t21 * 4.0) + d136 *
    t7 * t19 * t21 * 4.0) - d113 * t9 * t20 * t21 * 4.0) - d169 * t8 * t19 * t21
    * 8.0) + d129 * t19 * t21 * 8.0) - d186 * t19 * t21 * 8.0) - d189 * t20 *
    t21 * 4.0) - d188 * t19 * t21 * 4.0) + d131 * t19 * t21 * 4.0) - d74 * t8 *
    t9 * t20 * t21 * 4.0) - d34 * t5 * t19 * 2.0) - d73 * t5 * t6 * t8 * t19 *
    2.0) + d34 * t15 * t18) + d120 * t15 * t18) + d73 * t6 * t8 * t15 * t18) +
    d121 * t15 * t18) + d76 * t19 * t21 * 4.0) - d19 * t19 * t21 * 4.0) - d88 *
    t7 * t19 * t21 * 4.0) - d41 * t5 * t8 * t19 * t21 * 2.0) - d45 * t4 * t9 *
    t19 * t21 * 2.0) - y_Y_tmp * t20 * t21 * 2.0) - d91 * t7 * t8 * t19 * t21 *
    4.0) + d41 * t8 * t15 * t18 * t21) - d52 * t6 * t8 * t9 * t19 * t21 * 2.0) +
    d75 * t5 * t8 * t15 * t18 * t21) + d96 * t15 * t19 * t21) + d40 * t4 * t9 *
    t15 * t18 * t21) + ddq[3] * t6 * t8 * t9 * t15 * t18 * t21) + q_Y_tmp * t13 *
    t19 * 4.0) + fb_Y_tmp * t13 * t19 * 4.0) - d78 * t19 * t21 * 8.0) - d79 *
    t19 * t21 * 2.0) - d32 * t12 * t19 * t21 * 2.0) - t2 * t3 * t4 * t5 * t13 *
    t19 * t21 * 2.0) - kb_Y_tmp * t20 * t21 * 4.0) + f_Y_tmp_tmp * t11 * t18 *
    t21 * 4.0) - ab_Y_tmp * t20 * t21 * 6.0) - d81 * t19 * t21 * 8.0) - d87 *
    t19 * t21 * 2.0) + d97 * t15 * t18 * t21) - d38 * t12 * t19 * t21 * 2.0) +
    d124 * t12 * t15 * t18 * t21) - t3 * t5 * t6 * t8 * t13 * t19 * t21 * 2.0) -
    bb_Y_tmp * t20 * t21 * 4.0) + d163 * t11 * t18 * t21 * 4.0) + d106 * t12 *
    t15 * t18 * t21) - d109 * t8 * t10 * t20 * t21 * 6.0) + d122 * t18 * t21) +
    b_Y_tmp * t15 * t18 * t21) + d9 * t12 * t15 * t18 * t21) + d115 * t12 * t15 *
    t18 * t21) + d123 * t18 * t21) - j_Y_tmp_tmp * t5 * t8 * t19 * 8.0) + d201 *
    t5 * t6 * t19 * 8.0) + eb_Y_tmp * t7 * t19 * 4.0) + d44 * t5 * t8 * t19 *
    4.0) - d46 * t5 * t6 * t19 * 4.0) - h_Y_tmp_tmp * t7 * t8 * t20 * 4.0) + d47
    * t7 * t20 * 4.0) + d69 * t7 * t8 * t19 * 4.0) + d70 * t5 * t19 * t21 * 8.0)
    + d168 * t20 * t21 * 4.0) - e_Y_tmp * t19 * t21 * 4.0) + g_Y_tmp * t19 * t21
                       * 4.0) + d83 * t6 * t8 * t19 * t21 * 8.0) - d209 * t19 *
                     t21 * 8.0) + d190 * t19 * t21 * 8.0) + d157 * t7 * t8 * t19
                   * t21 * 4.0) - d132 * t7 * t19 * t21 * 4.0) + d113 * t7 * t9 *
                 t19 * t21 * 4.0) + d107 * t8 * t9 * t19 * t21 * 4.0) - d8 * t4 *
               t6 * t9 * t19 * t21 * 4.0) + d170 * t20 * t21 * 4.0) - d104 * t7 *
             t8 * t9 * t20 * t21 * 4.0) + d141 * t7 * t9 * t20 * t21 * 4.0) +
           d74 * t7 * t8 * t9 * t19 * t21 * 4.0) + d3 * t5 * t6 * t15 * t18 *
          t21) + d103 * t15 * t19 * t21) + t2 * t3 * t4 * t5 * t7 * t10 * t20 *
        t21 * 4.0) + lb_Y_tmp * t20 * t21 * 4.0) + Y_tmp_tmp * t15 * t18 * t21 *
      t25) + d49 * t15 * t18 * t21 * t25) / 4.0;
  d = l_Y_tmp * t2;
  m_Y_tmp = ddq[0] * q[1];
  Y_tmp *= q[1];
  n_Y_tmp = Y_tmp * t2;
  q_Y_tmp = n_Y_tmp * t4;
  u_Y_tmp = q[1] * t2;
  db_Y_tmp = q[1] * t4 * t6;
  n_Y_tmp = n_Y_tmp * t3 * t4;
  eb_Y_tmp = Y_tmp * t3;
  fb_Y_tmp = m_Y_tmp * t2;
  gb_Y_tmp = u_Y_tmp * t5 * t8;
  b_Y[14] = o_Y_tmp * (((((((((((((((((((((((((((((((((((((((((((((((d2 * t21 *
    4.0 - d4 * t21 * 4.0) - d * t8 * t21 * 2.0) + d67 * t15 * t21) - d58 * t21 *
    4.0) + d59 * t21 * 4.0) - d60 * t21 * 4.0) + d64 * t21 * 4.0) - d2 * t18 *
    t21 * 2.0) - c_Y_tmp * t4 * t6 * t21 * 2.0) - l_Y_tmp * t4 * t5 * t6 * t21 *
    2.0) + fb_Y_tmp * t4 * t15 * t21) + m_Y_tmp * t6 * t8 * t15 * t21) - d182 *
    t18 * t21 * 2.0) - d183 * t18 * t21 * 2.0) + d72 * t15 * t21) + d77 * t15 *
    t21) - d43 * t18 * t21 * 2.0) - d164 * t18 * t21 * 2.0) + db_Y_tmp * t11 *
    t15 * t21) + p_Y_tmp * t21 * 4.0) - r_Y_tmp * t21 * 4.0) - d82 * t18 * t21 *
    2.0) - d64 * t18 * t21 * 2.0) - d14 * t18 * t21 * t25 * 2.0) - q_Y_tmp * t21
    * 4.0) - Y_tmp * t6 * t8 * t21 * 4.0) + n_Y_tmp * t21 * 4.0) + q_Y_tmp * t5 *
    t21 * 4.0) + eb_Y_tmp * t6 * t8 * t21 * 4.0) + Y_tmp * t5 * t6 * t8 * t21 *
    4.0) + d100 * t7 * t18 * t21 * 4.0) + d161 * t18 * t21 * 4.0) - d * t3 * t5 *
    t8 * t21 * 2.0) + t_Y_tmp * t15 * t21) + u_Y_tmp * t3 * t8 * t10 * t15 * t21)
    + gb_Y_tmp * t11 * t15 * t21) + db_Y_tmp * t10 * t15 * t21 * t25) - s_Y_tmp *
    t18 * t21 * 2.0) - d80 * t18 * t21 * t25 * 2.0) - n_Y_tmp * t5 * t21 * 4.0)
    - eb_Y_tmp * t5 * t6 * t8 * t21 * 4.0) - f_Y_tmp * t18 * t21 * 4.0) -
    k_Y_tmp * t18 * t21 * 4.0) + fb_Y_tmp * t3 * t4 * t5 * t15 * t21) + m_Y_tmp *
    t3 * t5 * t6 * t8 * t15 * t21) + x_Y_tmp * t4 * t5 * t6 * t10 * t15 * t21) +
                       gb_Y_tmp * t10 * t15 * t21 * t25) / 4.0;
  d = t5 * t7;
  d1 = d71 * t4;
  d2 = w_Y_tmp * t6 * t8;
  d3 = d16 * t9;
  d4 = d3 * t11;
  d6 = d24 * t9;
  Y_tmp = d124 * t9;
  c_Y_tmp = d9 * t9;
  f_Y_tmp = dq[0] * dq[1] * t2 * t7 * t8;
  b_Y[15] =
    (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((
    (((((d90 * t32 * t35 / 2.0 - j_Y_tmp * t32 * t36 / 2.0) - d5 * t33 * t35) +
    d11 * t33 * t36) - d27 * t33 * t36 / 2.0) - d22 * t32 * t36 / 2.0) + d84 *
    t32 * t36 / 2.0) - d90 * t7 * t33 * t35 / 2.0) - d31 * t33 * t36 / 2.0) +
    d_Y_tmp * t9 * t33 * t36 / 2.0) - d51 * t32 * t36 / 2.0) + d51 * t34 * t36)
    - d * t10 * t32 * t35 / 2.0) + d * t11 * t34 * t35) - d53 * t32 * t36 / 2.0)
    + d54 * t32 * t36 / 2.0) + d53 * t34 * t36) - d57 * t34 * t36) + d1 * t33 *
    t36 / 2.0) + d23 * t32 * t36 / 2.0) - d28 * t32 * t36 / 2.0) + d88 * t33 *
    t36 / 2.0) + d30 * t32 * t36 / 2.0) - d63 * t32 * t36 / 2.0) + d27 * t9 *
    t33 * t35 / 2.0) + d22 * t9 * t32 * t35 / 2.0) - d84 * t9 * t32 * t35 / 2.0)
    + d2 * t33 * t36 / 2.0) + d92 * t33 * t36 / 2.0) + d31 * t9 * t33 * t35 /
    2.0) + d39 * t32 * t36 / 2.0) - d97 * t34 * t36) + h_Y_tmp * t32 * t36 / 2.0)
    - h_Y_tmp * t34 * t36) + d36 * t7 * t10 * t32 * t35 / 2.0) + d4 * t32 * t35 /
    2.0) - d4 * t34 * t35) + d65 * t32 * t36 / 2.0) - d66 * t32 * t36 / 2.0) -
    b_Y_tmp * t34 * t36) + d68 * t32 * t36 / 2.0) - d68 * t34 * t36) + d6 * t11 *
    t32 * t35 / 2.0) - d24 * t9 * t11 * t34 * t35) - d12 * t25 * t32 * t36 / 2.0)
    - d17 * t25 * t32 * t36 / 2.0) + d133 * t33 * t36) - d134 * t33 * t36) -
    d146 * t33 * t36) + d150 * t33 * t36) - d152 * t33 * t36) + d156 * t33 * t36)
    - f_Y_tmp * t32 * t36) + i_Y_tmp * t32 * t36) - d174 * t33 * t35) + d175 *
    t33 * t35) - d1 * t5 * t33 * t36 / 2.0) - d76 * t32 * t36 / 2.0) + d19 * t32
    * t36 / 2.0) - d1 * t9 * t33 * t35 / 2.0) - d23 * t9 * t32 * t35 / 2.0) +
    d28 * t9 * t32 * t35 / 2.0) - w_Y_tmp * t5 * t6 * t8 * t33 * t36 / 2.0) - d2
    * t9 * t33 * t35 / 2.0) - d78 * t32 * t36 / 2.0) + d79 * t34 * t36) - Y_tmp *
                     t10 * t32 * t35 / 2.0) + Y_tmp * t11 * t34 * t35) - d81 *
                   t32 * t36 / 2.0) + d87 * t34 * t36) - c_Y_tmp * t10 * t32 *
                 t35 / 2.0) + c_Y_tmp * t11 * t34 * t35) + Y_tmp_tmp * t25 * t32
               * t36 / 2.0) + d3 * t10 * t25 * t32 * t35 / 2.0) + d49 * t25 *
             t32 * t36 / 2.0) + d6 * t10 * t25 * t32 * t35 / 2.0) + mb_Y_tmp *
           t33 * t36) - nb_Y_tmp * t33 * t36) + d176 * t33 * t35) + e_Y_tmp *
        t32 * t36) - d177 * t33 * t35) - g_Y_tmp * t32 * t36) + f_Y_tmp * t9 *
     t32 * t35) - i_Y_tmp * t9 * t32 * t35;
  b_Y[16] = 0.0;
  Y_tmp = t3 * t20 * t23;
  b_Y_tmp = t7 * t19 * t23;
  b_Y[17] = v_Y_tmp * (Y_tmp * 19.614 - b_Y_tmp * 19.614) * -0.25;
  b_Y[18] = 0.0;
  b_Y[19] = 0.0;
  b_Y[20] = 0.0;
  b_Y[21] = v_Y_tmp * (Y_tmp * 39.228 - b_Y_tmp * 39.228) * -0.25;
  b_Y[22] = 0.0;
  b_Y[23] = 0.0;
  b_Y[24] = ((d48 * t35 * 4.9035 - d50 * t35 * 4.9035) - d85 * t35 * 4.9035) +
    d86 * t35 * 4.9035;
  b_Y[25] = v_Y_tmp * ((((d10 * t21 * t22 * 19.614 + d124 * t21 * t22 * 19.614)
    + d9 * t21 * t22 * 19.614) - d32 * t21 * t22 * 19.614) - d38 * t21 * t22 *
                       19.614) / 4.0;
  b_Y[26] = o_Y_tmp * (((d48 * t19 * t21 * 19.614 - d50 * t19 * t21 * 19.614) -
                        d85 * t19 * t21 * 19.614) + d86 * t19 * t21 * 19.614) *
    -0.25;
  b_Y[27] = ((((((d36 * t35 * -4.9035 + d37 * t36 * 4.9035) - d178 * t36 *
                 4.9035) - d128 * t36 * 4.9035) + f_Y_tmp_tmp * t36 * 4.9035) +
              cb_Y_tmp * t35 * 4.9035) + d163 * t36 * 4.9035) + d184 * t35 *
    4.9035;
  b_Y[28] = dq[0] * t18;
  b_Y[29] = dq[1];
  b_Y[30] = 0.0;
  b_Y[31] = 0.0;
  b_Y[32] = 0.0;
  b_Y[33] = 0.0;
  b_Y[34] = dq[2] * t21;
  b_Y[35] = dq[3];
  b_Y[36] = 0.0;
  b_Y[37] = q[1];
  b_Y[38] = 0.0;
  b_Y[39] = 0.0;
  b_Y[40] = 0.0;
  b_Y[41] = 0.0;
  b_Y[42] = 0.0;
  b_Y[43] = q[3];
  Map<MatrixXd> dummy(b_Y,4,11);
  Y = dummy;
}


void Lagrange::update(const srl::State &state)
{
    Lagrange::A_update(MatrixXd::Identity(4,4)*state.q);
    Lagrange::M_update(MatrixXd::Identity(4,4)*state.q);
    Lagrange::g_update(MatrixXd::Identity(4,4)*state.q);
    Lagrange::c_update(MatrixXd::Identity(4,4)*state.q,MatrixXd::Identity(4,4)*state.dq);
    Lagrange::k_update(MatrixXd::Identity(4,4)*state.q);
    Lagrange::d_update(MatrixXd::Identity(4,4)*state.q,MatrixXd::Identity(4,4)*state.dq);
    Lagrange::p_update(MatrixXd::Identity(4,4)*state.q);
    Lagrange::J_update(MatrixXd::Identity(4,4)*state.q);
    Lagrange::JDot_update(MatrixXd::Identity(4,4)*state.q,MatrixXd::Identity(4,4)*state.dq);
    Lagrange::Y_update(MatrixXd::Identity(4,4)*state.q,MatrixXd::Identity(4,4)*state.dq,MatrixXd::Identity(4,4)*state.ddq);

    //std::cout << "q:\n" << q << std::endl;
    //Map<VectorXd> q(data);
}
